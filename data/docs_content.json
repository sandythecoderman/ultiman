[
  {
    "text": "This text identifies the document as the copyrighted 'Infraon Infinity User Guide' by EIMS."
  },
  {
    "text": "This section establishes the purpose of the user guide, which is to detail the features and usage of all Infraon modules, and asserts its confidential and copyrighted nature."
  },
  {
    "text": "This section guides the user on getting started with the Infraon UI, including how to add ITSM records like tickets, create and manage dashboards, and add and view various types of assets."
  },
  {
    "text": "This section outlines how to view and manage the complete lifecycle and detailed configuration of IT and telecom assets, including their CMDB relationships, associated contracts, and network configurations."
  },
  {
    "text": "This document section outlines the procedures for managing the asset lifecycle through the IMACD process and for creating and handling service desk tickets and requests."
  },
  {
    "text": "This document section outlines the core processes, benefits, and steps for creating and managing items within the Problem Management and Change Management modules."
  },
  {
    "text": "This document section provides instructions for adding releases, reports, and network diagrams, and explains the functionality of Event Management, Log Management, the Knowledge Base, and SLA Management."
  },
  {
    "text": "This section outlines how to configure platform-wide settings, including network visualization, user and service management, notifications, and automation rules like business rules and escalations."
  },
  {
    "text": "This guide section outlines how to configure various platform administration, IT operations, and automation features, including device discovery, workflows, network management, and branding."
  },
  {
    "text": "This document section provides a table of contents for configuring Log Management features and installing third-party integrations from the Marketplace."
  },
  {
    "text": "This section points to documentation describing the LDAP and JIRA integrations and how to install them from the Marketplace."
  },
  {
    "text": "This section guides a new user through the initial login process and the first three 'Getting Started' steps: customizing the portal URL, setting up a support email for incident creation, and managing user roles and permissions."
  },
  {
    "text": "This section guides an administrator through the initial platform setup, covering user invitations, role assignments, location management, and brand customization."
  },
  {
    "text": "The user can learn about the three fundamental, persistent sections of the Infraon user interface: the Top Panel, Left Menu Panel, and Notification Icon."
  },
  {
    "text": "The user learns that the platform-wide notification icon provides a centralized panel for viewing alerts and performing actions, such as approving or rejecting requests."
  },
  {
    "text": "A new user can self-register using an administrator's invitation, customize their theme upon first login, and understands that their access to modules is determined by predefined role-based privileges."
  },
  {
    "text": "The Workspace provides a collaborative, chat-like interface for creating and managing ITSM records such as incidents, requests, changes, problems, and releases by filling out a detailed form."
  },
  {
    "text": "This section explains how to modify the properties of tickets and releases, manage communications and attachments, and link related tickets."
  },
  {
    "text": "This document chunk explains how to manage attachments, planning, tasks, and analysis within the workspaces for tickets, changes, releases, and problems."
  },
  {
    "text": "This text explains how a technician can perform and document a Root Cause Analysis (RCA) for a problem by selecting a formal technique, detailing the cause, and providing a solution."
  },
  {
    "text": "This section explains the different stages of a ticket's lifecycle from creation to closure and highlights the feature to convert a resolved ticket, problem, change, or request into a Knowledge Base article."
  },
  {
    "text": "This section explains that Dashboards are customizable, role-based visual displays of key platform data, built from widgets that show information like asset summaries, service availability, and event lists, which can also be exported as PDFs."
  },
  {
    "text": "The user can learn how to manage dashboards (pin, edit, clone, delete) and discover the various asset-related widgets available for visualizing information on asset summaries, purchases, licenses, and consumables."
  },
  {
    "text": "This chunk explains the different categories of widgets (Statistics, Events, Views, ITSM) that a user can add to a Dashboard to visualize key operational metrics and data from across the Infraon platform."
  },
  {
    "text": "This section describes the various dashboard widgets available for visualizing key data from the Contract Management, IMACD, and Network Configuration and Change Management (NCCM) modules."
  },
  {
    "text": "This section explains how a user can customize their dashboards by selecting different chart types for widgets and applying a wide variety of filters to refine the displayed data."
  },
  {
    "text": "This section explains how to create, customize, and present dashboards using various widgets to visually represent performance metrics from different platform modules."
  },
  {
    "text": "This text explains the different categories of dashboard widgets available, such as Service Manager and Prediction, and provides instructions on how to edit a dashboard by adding new widgets and assigning them."
  },
  {
    "text": "The user can learn how the Asset module functions as the CMDB to add, view, and manage detailed inventory information for all IT and non-IT assets, which can be populated manually, via CSV import, or through discovery."
  },
  {
    "text": "This section explains how to search, filter, export, schedule for maintenance, and bulk-edit assets using the asset management interface."
  },
  {
    "text": "This text explains how users can download agents, access NCCM features like CLI sessions and download jobs, and perform numerous bulk management actions on selected assets."
  },
  {
    "text": "This section explains how Infraon categorizes assets into four main types (IT, Fixed, Consumable, Software) and further organizes them by category and sub-category to facilitate better management."
  },
  {
    "text": "This section explains how to define, configure, and manage asset categories and their specific properties, including creating custom fields, before adding new assets to the system."
  },
  {
    "text": "This section details the mandatory and optional properties, such as procurement, location, hardware, and OS details, that can be configured for any asset in the CMDB."
  },
  {
    "text": "This section describes how to customize asset management by creating new asset categories, adding custom fields with role-based permissions, and managing various currency options for asset costing."
  },
  {
    "text": "This section explains how to configure asset categories, including marking them as CIs and setting up automated notifications for asset allocation/de-allocation, warranty expirations, and the discovery of blacklisted software."
  },
  {
    "text": "This section explains how to define asset sub-categories and customize their data fields, including setting mandatory fields and role-based privileges, to structure the asset inventory."
  },
  {
    "text": "This section explains how a user can view, search for assets using various methods like barcode or filters, and update asset ownership information."
  },
  {
    "text": "This section explains the different methods for adding assets into the Infraon CMDB, including manual single-asset creation, bulk import via CSV, and automated discovery for IT assets."
  },
  {
    "text": "A user can learn how to configure and manage the asset lifecycle by customizing asset IDs and workflows, calculating depreciation, scheduling maintenance, and viewing asset details in the self-service portal."
  },
  {
    "text": "This text explains how to define an asset's properties (like owner, location, and tags) during its creation and how to view its detailed information, status, and performance metrics on the asset details page."
  },
  {
    "text": "This guide explains how to define individual asset properties, import assets in bulk using a CSV file, and view related CI events directly on the asset summary page."
  },
  {
    "text": "This section guides users on how to import a list of assets from a CSV file through a column-matching process and view their fundamental properties within the system."
  },
  {
    "text": "This section explains how to perform actions on an asset, such as editing details, assigning an owner, and initiating remote management sessions via CLI or scheduled RDP."
  },
  {
    "text": "This section explains how to view detailed inventory, ownership, user, and configuration information for a specific asset by filtering the asset grid and selecting a device."
  },
  {
    "text": "The user can learn how to view detailed asset information on the asset details page, including its lifecycle history (purchase, warranty, AMC), user login/logout activity, and a graphical 'Panel View' for network equipment."
  },
  {
    "text": "This section explains how users can view detailed hardware properties, software installations, and license information for an IT asset by navigating its component hierarchy in the Inventory Tree."
  },
  {
    "text": "This section details the extensive hardware and software inventory information collected for assets, including how to filter and export these details."
  },
  {
    "text": "The user can visualize network device topology, view asset and connection details, and access historical device configuration data to track changes."
  },
  {
    "text": "This page allows a user to inspect a network device's complete inventory, review configuration download jobs and version differences, and analyze related active events."
  },
  {
    "text": "This section explains the actions a user can take on an event, such as acknowledging it, running diagnostics, or creating a ticket, and how to view related tickets and services for the associated asset."
  },
  {
    "text": "This section explains how to find, filter, manage the operational state (activate, deactivate, delete), and view detailed performance reports for provisioned network services."
  },
  {
    "text": "This section explains how to audit asset change history and analyze detailed utilization metrics for network device ports, channels, and trails, with options to export this data."
  },
  {
    "text": "The user can learn how to monitor and visualize the operational status, endpoints, physical paths, and cross-connections of specialized network services like E1 and VCG trails."
  },
  {
    "text": "This section explains how to view and export detailed information about SDH/PDH network device configurations, including port types, flow domains, protection groups, and channel mappings."
  },
  {
    "text": "This section explains how users can manage, categorize, search for, and filter consumable assets like printer ink or paper within the Infraon platform."
  },
  {
    "text": "This section explains how to add individual or bulk consumable assets to the inventory, view their details, and manage their stock quantity."
  },
  {
    "text": "This section details the specific properties and inventory information, such as name, category, owner, and re-order levels, that can be defined when adding a consumable asset to the system."
  },
  {
    "text": "This section explains how to add new assets, including consumable assets, by filling in their details manually or importing them via a CSV file, and how to view the asset's summary information."
  },
  {
    "text": "This section explains how to manage the lifecycle and inventory of consumable assets by tracking costs, assigning owners, and using actions to add or distribute stock."
  },
  {
    "text": "This section explains how a user can monitor inventory status, view the detailed history and audit trail for an asset, and delete consumable assets."
  },
  {
    "text": "This section explains how to manage discovered software assets, track their licenses, view their history in different formats, and control their usage through blacklisting and whitelisting."
  },
  {
    "text": "The user can learn how to manage the software license lifecycle, including bulk uploads and expiry alerts, and how to configure and view relationships between configuration items (CIs) in the CMDB."
  },
  {
    "text": "This guide explains the different types of relationships, such as \"Connected to\" and \"Consists of,\" that can be defined between Configuration Items (CIs) in the CMDB to map dependencies."
  },
  {
    "text": "This section defines various relationship types (like 'Contains', 'Depends on', and 'Cools') that can be established between Configuration Items (CIs) to model infrastructure dependencies within the CMDB."
  },
  {
    "text": "The user can learn about the different types of relationships (like dependency, editing, and data exchange) that can be defined between Configuration Items (CIs) in the CMDB."
  },
  {
    "text": "This section defines the various types of relationships (like 'Feeds', 'Hosted on', 'Impacted By') that can be established between Configuration Items (CIs) in the CMDB to visualize dependencies and perform impact analysis."
  },
  {
    "text": "This document explains several types of relationships that can be defined between Configuration Items (CIs) in the CMDB, such as physical location, software components, and network connections."
  },
  {
    "text": "This document explains how to define different types of relationships (like 'Located In', 'Manages', and 'Owns') between Configuration Items (CIs) to map their dependencies and ownership within the CMDB."
  },
  {
    "text": "This chunk describes how to define various dependency relationships between Configuration Items (CIs) in the CMDB, such as power, data, storage, and provisioning dependencies, to map out infrastructure interconnectivity."
  },
  {
    "text": "This text explains the different types of relationships (like 'Runs', 'Routes Traffic', 'Subscribes to') used to define dependencies between Configuration Items (CIs) in the CMDB."
  },
  {
    "text": "The user can learn about the different types of upstream relationships (e.g., Supports, Used by, Virtualized by) that can be defined between Configuration Items (CIs) in the CMDB to map their dependencies."
  },
  {
    "text": "This guide explains the different types of relationships (e.g., Connects, Consumes, Contained By) that can be defined between Configuration Items (CIs) in the CMDB to map their dependencies."
  },
  {
    "text": "This document explains the various types of relationships (e.g., 'Used by', 'Provides DR for', 'Distributes') that can be configured between assets (CIs) and users within the CMDB to map their dependencies."
  },
  {
    "text": "This text explains the different types of relationships that can be defined between Configuration Items (CIs) in the CMDB to map their dependencies and interactions."
  },
  {
    "text": "This text describes the various relationship types (such as 'Hosts', 'Impacts', and 'Rack contains') that can be defined between Configuration Items (CIs) in the CMDB to map dependencies."
  },
  {
    "text": "This text explains the different types of relationships used to define dependencies between Configuration Items (CIs) within the CMDB, such as 'Contains', 'Instantiated by', and 'Managed by'."
  },
  {
    "text": "This chunk explains the different types of relationships (like 'Powered by' or 'Stored on') that can be defined between assets in the CMDB to map their dependencies."
  },
  {
    "text": "This document defines various relationship types between Configuration Items (CIs) in the CMDB, such as 'Runs On' and 'Receives Data From', to map dependencies and facilitate impact analysis."
  },
  {
    "text": "This section defines the various relationship types (like 'Subscribed by', 'Supported by', 'Uses', and 'Virtualizes') that can be set between Configuration Items (CIs) to map out their dependencies and interactions within the CMDB."
  },
  {
    "text": "The platform's CMDB is capable of managing cloud service assets, specifically compute, storage, and networking components as Configuration Items (CIs)."
  },
  {
    "text": "This section describes how the Contract Management module allows users to store, track, and manage the lifecycle and details of various organizational contracts."
  },
  {
    "text": "This section explains how to create, edit, delete, and view detailed information for various types of contracts, including the ability to upload related attachments."
  },
  {
    "text": "This section explains how to add new contracts, specifically a software contract, by defining its basic properties such as name, vendor, status, and approver."
  },
  {
    "text": "This section guides a user through the process of adding a new software contract by defining its license properties, terms, and specific item details like cost and billing cycle."
  },
  {
    "text": "This section explains how to add a new hardware, lease, or service contract to the inventory by filling out mandatory and optional fields such as name, vendor, cost, and status."
  },
  {
    "text": "This section guides a user on how to create a new contract, define its terms and conditions, and link it to relevant assets within the platform's inventory."
  },
  {
    "text": "This section explains how to use the NCCM calendar to view daily configuration job summaries (successes, failures, new nodes, vulnerabilities) and introduces the IMACD framework for managing the asset lifecycle (Install, Move, Add, Change, Dispose)."
  },
  {
    "text": "This text explains the Install, Move, Add, and Change (IMACD) stages, which provide a structured process for deploying, relocating, integrating, and modifying IT assets within the infrastructure."
  },
  {
    "text": "This section describes the asset disposal (decommissioning) stage within the IMACD framework and explains how to create, view, search, filter, and delete these processes from the user interface."
  },
  {
    "text": "This section explains the details and fields available within an IMACD process record, including asset information, shipment details, status, priority, and communication logs."
  },
  {
    "text": "This section guides a user on how to initiate a new asset 'Install' process within the IMACD module by filling out key details like name, priority, assignee, and location."
  },
  {
    "text": "This document chunk explains how to initiate the 'Add' (install) and 'Move' processes for assets within the IMACD module by defining details like asset type, process name, and priority."
  },
  {
    "text": "This section describes how to create a new 'Install' or 'Addition' process within the IMACD module by defining the asset's details and relevant addresses."
  },
  {
    "text": "This text explains how to create 'Add' and 'Change' asset lifecycle processes within the IMACD module by defining fields such as name, priority, assignee, and location."
  },
  {
    "text": "This chunk explains how to create an IMACD process, such as destroying an asset, by defining its name, description, and associating the relevant asset and location."
  },
  {
    "text": "This section describes how to create an IMACD record for asset installation by defining properties like priority, assignee, and asset details, and explains the purpose of the Gate Pass system for secure asset movement."
  },
  {
    "text": "This section explains the purpose of a Gate Pass and provides step-by-step instructions for creating a Gate Pass template with specific fields to authorize and track asset movement within the IMACD process."
  },
  {
    "text": "This section explains the end-to-end lifecycle of a support ticket, from its creation and classification to its investigation, resolution, and closure."
  },
  {
    "text": "This section explains the lifecycle of a ticket by detailing its states, statuses, and key processes like categorization, escalation, resolution, and conversion into knowledge base articles."
  },
  {
    "text": "This chunk explains how to manage the ticket lifecycle through features like email approvals, SLA status visualization, one-click resolution, auto-closure, and re-opening tickets."
  },
  {
    "text": "This section explains the different ways tickets can be created (e.g., via email, portal) and details the information available on the ticket summary card, such as the Ticket ID, source, priority, and associated asset."
  },
  {
    "text": "This section explains how technicians can manage all communications within a ticket, including viewing history and sending messages, and update key details like status and impacted service via the ticket's interface."
  },
  {
    "text": "Users can learn how to use the ticket grid's quick action icons to efficiently resolve, assign, edit, delete, and convert tickets to knowledge base articles."
  },
  {
    "text": "This text explains actions available for managing tickets, including converting them to requests or knowledge base articles, linking them to changes, organizing them with tags, and customizing the ticket view."
  },
  {
    "text": "This guide explains the various methods for creating an IT ticket, such as through the portal, via email, or automatically from system events, and lists the prerequisite information needed to do so."
  },
  {
    "text": "This guide explains the process of creating a new ticket by detailing essential fields such as Requester, Priority, Impact Service, and Assignee."
  },
  {
    "text": "This text explains how a technician can manage and document a ticket by adding followers, tags, attachments, detailed notes, and replying directly using integrated email with custom signatures."
  },
  {
    "text": "This section explains how technicians create and set the status of tickets, utilizing features like requester history and integrated Knowledge Base articles, and how users can raise service requests through a self-service portal or by email."
  },
  {
    "text": "This text explains how to manage the complete lifecycle of a service request, from logging and classification through to resolution and closure, including the specific states and statuses involved in the process."
  },
  {
    "text": "This section defines what a service request is, details its various lifecycle statuses, explains how it can be created from multiple channels like email, and how it integrates with the Workflow and Knowledge Base modules."
  },
  {
    "text": "This text explains how technicians can view and manage service requests using the Panel and Grid views, which display key details like status, priority, and requester information."
  },
  {
    "text": "This section explains the various quick actions and informational icons available on a service request, allowing users to efficiently manage, edit, track history, and convert the request."
  },
  {
    "text": "This section defines the core ITSM work items (Service Request, Ticket, Problem, Change) and describes the user interface actions available for managing them, such as tagging, merging, and tracking their resolution time."
  },
  {
    "text": "This guide explains the various methods for creating a service request, details the necessary pre-configured information, and outlines the step-by-step process of filling out the new request form."
  },
  {
    "text": "This section guides a user on how to populate fields such as priority, followers, and tags, and leverage features like Knowledge Base suggestions when creating a new service request."
  },
  {
    "text": "This section explains that Problem Management is the process for identifying and managing the root cause of recurring incidents, allowing technicians to create a problem and link it to related tickets, requests, or changes."
  },
  {
    "text": "The user can learn the step-by-step process for detecting, recording, investigating the root cause of, and documenting solutions for problems within the IT infrastructure."
  },
  {
    "text": "This section explains how the Problem Management module resolves underlying issues by interacting with and linking to related tickets, service requests, and change requests."
  },
  {
    "text": "The user can learn about the complete lifecycle of a problem, its various states and statuses (like Open, In Progress, Resolved), and how it integrates with the Knowledge Base for diagnosis and creating permanent solutions."
  },
  {
    "text": "This section defines what a problem is, explains how technicians can log a problem for root cause analysis, and highlights the ability to convert resolved problems into knowledge base articles."
  },
  {
    "text": "This guide explains the prerequisites and steps for a technician to log a new problem, including how to specify its source, requester, and assignee."
  },
  {
    "text": "This text explains the different fields a technician can use to classify, prioritize, and describe a problem record, including how to flag it as a Known Error for the Knowledge Base."
  },
  {
    "text": "This text explains how technicians can create a problem record by adding details like symptoms and attachments, and how the platform aids this process by displaying related knowledge base articles and requester history."
  },
  {
    "text": "The user can learn about the different user interface views (Grid and Panel) for managing problems, including how to view key details like status and priority, and perform actions such as resolving the problem or adding work logs."
  },
  {
    "text": "This section explains how to perform and document a Root Cause Analysis (RCA) for a problem using various structured methods like the 5 Whys, Chronological, and Kepner-Tregoe."
  },
  {
    "text": "This section explains how to analyze and document a problem, distinguish between a temporary workaround and a permanent solution, and leverage integrations to create KB articles or Change Requests."
  },
  {
    "text": "Users can manage problems by performing actions like editing, deleting, copying, assigning, and tagging them, as well as filtering the view and tracking resolution times."
  },
  {
    "text": "This section explains the fundamentals of the Change Management module, its ITIL definition, key benefits, essential roles like the Change Manager and CAB, and the initial step of the change process."
  },
  {
    "text": "This section describes the complete, structured lifecycle of a change request, including its recording, planning, risk analysis, CAB approval, implementation, and post-implementation review."
  },
  {
    "text": "The user can learn the ITIL definition of Change Management, understand its various lifecycle statuses (e.g., Analysis, Implementation, Closed), and see how to convert a resolved change into a Knowledge Base article."
  },
  {
    "text": "This section explains the different types of changes (Standard, Minor, Major, Emergency) and their specific approval requirements, and describes how users can view and add new change requests in the platform."
  },
  {
    "text": "This guide explains the prerequisites, key roles (Requester, Change Manager, Implementer), and steps required to create a new change request in the Change module."
  },
  {
    "text": "This text details the various fields and information a user needs to provide when creating a new change request, including its classification, priority, risk, type, and rollout plan."
  },
  {
    "text": "This section explains how to create and view a change request, including specifying a rollback plan, using templates, and understanding the fields in the change summary card."
  },
  {
    "text": "This text explains the properties, roles, and types of information available in the Grid and Panel views for managing change requests."
  },
  {
    "text": "This document explains how to use the 'Change' module to define detailed rollout and rollback plans, assess the organizational impact, and create and assign the specific tasks required to implement a change."
  },
  {
    "text": "This document chunk explains how a user can add and manage risks, tasks, comments, and attachments for a change request, and perform actions like editing, deleting, or creating a related ticket."
  },
  {
    "text": "This document explains how users can manage lists of change requests and releases by using search, filters, and performing actions like assigning, tagging, or deleting records."
  },
  {
    "text": "This text explains how to create a new release and outlines the available quick actions for managing existing releases, including editing, deleting, adding attachments, and linking them to tickets, problems, or changes."
  },
  {
    "text": "A user can learn how to populate the detailed fields required to create or edit a release, including its assignee, risk, priority, due date, and associated service category."
  },
  {
    "text": "This section describes how to select a release type from a dropdown and add descriptive notes when creating a new release."
  },
  {
    "text": "This chunk explains how the Event Management module monitors infrastructure components for significant changes, categorizes them by severity using thresholds, and creates actionable events for technicians."
  },
  {
    "text": "This section explains how Infraon automatically generates events by monitoring assets against thresholds, allowing users to filter, analyze, acknowledge, and convert them into incidents."
  },
  {
    "text": "This section explains how users can perform actions on events, such as creating an incident or performing a diagnosis, and introduces the Log Management module for searching and analyzing system logs."
  },
  {
    "text": "The user can learn about the Log Stream feature, which allows them to centrally search, filter, and view a live stream of logs from the Elasticsearch database for real-time analysis and pattern identification."
  },
  {
    "text": "Users can create, customize, and export detailed real-time and historical reports to analyze trends and performance data, with options for data privacy."
  },
  {
    "text": "This section explains how to generate different categories of reports, such as for availability, nodes, and events, and how to configure data privacy settings to obfuscate requester information."
  },
  {
    "text": "The user can learn how to generate various statistical and detailed reports for events, incidents, and assets, as well as export organizational location details."
  },
  {
    "text": "This text explains how a user can access and utilize various pre-defined reports for software assets and ITSM tickets to track compliance, status, and performance metrics."
  },
  {
    "text": "The user can generate various reports to get a consolidated overview of asset lifecycle (IMACD) metrics and use AI-driven forecasts for server and device capacity planning."
  },
  {
    "text": "This section explains how to generate and interpret various system reports for analyzing ticket escalations, network device configuration downloads, job audits, and resource capacity planning."
  },
  {
    "text": "The user can configure and apply filters to a selected report based on parameters like statistics, assets, duration, tags, and assignees to generate a customized view."
  },
  {
    "text": "This section explains how users can author, categorize, manage, and interact with different types of articles in the Knowledge Base to facilitate organizational self-service and knowledge sharing."
  },
  {
    "text": "This section explains that the Knowledge Base (KB) module is used to author and manage articles, guides, and FAQs, empowering end-users with self-service capabilities to find answers without needing to contact a support agent."
  },
  {
    "text": "This document outlines best practices for creating, managing, and tagging content in the Knowledge Base and explains the purpose and current capabilities of the SLA Management module for defining service level metrics."
  },
  {
    "text": "The user can learn about the components of an SLA (Metrics and Penalties) and how to configure the specific conditions under which an SLA timer will start, pause, or stop for a ticket."
  },
  {
    "text": "This section explains how to define SLA resume and cancel conditions and how to create SLA profiles with specific service or performance targets."
  },
  {
    "text": "This section explains how to define Service Level Agreement (SLA) profiles by setting compliance targets, business hours, and priority-based metrics for ticket response and resolution times."
  },
  {
    "text": "This section explains how to configure SLA profiles with rules for non-business hours and describes using the Geomap to visualize asset locations for efficient service resolution."
  },
  {
    "text": "The user can learn how to interpret the Geomap, which visually represents the geographic location and operational status of assets using color-coded pins and various map layers."
  },
  {
    "text": "The user can learn how to create, edit, clone, delete, and export custom, Visio-like network diagrams to visually represent network components and assets."
  },
  {
    "text": "This guide explains how to use the Visio-like tool to create, customize, save, and manage custom network diagrams which display real-time device status and can be used for network planning."
  },
  {
    "text": "This section explains how to use interactive tools like search, filter, and zoom to navigate the network topology diagram and analyze node capacity utilization to optimize network performance and plan for future growth."
  },
  {
    "text": "The user can visualize the logical or physical layout of network devices in a topology map, inspect individual node inventory details, and export this view for offline analysis."
  },
  {
    "text": "This text explains how to interpret the network Topology View, where users can see device details, connection information, and real-time operational status indicated by color."
  },
  {
    "text": "This section explains how to interact with the network topology view by filtering nodes, navigating the diagram, editing the layout, and exporting the visualization."
  },
  {
    "text": "This section explains how to manually create or bulk-import network topologies, as well as how to edit, export, and validate the relationships between network nodes."
  },
  {
    "text": "This section explains how to configure the platform's core administrative settings, including user management, service catalogs, automation workflows, and device discovery credentials."
  },
  {
    "text": "This guide provides the necessary CLI commands to enable SNMP on Cisco routers and switches, a crucial prerequisite for device discovery, monitoring, and management within the Infraon platform."
  },
  {
    "text": "This section explains how to configure platform-wide settings like business hours, tags, and user audits, and details how to register and authorize third-party APIs for data exchange."
  },
  {
    "text": "This section guides users on how to configure external API integrations, view system-wide audit logs, and define business hours for accurate SLA calculations."
  },
  {
    "text": "This guide explains how to create and configure Business Hour Profiles by defining work schedules, timezones, breaks, and holidays to ensure accurate SLA calculations for tickets."
  },
  {
    "text": "This section explains how to configure business hours and holidays for SLA calculations and how to create and apply tags to group various items like assets, users, and service desk records."
  },
  {
    "text": "This section explains how to create and manage tags, and then assign them to single or multiple assets individually, in bulk, or during asset creation."
  },
  {
    "text": "This document explains how users can add tags to assets and their associated resources, either individually via the details page or in bulk by importing a CSV file."
  },
  {
    "text": "This document explains four distinct methods for applying tags to single or multiple assets and introduces the User Management module for controlling user roles and access."
  },
  {
    "text": "This section explains how to create and manage departments to logically group users, assign department heads and prime users, and efficiently manage work assignments and approvals."
  },
  {
    "text": "This section explains how to define organizational departments with key roles like heads and prime users, and how to manage user availability by tracking leaves and viewing who is currently online."
  },
  {
    "text": "This guide explains how administrators configure organizational leave policies and how users can apply for leave and check their available balance."
  },
  {
    "text": "This document explains how to create, edit, and apply password policies with specific rules like length, character requirements, and change frequency for different user roles within the platform."
  },
  {
    "text": "This section explains how an administrator can configure detailed password complexity rules, such as minimum character types, length, and restrictions on sequential characters, to enforce security policies for user accounts."
  },
  {
    "text": "This section explains how an administrator can define and apply password complexity policies, such as rules for continuous characters, to specific user roles for enhanced security."
  },
  {
    "text": "This section explains how to add, view, and manage requesters, who are the end-users that can raise incidents, service requests, and access the knowledge base via the self-service portal."
  },
  {
    "text": "This text explains how to manually add a new requester to the platform by navigating to User Management and filling in their profile details and credentials."
  },
  {
    "text": "This guide explains how to create a new requester profile by populating their personal, work, and address information, including fields like department, reporting manager, and location."
  },
  {
    "text": "This section explains how to perform bulk actions on requesters, such as importing from a CSV file and deleting, and how to manage system access using roles and privileges."
  },
  {
    "text": "This document describes the default user roles, their specific permissions across various modules, and outlines the process for creating new, customized roles using templates."
  },
  {
    "text": "This text explains how administrators can assign granular permissions (view, add, edit, delete, copy) to user roles to control access to specific platform modules."
  },
  {
    "text": "This text explains how to grant specific user privileges, such as configure, upload, and download, to control access and actions within various platform modules like Business Catalogue and Log Management."
  },
  {
    "text": "This section explains that the Log Management module enables users to manage access, create multi-indexes for data retrieval, configure log export settings, and perform rapid searches on log data."
  },
  {
    "text": "This explains that a Log Rule is a component used to define how log data is processed and analyzed in real-time for the purpose of detecting and responding to threats."
  },
  {
    "text": "This document explains how administrators can configure granular user permissions for ticket management, manage access to various NCCM features like configuration profiles and OS images, and control the visibility of requester data for privacy."
  },
  {
    "text": "This section explains how administrators can configure user roles for reporting access, define and manage teams, and set up user shifts to enable shift-based auto-assignment of tickets."
  },
  {
    "text": "This chunk explains how to create different types of teams (Approval, Technical, Service Desk) and configure auto-assignment rules like Round Robin to automatically distribute tickets."
  },
  {
    "text": "This section explains different automatic ticket assignment methods (Round Robin, Load Balancer, Skill-based) configured via business rules and describes how to manage platform users."
  },
  {
    "text": "This document explains how administrators can add new users to the platform by sending email invitations and assigning them predefined roles."
  },
  {
    "text": "This section explains how Infraon's Service Management module uses an ITIL-aligned Service Catalogue to allow users to request a wide variety of items, including IT services, non-IT services (like HR), and different types of assets."
  },
  {
    "text": "This section explains the difference between the internal, technician-facing Service Catalogue and the external, user-facing Business Catalogue, and how to build one to facilitate service requests and meet SLAs."
  },
  {
    "text": "This section explains how an administrator or catalogue manager can use the Service Catalogue module to define, manage, and publish IT and non-IT services for end-users to request via a self-service portal."
  },
  {
    "text": "This guide explains how to define and configure a new service, including its hierarchy, ownership, cost, and templates, to make it available for users in the self-service portal."
  },
  {
    "text": "This document provides instructions on how to add a new service to the Business Catalogue by filling out its basic information, including name, image, code, catalogue, classification, status, and criticality."
  },
  {
    "text": "This text explains how an administrator can configure detailed attributes, such as cost, currency, shipping requirements, and descriptive features, for a new service or product within the Service Catalogue."
  },
  {
    "text": "This section explains how to configure a service's ownership (Service, Business, IT Owners) and visibility to control which requesters can access it in the service catalogue."
  },
  {
    "text": "This section explains how to define incident details, manage services within the service catalogue, and configure system notifications like SMS and email."
  },
  {
    "text": "This section explains how to configure SMS gateway and SMTP server settings to enable system-wide email and SMS notifications."
  },
  {
    "text": "The user can learn how to configure triggers that automatically create incidents or send notifications based on system alerts and correlated events, and how to audit these notifications using the Messenger Audit log."
  },
  {
    "text": "This chunk explains how to configure a trigger in Infraon to automatically create an incident or send a notification when specific event, log, or alarm conditions are met."
  },
  {
    "text": "The user can configure automated actions like sending an email/SMS or creating a ticket, and use macros to enrich these notifications with dynamic data from assets, events, and NCCM."
  },
  {
    "text": "This section introduces the Infraon Automation suite, which allows users to configure workflows, business rules for ticket auto-assignment, escalations, and email-to-ticket functionality."
  },
  {
    "text": "This chunk explains how to create and configure business rules (Load Balancer, Round Robin) within Infraon Automation to govern the automatic assignment of tickets."
  },
  {
    "text": "This section explains how to configure business rules to automatically assign tickets to specific support groups or technicians based on criteria like service, expertise level, and tags, using methods such as round-robin and load balancing."
  },
  {
    "text": "This text explains how to create and configure business rules to automate ticket assignments to specific teams or technicians based on predefined criteria like impacted service or requester tags."
  },
  {
    "text": "This text explains how to configure business rules to automatically assign tickets based on service or requester tags, and how to set up multi-level, time-based escalations for ticket resolution."
  },
  {
    "text": "This document explains how to configure automated, multi-level ticket escalations based on time and priority, and how to integrate external email clients for correspondence management."
  },
  {
    "text": "This section explains how to configure a Gmail account to forward all or specific emails to an Infraon inbox, enabling the automatic creation of tickets from emails."
  },
  {
    "text": "This section explains how to configure Gmail filters to automatically forward emails, including those marked as spam, to an Infraon email address for processing."
  },
  {
    "text": "This section explains how to configure both new and existing Google Groups to forward emails to an Infraon address, enabling features like email-to-ticket conversion."
  },
  {
    "text": "This section explains how administrators can create, customize, and automate customer feedback surveys that are sent to users after their service tickets are resolved."
  },
  {
    "text": "This section explains how to create service feedback templates and configure the Mail Automator to automatically convert incoming emails into incident tickets."
  },
  {
    "text": "This guide explains how to configure IMAP/SMTP settings via the Mail Automator, using either Microsoft OAuth or manual credentials, to map incoming emails to specific service catalogues for automated processing."
  },
  {
    "text": "This section explains how to configure email forwarding from MS Outlook to create helpdesk tickets and introduces how to build visual, drag-and-drop workflows to automate incident management processes."
  },
  {
    "text": "This section explains how to design and customize process workflows by defining triggers, conditions, form layouts, and setting advanced field- and action-level permissions for different user roles."
  },
  {
    "text": "This document chunk explains how to create a new incident workflow, customize its form with drag-and-drop elements, and configure field properties within the Infraon Configuration module."
  },
  {
    "text": "This section explains how to add custom fields to ITSM module forms (like incidents, requests, and changes) and how to configure the task workflows by defining the sequence of statuses and actions."
  },
  {
    "text": "This section explains how to build a custom ITSM process flow by dragging and configuring various states (like In-Progress, Approval, Resolved) and automated actions (like Set Value and Send SMS)."
  },
  {
    "text": "This section explains how to enhance ITSM workflows with features like 'Ask for Change' in change management, conditional logic, email approvals, and how to deploy the Infraon Agent via Active Directory for asset discovery."
  },
  {
    "text": "This section explains how to prepare the Infraon Inventory Agent for deployment by embedding the unique organization key (Agent Token) into the MSI installer using the ORCA tool."
  },
  {
    "text": "This text provides instructions on how to use the Orca tool to create a new transform and find a specific keyword within it."
  },
  {
    "text": "This section guides a user on configuring the Infraon Agent for asset discovery by using an Organization Key and generating a transform file."
  },
  {
    "text": "This chunk provides a specific procedural step for interacting with an Active Directory server and references a Windows Installer Transform (.mst) file, likely as part of a software or agent deployment process."
  },
  {
    "text": "This text explains how to create and link a Group Policy Object (GPO) within a specific Organizational Unit (OU) in order to deploy a software agent."
  },
  {
    "text": "This section instructs a user on how to verify delegation, use security filtering, and enforce a new Group Policy Object (GPO) within a Windows environment, likely for an integration."
  },
  {
    "text": "This step guides the user on configuring a Windows Group Policy Object (GPO) to deploy the Infraon Agent software package across a network for asset discovery."
  },
  {
    "text": "This describes how to deploy the Infraon Agent software package using a Group Policy Object (GPO) for automated installation on network devices."
  },
  {
    "text": "This text provides procedural steps for navigating to 'Deployment' and 'Modification' tabs to add or select options within the user interface."
  },
  {
    "text": "This text describes the final steps for deploying the Infraon agent via Group Policy, requiring a 'gpupdate /force' command to complete the installation."
  },
  {
    "text": "This section explains that admins can configure pre-built or custom AI bots for departmental assistance and confirms how to verify the installation of the Infraon agent."
  },
  {
    "text": "Users can learn about the default departmental AI bots available for instantly accessing information on company policies and that administrators can customize these bots."
  },
  {
    "text": "This text explains how to create and train an AI assistance bot and how to download and configure a Linux data collector agent for network device discovery."
  },
  {
    "text": "This section describes how a user can view, search, and manage the list of data collectors or agents responsible for discovering assets, and monitor their operational status and performance."
  },
  {
    "text": "This section explains that the Inventory Agent is used to automatically collect detailed system, hardware, and utilization data from devices, and it describes how users can monitor the agent's health and resynchronize its data."
  },
  {
    "text": "This section explains how to download, install, and authenticate the Inventory Agent on Windows, Mac, or Ubuntu devices to enable automatic asset data collection and performance monitoring."
  },
  {
    "text": "This guide explains how to download and install the Infraon inventory agent on various operating systems using an API token to enable automatic asset discovery."
  },
  {
    "text": "This section guides a user on how to install the Infraon agent on a Linux system and how to add new organizational and vendor locations in the Address Book."
  },
  {
    "text": "This section explains how to define, manage, and bulk-edit organizational addresses in the Address Book, which are used for purposes like product and service delivery, and also mentions viewing license details."
  },
  {
    "text": "This section details how administrators can configure IT Operations by discovering network resources, managing device credentials, setting monitoring thresholds, and utilizing diagnostic and correlation tools."
  },
  {
    "text": "This guide explains how to bulk tag or untag IT resources by uploading and validating a CSV file, and how to create resource filters to define the scope of the operation."
  },
  {
    "text": "This text describes the various fields and values available for filtering and querying platform resources, such as by resource type, polling status, or specific configuration profiles."
  },
  {
    "text": "This section explains how to perform advanced configurations on IT resources, such as enabling or disabling polling and applying tags, and details the concepts and purpose of software blacklisting and whitelisting."
  },
  {
    "text": "This document explains how to configure software whitelists and blacklists for enhanced security and how to request and use direct CLI sessions for managing network devices through the NCCM module."
  },
  {
    "text": "The user learns how to manage and audit device command-line sessions, which are subject to an approval process based on pre-defined user privileges."
  },
  {
    "text": "This text explains how a user can search for specific CLI job sessions using various filters, terminate active sessions, and export the session list."
  },
  {
    "text": "This guide explains how to add, schedule, manage, and audit Circuit Discovery jobs to find and map network trails and circuits based on specific technologies."
  },
  {
    "text": "This section explains how to configure and schedule a new circuit discovery scan and how to define log rules to trigger alerts based on specific data conditions."
  },
  {
    "text": "This document explains how to configure custom query or threshold-based rules within IT Operations to automatically monitor log data and trigger alerts."
  },
  {
    "text": "This chunk explains how to create and activate a rule that analyzes log data based on specific criteria and thresholds to automatically generate an event with a defined severity and message."
  },
  {
    "text": "This section explains how to configure topology-based and event-based correlation rules to automatically analyze event relationships, reduce alert noise, and identify root causes."
  },
  {
    "text": "This section explains how to configure event correlation rules and store device credentials (SNMP, WMI, SSH), which are mandatory for the platform's device discovery and monitoring functions."
  },
  {
    "text": "This section explains how to add, edit, and test device credentials using various protocols like SNMP, SSH, and WMI, which are necessary for device discovery and management within the IT Operations module."
  },
  {
    "text": "This section explains how to configure and save new credential profiles, including protocol-specific details for SNMP and SSH, which are used for device discovery and management."
  },
  {
    "text": "This section explains how to configure and test device credentials for discovery using protocols like WMI and HTTP, and how to use the Ping diagnosis tool to troubleshoot network connectivity."
  },
  {
    "text": "This section explains how to use diagnostic tools like Ping and SNMP Walk to test and query network devices by providing specific parameters and clicking 'Test'."
  },
  {
    "text": "This section explains how to perform on-demand connectivity and credential checks against network devices and Windows servers using the SSH Check and WMI Check diagnosis tools."
  },
  {
    "text": "This section explains how to configure and use Infraon's discovery engine to automatically find and catalog network devices, servers, and applications using various methods and protocols like WinRM/WMIC."
  },
  {
    "text": "This section explains how to create and configure discovery profiles to automatically find network, Windows, and Linux devices using various protocols like SNMP, WMI, and SSH."
  },
  {
    "text": "This section explains how to create and configure a Discovery Profile to automatically find IT assets by specifying IP ranges or a CSV file, providing credentials, and optionally adding them to NCCM for management."
  },
  {
    "text": "This section explains how to configure a network discovery process by selecting various download protocols, setting a recurring schedule, and applying filters to include or exclude specific devices."
  },
  {
    "text": "This section explains how to configure and schedule a network discovery job, including setting device filters and choosing between immediate or recurring schedules, to automatically find assets and initiate the download of their configurations."
  },
  {
    "text": "This section explains how to create and configure a network discovery profile to automatically find and add network devices to the platform using methods like IP range scanning or CSV import."
  },
  {
    "text": "This section guides a user on how to configure a network discovery profile by selecting connection and download protocols and setting a schedule for the discovery job."
  },
  {
    "text": "This section explains how to configure asset discovery filters to selectively include or exclude devices and to enable or disable monitoring for specific network components like interfaces, VLANs, and routing protocols."
  },
  {
    "text": "The user can learn how to create and schedule a discovery profile to find and add network devices, specifically Windows servers, to the platform."
  },
  {
    "text": "This guide explains how to create and configure a discovery profile to automatically scan the network for assets using IP ranges, agents, credentials, and filters."
  },
  {
    "text": "This section explains how to configure device filters and set up immediate or recurring schedules for a Windows Server discovery job."
  },
  {
    "text": "The user learns how to create and configure a discovery profile to find Linux servers on the network using various methods like IP range or CSV import."
  },
  {
    "text": "This section explains how to configure device/server filters and schedule a discovery job to run either immediately or at a specific recurring time."
  },
  {
    "text": "This guide explains how to create and schedule a VMware discovery profile to automatically discover, monitor, and manage hypervisor hosts, clusters, and virtual machine assets within the platform."
  },
  {
    "text": "This guide explains how to configure and schedule a device discovery job by importing devices from a CSV, selecting pre-configured credentials, applying inclusion/exclusion filters, and setting a run time."
  },
  {
    "text": "This text explains how to configure and schedule different types of asset discovery, including for URL/Web Services and Wireless Controllers, within the IT Operations configuration module."
  },
  {
    "text": "This section guides users on how to create and configure a discovery profile to automatically find network assets by specifying IP ranges, credentials, agents, and filters."
  },
  {
    "text": "This section explains how to configure, filter, and schedule an asset discovery job, and then monitor its progress."
  },
  {
    "text": "This section describes how to manage discovery jobs by viewing their details and audit logs, and how to configure, filter, and add LED Displays for monitoring asset parameters."
  },
  {
    "text": "This section explains how to add an LED Display device under IT Operations configuration and describes how to manage asset maintenance periods, during which alarms and polling are suspended."
  },
  {
    "text": "This document explains how to schedule maintenance on a network device to temporarily stop polling and mask alarms, and lists the core features of Network Configuration Management."
  },
  {
    "text": "This document describes the features within the Network Configuration and Change Management (NCCM) module for downloading, uploading, searching, comparing, and managing network device configurations and OS images using profiles, templates, and scheduled jobs."
  },
  {
    "text": "This section explains how to configure secure CLI access profiles and manage network device stability by setting and reverting to baseline configurations within the NCCM module."
  },
  {
    "text": "The user can learn how to create, search, filter, and manage scheduled jobs for downloading network device configurations to establish a baseline for compliance auditing."
  },
  {
    "text": "The user can learn how to schedule the creation of configuration baselines for network devices by defining a name, description, frequency, and target vendor."
  },
  {
    "text": "This section explains how to define, schedule, and manage configuration baselines for network devices and how to compare different device configurations to identify changes."
  },
  {
    "text": "This section explains how to compare different versions of device configurations, or compare a device configuration with an uploaded file, to identify changes and export the differences."
  },
  {
    "text": "This document explains how an administrator can add, view, edit, and delete network configuration parameters within the IT Operations module, with access controlled by user roles and privileges."
  },
  {
    "text": "This section explains how network administrators can create, manage, view, import, and export device Configuration Profiles, which define connection details like vendor, OS, and protocols."
  },
  {
    "text": "This document explains how to manually add a Network Configuration Profile by defining properties such as name, vendor, and OS type within the IT Operations configuration area."
  },
  {
    "text": "This chunk provides examples of command templates used to automate connecting to network devices via SSH/Telnet and downloading their running configurations."
  },
  {
    "text": "This section provides examples of how to construct command templates for downloading/uploading configurations and OS images to network devices."
  },
  {
    "text": "This text explains how to create command templates for automating network device tasks like downloading OS images and collecting operational inventory data via the command-line interface."
  },
  {
    "text": "This section explains how to configure advanced operational features like Zero Touch Provisioning (ZTP), define syslog patterns for log analysis, and set up command templates for device interaction and configuration management."
  },
  {
    "text": "The user can configure patterns to ignore irrelevant lines during device configuration comparisons and to define specific text that signals authentication or authorization errors during CLI interactions."
  },
  {
    "text": "This section explains how to perform management actions on NCCM Configuration Profiles, such as editing, deleting, copying, and importing or exporting them via CSV/XLS files."
  },
  {
    "text": "This document explains how to use Configuration Search to find and compare network device configurations and how to leverage Configuration Templates with variables to automate network changes."
  },
  {
    "text": "This section explains how to use standardized, Jinja2-enhanced Configuration Templates to execute commands, perform diagnostics, and manage various network devices through features like Upload Jobs and CLI Jobs."
  },
  {
    "text": "This section explains how to view, manage, and understand the properties of Configuration Templates in NCCM, which are privilege-based, version-controlled scripts used in Upload Jobs to execute commands on network devices."
  },
  {
    "text": "This chunk explains the two available formats (Plain and XML) for writing device command templates in the NCCM module, recommending the more flexible XML format for its advanced features like custom timeouts and error checking."
  },
  {
    "text": "This section explains how to format device commands using XML syntax within NCCM Configuration Templates, including how to define properties like `timeout` for execution time and `prompt` for matching command completion."
  },
  {
    "text": "The user can learn how to define command execution behavior, including matching prompts, opening remote sessions, storing output, and handling errors within an NCCM Configuration Template."
  },
  {
    "text": "This chunk describes how to use specific properties like error_pattern, expected_pattern, and expected_count_response to define success or failure conditions when executing commands on network devices."
  },
  {
    "text": "This chunk describes how to structure XML-based commands within NCCM, including setting command properties like timeouts, validating response line counts, and storing command output."
  },
  {
    "text": "This text explains how to create command scripts for NCCM Configuration Templates using plain text or a structured XML format, including support for variables and comments, to automate network device configurations."
  },
  {
    "text": "The user can learn how to use the Jinja2 templating engine within the NCCM module to create dynamic configuration templates with variables, loops, and conditional logic for managing network devices."
  },
  {
    "text": "This section explains how a user can create dynamic and interactive configuration templates using various substitution objects (like Runtime, Global, Type, and Default) for network device management tasks."
  },
  {
    "text": "This section explains how to use dynamic variables representing platform objects (like Device, Job, or Profile) to automate network command execution within configuration templates."
  },
  {
    "text": "The user can learn how to create dynamic NCCM configuration templates using Jinja2 syntax, incorporating variables for device credentials (Profile), time (Time), and user input (Runtime) along with conditional logic."
  },
  {
    "text": "This document explains how to use Jinja2 syntax, including conditional logic (if/else) and loops (for), to create dynamic network configuration templates with runtime variables."
  },
  {
    "text": "This text demonstrates how to use scripting with loops and conditional logic within Configuration Templates to automate the generation of CLI commands for network devices."
  },
  {
    "text": "This chunk demonstrates how to create and script Configuration Templates using variables, loops, and conditional logic to automate network device commands."
  },
  {
    "text": "This section describes how to manage, filter, and use various types of Network Configuration and Change Management (NCCM) templates."
  },
  {
    "text": "This section guides the user on how to create a 'Command Execution' template for running a series of commands on network devices, which includes defining parameters like vendor and OS type, and requires mandatory approval."
  },
  {
    "text": "This text explains how to create and save a network configuration template by defining its type, loading commands with variables, setting user access controls, and using it for a 'Configuration Merge' operation."
  },
  {
    "text": "This section explains how to use the NCCM module to either merge new commands into or completely replace a network device's configuration using CLI templates, files, or snapshots."
  },
  {
    "text": "This section explains how to use a Configuration Rollback template to revert a network device's configuration to a previous or baseline state using CLI commands and specific rollback tags."
  },
  {
    "text": "This text explains how to use specifically named 'Configuration Replace Templates' to create rollback jobs and how to perform an OS image upgrade using CLI commands within the NCCM module."
  },
  {
    "text": "This chunk provides a configuration template script that automates a network device's OS upgrade by using variables for IP addresses and image names."
  },
  {
    "text": "This text explains how to construct and name command templates within NCCM for performing and rolling back OS upgrades on network devices."
  },
  {
    "text": "This text explains how to use different network automation templates for tasks like OS upgrades, health checks, and applying configurations via NETCONF."
  },
  {
    "text": "This text explains how to create various configuration templates, such as Netconf, Network Diagnosis, and HTTP REST-API, to perform command-based or API-based network and service configurations."
  },
  {
    "text": "This text explains how to create and configure standard and 'Golden' templates within the NCCM module to define device configurations, set access controls, and establish a baseline for compliance."
  },
  {
    "text": "This guide explains how to create a new device configuration template, specifying its properties, loading commands, and setting access controls for users and groups."
  },
  {
    "text": "The user can learn to create a Device Authorization Profile template to define and restrict which CLI commands users are authorized to execute on network devices within NCCM."
  },
  {
    "text": "This section describes how to configure command-level access control rules (Permit, Block, Notify) for user CLI sessions in NCCM, which can be defined in a template and assigned to specific users or groups."
  },
  {
    "text": "This section details how to manage the lifecycle of configuration templates within the NCCM module, including editing, deleting, enabling, setting to production-ready, importing, exporting, and executing them as upload jobs."
  },
  {
    "text": "The user learns that a Download Job in the NCCM module is a scheduled task to retrieve and centrally store configuration files, inventory, and operational data from network devices for backup and auditing purposes."
  },
  {
    "text": "This section describes how to manage, view, filter, and export network device configuration download jobs from the Download Job page."
  },
  {
    "text": "This section explains how to add network configuration download jobs in bulk using a CSV file and how to view the status, credentials, and downloaded running configuration for each job."
  },
  {
    "text": "This section explains how to manage network device configuration download jobs, including actions like editing, deleting, immediately running, and auditing them."
  },
  {
    "text": "This section explains how a user can view the detailed results and status of a network device configuration download job, compare different configuration versions, and resynchronize the agent associated with the job."
  },
  {
    "text": "This section explains how to search, filter, export, and view the detailed results and audit logs of network device configuration download jobs."
  },
  {
    "text": "The user can manage and review the audit log for network device configuration download jobs, with options to search, filter, and delete job records."
  },
  {
    "text": "This section explains how to add, manage, and immediately trigger network device configuration download jobs either manually from an IT asset, in bulk via CSV, or through automatic discovery."
  },
  {
    "text": "This guide explains how to create a Configuration Profile by specifying a vendor, schedule, credentials, and connection details to automate network device configuration downloads."
  },
  {
    "text": "This text explains how to configure the specific protocols (e.g., SSH, TELNET, FTP, TFTP) and methods for downloading various types of data from network devices, such as running configurations, OS images, and inventory."
  },
  {
    "text": "This section describes how to configure parameters for network download jobs, import them in bulk using CSV, generate MD5 hashes to verify file integrity, and access the user account audit logs for jobs."
  },
  {
    "text": "This section explains how to review audit logs for actions performed on network devices and how to manage device OS images based on user privileges."
  },
  {
    "text": "This section explains how to add, edit, delete, and search for network device OS images, including providing details like vendor, OS version, and a mandatory MD5 hash key for integrity."
  },
  {
    "text": "This section explains how administrators can manage, monitor, and schedule the download of operating system images to network devices to ensure successful and controlled updates."
  },
  {
    "text": "This guide explains how to schedule the download of OS images to the NCCM server and describes how to use upload jobs to deploy configuration files or firmware updates to network devices."
  },
  {
    "text": "This section explains how a user can view, create, manage, and export upload jobs, which are scheduled tasks used to change device configurations or OS images within the NCCM module."
  },
  {
    "text": "This text explains how to view the status, scheduling, and audit details of an NCCM upload job and describes the actions available, such as editing, deleting, or viewing its results."
  },
  {
    "text": "This section explains how to view, manage, filter, re-run, and export the results of network configuration upload jobs."
  },
  {
    "text": "This section explains how to search, filter, export, and review the detailed execution trails and audit results for network configuration upload jobs on specific IP addresses."
  },
  {
    "text": "This section describes how a user can manage and audit network configuration upload jobs, including creating new jobs, searching and filtering the audit log, exporting results, and performing bulk actions like enabling or disabling jobs."
  },
  {
    "text": "This section explains how to define, schedule, and configure the parameters for an automated NCCM upload job used for deploying configurations or OS upgrades to network devices."
  },
  {
    "text": "This text explains how to configure an individual task within an Upload Job by defining its name, target devices, credentials, associated configuration template, and rules for execution order and error handling."
  },
  {
    "text": "This guide explains how to configure an NCCM Upload Job by adding and organizing tasks, setting an execution schedule, defining access permissions, and reviewing the job before final submission."
  },
  {
    "text": "This section explains how to configure dependent task chains within an NCCM upload job, including conditional execution based on the success or failure of previous tasks and setting up task retry logic."
  },
  {
    "text": "This text explains how to configure a sequence of automated tasks by defining their execution dependencies, conditional logic based on the success or failure of previous tasks, and automated retry parameters."
  },
  {
    "text": "This section describes how to create custom, privilege-based Service Templates within NCCM and explains the rules for managing the associated Upload Jobs, including task dependencies, retries, editing, and re-running."
  },
  {
    "text": "This section explains how to use NCCM's Service Templates to define, create, and manage standardized, multi-device network operations like configuration backups and firmware upgrades."
  },
  {
    "text": "This section explains how to create, manage (edit, clone, delete, enable/disable), and use service templates to initiate an Upload Job for network service execution."
  },
  {
    "text": "This document explains how to create and configure a Service Template, which automates network tasks like device backups by defining a sequence of steps, dependencies, and error handling rules."
  },
  {
    "text": "This document explains how to create and configure a Service Job, which is used to schedule and execute network tasks like OS upgrades or configuration rollbacks on specific devices using a pre-defined Service Template."
  },
  {
    "text": "This section guides a user on how to configure and create a network service job by selecting target devices, providing authentication credentials, and setting auditing options."
  },
  {
    "text": "This section explains how to create and manage Authentication Profiles, which control user access for executing command-line (CLI) sessions on network devices."
  },
  {
    "text": "This document describes the attributes of an NCCM Authentication Profile, which stores device access details like IP, protocol, and credentials, and explains how to edit or clone these profiles."
  },
  {
    "text": "This section describes how to create, view, delete, and perform bulk actions (enable, disable, delete) on authentication profiles, which are used to manage access to network devices."
  },
  {
    "text": "This section explains how to configure authentication and authorization profiles within the NCCM module to control user access and permissions for command-line interaction with network devices."
  },
  {
    "text": "This guide explains how to create, view, and manage authorization profiles to control which commands specific users or user groups can execute on associated network devices."
  },
  {
    "text": "The user can learn how to create, manage, and bulk-edit authorization profiles to control user access to network devices by linking authentication credentials to specific users, IPs, and asset tags."
  },
  {
    "text": "This guide explains how to configure an Authorization Profile within NCCM to control and audit user actions during SSH/TELNET sessions on network devices by defining rules for specific commands."
  },
  {
    "text": "A user learns how to configure Infraon NCCM to execute specific commands while simultaneously sending a notification about their use."
  },
  {
    "text": "This section explains how to configure permitted CLI commands for users and how to ignore system-level prompts, like passwords, to ensure successful remote command execution on network devices."
  },
  {
    "text": "The user can learn how to define thresholds for monitoring key performance indicators (KPIs) like CPU and memory utilization, which generate alerts with different severity levels to indicate network and device health."
  },
  {
    "text": "An administrator can configure static or adaptive ML-based thresholds with multiple severity levels for various performance metrics to trigger alarms when specific conditions are met."
  },
  {
    "text": "This section explains how to view, add, edit, and delete monitoring thresholds, which define the rules for triggering alarms based on device performance and availability metrics."
  },
  {
    "text": "This section explains how to configure the specific conditions, such as value, hold time, and severity, that trigger or clear an alarm for a monitored asset."
  },
  {
    "text": "This section explains how to apply monitoring thresholds to devices and configure Trap profiles using a Trap OID to automatically generate system events."
  },
  {
    "text": "This document explains how administrators can configure trap alarm messages, register new administrator accounts, and set up rules to automatically assign departments to Configuration Items (CIs)."
  },
  {
    "text": "This document explains how administrators can configure rules to automatically create relationships between Configuration Items (CIs) and their locations, requesters, software, or technicians, and also how to customize the platform's access URL for branding."
  },
  {
    "text": "This section explains how administrators can configure various user login and authentication methods, including standard credentials, SMS-based two-factor, and Single Sign-On (SSO) with Microsoft and Google."
  },
  {
    "text": "An administrator can configure platform-wide settings like language, time zone, and session timeouts, and customize module-specific formats and behaviors such as prefixes and auto-closure rules."
  },
  {
    "text": "Administrators can learn how to customize the platform's appearance, including the logo, color theme, and language, to match their organization's branding."
  },
  {
    "text": "Administrators can manage, customize, and create configuration templates and maintain a centralized, searchable list of software vendors."
  },
  {
    "text": "This section explains how administrators can add and manage vendor information and customize the visibility of modules in the end-user Self-Service Portal."
  },
  {
    "text": "This section describes the components of the end-user Self-Service Portal (SSP), including dashboards, reports, ticketing, and asset visibility, and introduces the Log Management module for real-time analysis and troubleshooting of infrastructure logs."
  },
  {
    "text": "This section explains that the Log Management module collects, stores (in Elasticsearch), and analyzes logs from various sources like Syslog, Winlogbeat, and Filebeat for security and compliance, with user access being controlled by administrator-defined roles and privileges."
  },
  {
    "text": "This section explains how to configure, group, and manage log indices using the Multi-Index feature to efficiently search and analyze logs from various sources over different time periods."
  },
  {
    "text": "This text explains how to create and manage a 'Multi-Index' within the Log Management module, which allows users to group multiple log data sources for unified searching and analysis."
  },
  {
    "text": "This section explains how users can manage Log Multi-Index configurations by viewing details, editing settings, and adding or deleting specific fields for comprehensive log analysis."
  },
  {
    "text": "Users can learn how to add and configure a new custom field to a Log Multi-Index for more comprehensive log analysis and visualization."
  },
  {
    "text": "The user can learn how to search, filter, and analyze large volumes of log data by selecting a multi-index, applying filters, and using KQL syntax within a specified time range."
  },
  {
    "text": "This section explains how to customize the Log Management data view by filtering logs within specific time ranges, exporting the data, and adjusting the layout of the log data table."
  },
  {
    "text": "This document explains how a user can sort, filter, inspect, and customize the view of log data within the Log Search and Log Stream features."
  },
  {
    "text": "This section describes how to use the Log Stream feature to view live logs in real-time and configure stream settings like multi-index names and log sources."
  },
  {
    "text": "This section explains how to manage log sources for a log stream, customize the displayed log columns, and export log data for analysis and reporting."
  },
  {
    "text": "This section explains how to download generated log reports and begins the guide for configuring Azure Active Directory integration to synchronize user and requester accounts."
  },
  {
    "text": "A user can learn the steps to register a new application and copy its Application and Tenant IDs, which are required for setting up integrations."
  },
  {
    "text": "This chunk describes the initial steps for granting API permissions to an application from within the platform's user interface."
  },
  {
    "text": "This step instructs the user to select 'Microsoft Graph' from a list of available APIs to configure an integration with Microsoft services."
  },
  {
    "text": "This describes a step for enabling specific API permissions, such as 'User.Read.All', to configure an integration that requires access to read user data."
  },
  {
    "text": "This guide provides instructions on how to create a client secret and grant administrative consent, which are required steps for configuring an external application integration within the platform."
  },
  {
    "text": "This describes how to add a new client secret for an integration by providing a description and setting an expiration date."
  },
  {
    "text": "This section explains how to finalize the Azure Active Directory integration by installing the app from the Marketplace and entering the necessary credentials like Client ID and Secret Key."
  },
  {
    "text": "This section explains how to map columns from a source file to the Requester, Work, and Address fields in Infraon during a data import process."
  },
  {
    "text": "This section describes how to install the Dell integration from the Marketplace to centralize Dell infrastructure data like hardware inventory and warranty, and also mentions synchronizing Azure users as requesters."
  },
  {
    "text": "This describes the process of installing an application and then using a 'Sync Now' function to synchronize its data with the platform."
  },
  {
    "text": "This chunk explains that users can install the Google Workspace integration from the Marketplace to sync requester information into Infraon, enabling seamless collaboration."
  },
  {
    "text": "This section guides the user on how to start the installation of a Google integration and select the appropriate Google account to use."
  },
  {
    "text": "This section shows the final authorization step required to complete the Google account integration with Infraon."
  },
  {
    "text": "The user can complete the Google Workspace integration by navigating to its settings and clicking 'Sync Now' to initiate the data synchronization with Infraon."
  },
  {
    "text": "This guide explains how to navigate to the Google Cloud Console's OAuth consent screen to configure API services for an integration project."
  },
  {
    "text": "This guide explains the steps to save an edited application registration and then proceed to add or remove its permission scopes."
  },
  {
    "text": "This document chunk guides a user on how to add or update the specific Google OAuth authorization scopes required to configure the Google Workspace integration."
  },
  {
    "text": "This section explains how to install the JAMF integration from the Marketplace to automatically import detailed inventory and lifecycle data for Apple devices into Infraon's Asset Management module."
  },
  {
    "text": "This chunk outlines the user actions for a generic installation process, which involves initiating the install and then providing credentials."
  },
  {
    "text": "This chunk describes how to enter and verify JAMF credentials within an Infraon configuration tab to set up the third-party integration."
  },
  {
    "text": "The user can finalize a system integration by submitting the verified configuration and then initiating an immediate data synchronization."
  },
  {
    "text": "This section explains that users can install the Infraon-ServiceNow integration from the Marketplace to automate workflows, create tickets, and view ticket statuses between the two platforms."
  },
  {
    "text": "This chunk describes the high-level steps to install a platform component and then navigate to its configuration screen."
  },
  {
    "text": "This section guides the user on how to navigate to the 'Application Registry' within ServiceNow to find the necessary credentials for setting up the integration with Infraon."
  },
  {
    "text": "This text describes how to register a new third-party application for integration and update its configuration details within the platform."
  },
  {
    "text": "This text describes the final steps for configuring the Slack integration, which involves using credentials and initiating a data synchronization."
  },
  {
    "text": "This section explains how to install the Slack integration and use it to create and update Infraon tickets directly from within the Slack workspace."
  },
  {
    "text": "This section explains how to install and configure the Infraon-Teams application by creating an Azure Bot, enabling users to create and manage tickets and requests directly from Microsoft Teams."
  },
  {
    "text": "This section guides the user on how to enter mandatory configuration details like Bot Handle, Subscription, and Resource Group to set up the Azure Bot integration."
  },
  {
    "text": "This chunk instructs a user on how to add a Microsoft Teams channel to a successfully created Azure bot within the platform's Bot Services settings."
  },
  {
    "text": "This text outlines the steps to finalize the Microsoft Teams integration by agreeing to terms and selecting a messaging license option."
  },
  {
    "text": "This describes a step for configuring the integration with Microsoft Entra ID by navigating to the App Registration section within the Azure portal."
  },
  {
    "text": "This chunk explains how to generate and securely copy a new client secret for an application, which is a necessary step for configuring third-party integrations like Azure Active Directory."
  },
  {
    "text": "This section guides a user on how to create a new application registration in Microsoft Entra ID as a step towards configuring a platform integration."
  },
  {
    "text": "This section guides the user through the process of creating a new Client Secret ID for an application or integration within the platform's settings."
  },
  {
    "text": "The user learns how to configure access control by assigning a contributor role to a bot's app registration, which is a necessary step for integration."
  },
  {
    "text": "This guide explains the final steps of assigning a specific administrative role, such as 'Contributor', to a user by selecting them and completing the assignment process."
  },
  {
    "text": "This guide explains how to start the installation of the Microsoft Teams integration from the Infraon Marketplace."
  },
  {
    "text": "This describes the process of entering and verifying credentials, which is a required step for configuring device discovery, network automation, or API integrations."
  },
  {
    "text": "This chunk instructs the user on how to download the manifest file needed to add the Infraon Infinity integration into their Microsoft Teams environment."
  },
  {
    "text": "This chunk provides instructions for navigating to the app management section within Microsoft Teams, a necessary step for installing the Infraon Infinity integration."
  },
  {
    "text": "This describes how to upload a custom application into the Infraon platform using a manifest file, which is a core function of the Marketplace."
  },
  {
    "text": "This chunk describes the final step of installing the WhatsApp integration by selecting its manifest file and adding it to the platform."
  },
  {
    "text": "This section describes how to install the Infraon-WhatsApp integration from the Marketplace, which allows users to create and monitor support tickets and service requests directly via WhatsApp chat."
  },
  {
    "text": "This guide explains how to configure the WhatsApp integration by entering required credentials like the phone number ID and permanent access token from the Meta Business Platform."
  },
  {
    "text": "This describes the initial steps for creating a new application integration through the 'Apps' section of the platform."
  },
  {
    "text": "This describes the process of creating a new application within the platform by selecting its type and providing required credentials."
  },
  {
    "text": "This section guides a user on how to set up the WhatsApp integration after creating the application in the marketplace."
  },
  {
    "text": "This section describes the initial steps to configure the WhatsApp API for integration with the platform."
  },
  {
    "text": "This section guides the user on configuring the WhatsApp integration by copying the necessary account IDs and preparing to generate a permanent access token."
  },
  {
    "text": "This guide explains how to add a new system user and assign them an administrative role within the platform's user management settings."
  },
  {
    "text": "This chunk describes how to generate a new token with specific permissions required for the WhatsApp Business integration."
  },
  {
    "text": "This describes the final steps of submitting credentials and using a generated token to complete a configuration or authentication process."
  },
  {
    "text": "This section guides a user on how to configure webhooks for third-party integrations by copying a generated Webhook URL and a verification token."
  },
  {
    "text": "This step guides the user on how to edit and verify a webhook's configuration by pasting a Callback URL and token, and then managing its fields."
  },
  {
    "text": "This section guides a user on how to update their personal details, such as adding a phone number and configuring message preferences in their user profile."
  },
  {
    "text": "This section guides the user on how to enter their business name, website, country, and verify their phone number as part of the initial platform configuration."
  },
  {
    "text": "This section guides the user on how to add a payment method, likely for managing vendors, contracts, or purchase orders."
  },
  {
    "text": "This text describes the final steps to complete the Infraon-WhatsApp integration by adding payment details and finalizing the API setup."
  },
  {
    "text": "The user can learn that the Ring Central integration facilitates faster ticket resolution by connecting requesters and technicians, and how to start its installation from the Marketplace."
  },
  {
    "text": "This section guides the user on how to install the RingCentral integration from the Marketplace and access its configuration settings."
  },
  {
    "text": "This text describes the step of entering credentials to register a third-party application within the Infraon platform."
  },
  {
    "text": "This section guides the user through the initial steps of creating and registering a RingOut app on the RingCentral developer portal for integration purposes."
  },
  {
    "text": "The user can configure an application's properties and visual representation (App Card) for display in the App Gallery."
  },
  {
    "text": "The user can configure authentication types, enable refresh tokens, and define security scopes with either public or private access levels."
  },
  {
    "text": "This section explains how to complete the registration of a new application and then navigate to its details to obtain access credentials."
  },
  {
    "text": "This section guides the user on how to configure an API integration by copying the API server URL, Client ID, and Client Secret into the Infraon configuration page."
  },
  {
    "text": "This chunk explains how to generate and download a JWT token from a credential page and then apply it within the Infraon portal's configuration."
  },
  {
    "text": "This guide explains the final step of completing the Ring Central integration is to verify the added credentials."
  },
  {
    "text": "This section explains how to install the LDAP integration from the Marketplace to streamline user management by adding and viewing end-users directly from an LDAP directory."
  },
  {
    "text": "The user learns how to configure an LDAP integration by entering server details and credentials, and then verifying the setup."
  },
  {
    "text": "This chunk explains how to map columns when importing requester data and how to preview that data from another user's perspective to verify accuracy."
  },
  {
    "text": "This chunk describes the final step of an integration setup, where a user's profile information is imported and the configuration is submitted to be saved."
  },
  {
    "text": "This text explains how to initiate the synchronization of requester data into Infraon Infinity from a configured third-party integration by clicking the 'Sync Now' button."
  },
  {
    "text": "This chunk explains that integrating with JIRA from the Marketplace enables a two-way sync where JIRA issues related to an asset are visible within that asset's details in Infraon."
  },
  {
    "text": "This section guides the user on how to install and configure the JIRA integration by providing necessary credentials like the JIRA Admin Email, API Token, and Site Name."
  },
  {
    "text": "This text describes the steps a user must take within the JIRA interface to navigate to their account's security settings, which is a prerequisite for generating an API token for the integration."
  },
  {
    "text": "This section explains how to generate a new API token for authentication by navigating to the API Tokens section and providing a label."
  },
  {
    "text": "This section describes the final step of configuring an API integration by pasting the obtained API token into the appropriate field on the Infraon configuration page."
  },
  {
    "text": "This section explains how to configure which asset types and specific data fields from Infraon are synchronized with the JIRA platform after verifying integration credentials."
  },
  {
    "text": "This describes how to manually trigger the synchronization of assets to JIRA and locate the synced data within JIRA's 'Assets' or 'Object Schemas' section."
  },
  {
    "text": "This guide explains the initial step of creating a custom field in Jira's issue settings to facilitate integration with the Infraon Asset Management module."
  },
  {
    "text": "This guide explains how to create a new custom field for asset objects by selecting the 'Assets objects' type and providing a name and description."
  },
  {
    "text": "This section explains how to configure the contents and default values for a custom field associated with an Infraon IT Asset."
  },
  {
    "text": "This guide explains how to define a custom field's scope by selecting an object schema and customize its appearance on an issue view page."
  },
  {
    "text": "The user learns how to associate a custom field containing synced Infraon IT assets with specific screens in Jira to ensure it is visible."
  },
  {
    "text": "This guide explains how to make a custom asset-related field visible on the issue (ticket) screen by associating it with that screen and updating the view settings."
  },
  {
    "text": "The user can learn the initial step to create a new issue (ticket or request) by using the 'Create' button and selecting its project and type."
  },
  {
    "text": "This section guides a user on how to finalize the creation of a new issue by summarizing the problem, attaching files, and linking the relevant IT asset."
  },
  {
    "text": "This guide explains how to navigate to an IT asset's details page and filter the ticket view to display associated JIRA issues."
  },
  {
    "text": "The user can learn that the Infraon Infinity portal can be integrated with JIRA to view issues from within the platform."
  }
]