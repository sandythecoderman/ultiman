{
  "metadata": {
    "version": "1.0",
    "generated_at": "2025-07-10T19:07:52Z",
    "total_modules": 22,
    "total_features": 521,
    "total_entities": 2352,
    "total_workflows": 206
  },
  "modules": {
    "imacd_(beta)": {
      "name": "IMACD (Beta)",
      "description": "The IMACD module provides a structured process for managing the entire lifecycle of IT assets\u2014from installation to disposal\u2014to facilitate smooth organizational changes.",
      "category": "unknown",
      "features": {
        "imacd_process_management": {
          "name": "IMACD Process Management",
          "description": "Provides a structured framework for managing organizational changes, encompassing system installation, asset relocation, new component integration, configuration modifications, and secure asset disposal.",
          "category": "core",
          "entities": {
            "imacd_process": {
              "name": "IMACD process",
              "type": "resource",
              "description": "A structured way to manage organizational changes, encompassing Install, Move, Add, Change, and Dispose stages."
            },
            "organizational_changes": {
              "name": "Organizational changes",
              "type": "data",
              "description": "The shifts and transformations within an organization that the IMACD module helps manage."
            },
            "it_management": {
              "name": "IT management",
              "type": "configuration",
              "description": "The broader domain that IMACD addresses, focusing on IT resources."
            },
            "resource_handling": {
              "name": "Resource handling",
              "type": "action",
              "description": "The management of IT assets and other resources throughout their lifecycle."
            }
          }
        },
        "installation_workflow": {
          "name": "Installation Workflow",
          "description": "Manages the deployment and configuration of new IT assets within the target infrastructure, including provisioning compute nodes, client devices, applications, and network fabric.",
          "category": "core",
          "entities": {
            "installation_phase": {
              "name": "Installation phase",
              "type": "action",
              "description": "The stage focused on deploying and configuring new IT assets."
            },
            "it_assets": {
              "name": "IT assets",
              "type": "resource",
              "description": "New hardware and software components deployed within the target infrastructure."
            },
            "target_infrastructure": {
              "name": "Target infrastructure",
              "type": "resource",
              "description": "The environment where IT assets are deployed and configured."
            },
            "compute_nodes": {
              "name": "Compute nodes",
              "type": "resource",
              "description": "Specific IT assets provisioned during installation."
            },
            "client_devices": {
              "name": "Client devices",
              "type": "resource",
              "description": "Specific IT assets provisioned during installation."
            },
            "applications": {
              "name": "Applications",
              "type": "resource",
              "description": "Specific IT assets provisioned during installation."
            },
            "network_fabric": {
              "name": "Network fabric",
              "type": "resource",
              "description": "Specific IT assets provisioned during installation."
            }
          }
        },
        "movement_workflow": {
          "name": "Movement Workflow",
          "description": "Handles the physical and logical relocation of IT resources, such as migrating hardware assets to new sites and transferring data and software between environments.",
          "category": "core",
          "entities": {
            "imacd_move_phase": {
              "name": "IMACD Move phase",
              "type": "action",
              "description": "The stage addressing the physical and logical relocation of IT resources."
            },
            "it_resources": {
              "name": "IT resources",
              "type": "resource",
              "description": "Assets that are physically or logically relocated."
            },
            "hardware_assets": {
              "name": "Hardware assets",
              "type": "resource",
              "description": "Physical IT resources that may be migrated to a new site."
            },
            "data": {
              "name": "Data",
              "type": "data",
              "description": "Information transferred between servers or cloud environments."
            },
            "software": {
              "name": "Software",
              "type": "resource",
              "description": "Applications and programs transferred between servers or cloud environments."
            },
            "new_site": {
              "name": "New site",
              "type": "data",
              "description": "The destination for relocated hardware assets."
            }
          }
        },
        "addition_workflow": {
          "name": "Addition Workflow",
          "description": "Manages the planned integration and onboarding of new IT components, including software applications, hardware upgrades, and network expansions into existing infrastructure.",
          "category": "core",
          "entities": {
            "add_phase": {
              "name": "Add phase",
              "type": "action",
              "description": "The stage focused on the planned integration of new IT components into existing infrastructure."
            },
            "new_it_components": {
              "name": "New IT components",
              "type": "resource",
              "description": "Elements like software applications, hardware upgrades, and network expansions being integrated."
            },
            "existing_infrastructure": {
              "name": "Existing infrastructure",
              "type": "resource",
              "description": "The current IT environment into which new components are integrated."
            },
            "software_applications": {
              "name": "Software applications",
              "type": "resource",
              "description": "New software tools deployed and integrated with existing systems."
            },
            "hardware_upgrades": {
              "name": "Hardware upgrades",
              "type": "resource",
              "description": "Enhanced hardware components incorporated to augment performance, functionality, or capacity."
            },
            "network_expansions": {
              "name": "Network expansions",
              "type": "resource",
              "description": "Extensions of the network infrastructure to accommodate additional devices, locations, or increased bandwidth."
            }
          }
        },
        "change_workflow": {
          "name": "Change Workflow",
          "description": "Facilitates controlled modifications and updates to hardware or software configurations, addressing evolving business needs through adjustments to network infrastructure, software updates, and security enhancements.",
          "category": "core",
          "entities": {
            "change_management_phase": {
              "name": "Change Management phase",
              "type": "action",
              "description": "The stage addressing controlled modifications to hardware or software configurations."
            },
            "hardware_configurations": {
              "name": "Hardware configurations",
              "type": "configuration",
              "description": "Settings and parameters of physical IT assets that can be modified."
            },
            "software_configurations": {
              "name": "Software configurations",
              "type": "configuration",
              "description": "Settings and parameters of software applications and operating systems that can be modified."
            },
            "network_infrastructure_modifications": {
              "name": "Network infrastructure modifications",
              "type": "action",
              "description": "Adjustments to network settings like routing protocols, firewall rules, or VLAN configurations."
            },
            "software_updates": {
              "name": "Software updates",
              "type": "action",
              "description": "Deploying new versions of operating systems, applications, or firmware."
            },
            "security_enhancements": {
              "name": "Security enhancements",
              "type": "action",
              "description": "Implementing additional access controls, encryption protocols, or intrusion detection systems."
            }
          }
        },
        "disposal_workflow": {
          "name": "Disposal Workflow",
          "description": "Manages the planned and secure retirement or removal of hardware and software assets at the end of their useful life, ensuring asset optimization, minimizing security vulnerabilities, and guaranteeing compliant data disposal.",
          "category": "core",
          "entities": {
            "disposal_stage": {
              "name": "Disposal stage",
              "type": "action",
              "description": "The stage encompassing the planned and secure retirement or removal of hardware and software assets."
            },
            "hardware_assets": {
              "name": "Hardware assets",
              "type": "resource",
              "description": "Physical IT assets that are retired or removed at the end of their useful life."
            },
            "software_assets": {
              "name": "Software assets",
              "type": "resource",
              "description": "Software licenses or installations that are retired or removed."
            },
            "outdated_systems": {
              "name": "Outdated systems",
              "type": "resource",
              "description": "Systems that are no longer useful and pose security vulnerabilities."
            },
            "sensitive_information": {
              "name": "Sensitive information",
              "type": "data",
              "description": "Data that requires secure handling during asset disposal."
            }
          }
        },
        "process_creation": {
          "name": "Process Creation",
          "description": "Allows users to initiate new IMACD processes for any of the five stages (Install, Move, Add, Change, Dispose) through a guided interface.",
          "category": "core",
          "entities": {
            "new_process": {
              "name": "New Process",
              "type": "action",
              "description": "A UI element or action to initiate the creation of a new IMACD process."
            },
            "process_name": {
              "name": "Process Name",
              "type": "configuration",
              "description": "A field to define a suitable name for the IMACD process being created."
            },
            "description": {
              "name": "Description",
              "type": "configuration",
              "description": "A field to provide a brief description of the IMACD process."
            },
            "priority": {
              "name": "Priority",
              "type": "configuration",
              "description": "A field to set the urgency level (Low, Medium, High, Critical) for the process."
            },
            "assignee": {
              "name": "Assignee",
              "type": "configuration",
              "description": "A field to select the user responsible for the task."
            },
            "location": {
              "name": "Location",
              "type": "configuration",
              "description": "A field to specify the physical location relevant to the asset or process."
            },
            "number_of_assets": {
              "name": "Number of Assets",
              "type": "configuration",
              "description": "A field to specify the quantity of assets involved in an 'Add' process."
            },
            "shipping_address": {
              "name": "Shipping Address",
              "type": "configuration",
              "description": "A field to specify the retrieval address for assets in a 'Move' process."
            },
            "destination_address": {
              "name": "Destination Address",
              "type": "configuration",
              "description": "A field to specify the delivery address for assets in a 'Move' process."
            },
            "save": {
              "name": "Save",
              "type": "action",
              "description": "An action to confirm and save the details of the newly created IMACD process."
            }
          }
        },
        "process_identification_&_tracking": {
          "name": "Process Identification & Tracking",
          "description": "Displays and tracks unique IMACD IDs, process names, and process types, providing clear identification for each process instance.",
          "category": "core",
          "entities": {
            "imacd_id": {
              "name": "IMACD ID",
              "type": "data",
              "description": "A unique identifier associated with each IMACD process."
            },
            "process_name": {
              "name": "Process name",
              "type": "data",
              "description": "The user-defined name given to an IMACD process."
            },
            "creation_time": {
              "name": "Creation Time",
              "type": "data",
              "description": "The timestamp indicating when an IMACD process was initiated."
            }
          }
        },
        "process_status_&_priority_management": {
          "name": "Process Status & Priority Management",
          "description": "Allows setting, displaying, and tracking the current status (e.g., New, Waiting for Approval) and priority levels (Low, Medium, High, Critical) of each process.",
          "category": "core",
          "entities": {
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The current state of an IMACD process (e.g., New, Waiting for Approval)."
            },
            "priority": {
              "name": "Priority",
              "type": "data",
              "description": "The level of urgency assigned to an IMACD process (Low, Medium, High, Critical)."
            }
          }
        },
        "assignee_management": {
          "name": "Assignee Management",
          "description": "Enables assigning and displaying the user or team responsible for a process, facilitating task delegation and accountability.",
          "category": "core",
          "entities": {
            "assignee": {
              "name": "Assignee",
              "type": "resource",
              "description": "The user or individual assigned responsibility for a specific IMACD process."
            }
          }
        },
        "asset_association_&_classification": {
          "name": "Asset Association & Classification",
          "description": "Allows selecting and associating specific assets with a process, including defining asset type (IT/fixed) and category (e.g., laptops, desktops).",
          "category": "core",
          "entities": {
            "asset_type": {
              "name": "Asset Type",
              "type": "configuration",
              "description": "A classification defining whether an asset is IT or fixed."
            },
            "asset_category": {
              "name": "Asset Category",
              "type": "configuration",
              "description": "A sub-division of assets within a selected asset type (e.g., laptops, desktops within IT assets)."
            },
            "asset_details": {
              "name": "Asset Details",
              "type": "data",
              "description": "The specific name or identifying information of an asset selected for a process."
            },
            "asset": {
              "name": "Asset",
              "type": "resource",
              "description": "A tangible or intangible item (IT or fixed) that is part of an IMACD process."
            }
          }
        },
        "process_deletion": {
          "name": "Process Deletion",
          "description": "Provides the ability to remove an IMACD process from the system.",
          "category": "core",
          "entities": {
            "delete": {
              "name": "Delete",
              "type": "action",
              "description": "An action to remove an existing IMACD process."
            },
            "process": {
              "name": "Process",
              "type": "resource",
              "description": "The specific IMACD process instance targeted for removal."
            }
          }
        },
        "process_search_&_filtering": {
          "name": "Process Search & Filtering",
          "description": "Enables searching and advanced filtering of IMACD processes by various criteria such as Name, Status, State, Creation Time, Assignee, IMACD ID, Priority, and Process Type.",
          "category": "extended",
          "entities": {
            "search": {
              "name": "Search",
              "type": "action",
              "description": "An action to find specific IMACD processes based on keywords or criteria."
            },
            "filter": {
              "name": "Filter",
              "type": "action",
              "description": "An action to narrow down the displayed IMACD processes based on selected fields and conditions."
            },
            "field": {
              "name": "Field",
              "type": "configuration",
              "description": "A data attribute (e.g., Name, Status, Assignee) used as a criterion for filtering processes."
            },
            "condition": {
              "name": "Condition",
              "type": "configuration",
              "description": "A logical operator or value applied to a field for filtering (e.g., 'equals', 'contains')."
            }
          }
        },
        "multiple_view_options": {
          "name": "Multiple View Options",
          "description": "Offers both Grid View (tabular format) and Panel View (summary card format) for displaying process information, providing flexible display formats.",
          "category": "extended",
          "entities": {
            "grid_view": {
              "name": "Grid View",
              "type": "configuration",
              "description": "A display option to present IMACD process information in a tabular format."
            },
            "panel_view": {
              "name": "Panel View",
              "type": "configuration",
              "description": "A display option to present IMACD process details in a summary card format."
            }
          }
        },
        "workflow_visualization_reference": {
          "name": "Workflow Visualization Reference",
          "description": "Indicates the name of the visual flowchart associated with a process, providing a reference to its underlying workflow.",
          "category": "extended",
          "entities": {
            "imacd_lifecycle": {
              "name": "IMACD Lifecycle",
              "type": "data",
              "description": "A visual representation (image) illustrating the stages of the IMACD process."
            },
            "workflow": {
              "name": "Workflow",
              "type": "data",
              "description": "A visual flowchart depicting the steps and sequence of a specific IMACD process phase (e.g., Installation, Movement)."
            }
          }
        },
        "location_management": {
          "name": "Location Management",
          "description": "Allows selecting or adding locations for assets or processes, supporting tracking and managing physical locations relevant to IMACD operations.",
          "category": "extended",
          "entities": {
            "location": {
              "name": "Location",
              "type": "data",
              "description": "A specific geographical or organizational place associated with an asset or process."
            }
          }
        },
        "shipment_address_management": {
          "name": "Shipment Address Management",
          "description": "Allows specifying and tracking shipping (origin) and destination addresses for asset movements, providing dedicated fields for logistics details.",
          "category": "extended",
          "entities": {
            "shipping_address": {
              "name": "Shipping Address",
              "type": "data",
              "description": "The designated address from which a package or asset is to be retrieved."
            },
            "destination_address": {
              "name": "Destination Address",
              "type": "data",
              "description": "The physical address where a package or asset should be delivered."
            }
          }
        },
        "asset_count_display": {
          "name": "Asset Count Display",
          "description": "Shows the total number of assets involved in a process, providing a quick overview of the scope of assets affected.",
          "category": "extended",
          "entities": {
            "asset_count": {
              "name": "Asset Count",
              "type": "data",
              "description": "A numerical value indicating the total number of assets involved in a particular IMACD process."
            }
          }
        },
        "asset-specific_comments": {
          "name": "Asset-Specific Comments",
          "description": "Enables adding and viewing comments related to individual assets within a process, allowing for detailed notes specific to assets.",
          "category": "extended",
          "entities": {
            "comment": {
              "name": "Comment",
              "type": "data",
              "description": "Additional textual notes or remarks associated with a specific asset within an IMACD process."
            }
          }
        },
        "comprehensive_communication_&_notes": {
          "name": "Comprehensive Communication & Notes",
          "description": "Provides a log of all communication (email, SMS, comments) and allows adding notes for internal communication, centralizing communication history.",
          "category": "extended",
          "entities": {
            "communication": {
              "name": "Communication",
              "type": "data",
              "description": "A record of all interactions and messages related to an IMACD process."
            },
            "email": {
              "name": "Email",
              "type": "data",
              "description": "Electronic mail messages exchanged during the process."
            },
            "sms": {
              "name": "SMS",
              "type": "data",
              "description": "Short Message Service communications exchanged during the process."
            },
            "notes": {
              "name": "Notes",
              "type": "data",
              "description": "Additional textual remarks added for better communication or record-keeping."
            }
          }
        },
        "in-app_email_sending": {
          "name": "In-App Email Sending",
          "description": "Enables sending emails directly from within the process interface, streamlining communication without leaving the module.",
          "category": "extended",
          "entities": {
            "mail": {
              "name": "Mail",
              "type": "action",
              "description": "An action to compose and send an email directly from within the IMACD module."
            }
          }
        },
        "attachment_management": {
          "name": "Attachment Management",
          "description": "Allows displaying, adding, and managing documents aligned to the process, supporting attaching relevant files for comprehensive record-keeping.",
          "category": "extended",
          "entities": {
            "attachments": {
              "name": "Attachments",
              "type": "resource",
              "description": "Documents or files associated with an IMACD process."
            },
            "add": {
              "name": "Add",
              "type": "action",
              "description": "An action to upload new documents or files as attachments."
            }
          }
        },
        "real-time_activity_tracking": {
          "name": "Real-time Activity Tracking",
          "description": "Provides an overview of all in-progress and completed activities within an IMACD stage, offering live updates on task progression.",
          "category": "extended",
          "entities": {
            "recent_activities": {
              "name": "Recent Activities",
              "type": "data",
              "description": "A real-time overview of all actions and events, both in progress and completed, within an IMACD stage."
            },
            "activities": {
              "name": "Activities",
              "type": "data",
              "description": "Individual actions or events recorded as part of an IMACD process."
            }
          }
        },
        "gate_pass_management": {
          "name": "Gate Pass Management",
          "description": "Provides functionality to generate, track, and manage authorization documents for asset movement, including customizable fields, transporter details, validity periods, and barcode/QR code scanning support.",
          "category": "extended",
          "entities": {
            "gate_pass": {
              "name": "Gate Pass",
              "type": "resource",
              "description": "An authorization document granting permission for specific assets to leave and enter designated areas."
            },
            "template_name": {
              "name": "Template Name",
              "type": "configuration",
              "description": "A field to enter a custom name for a gate pass template."
            },
            "transporter_name": {
              "name": "Transporter Name",
              "type": "configuration",
              "description": "A field to enter the name of the transporter for the assigned shipment."
            },
            "bundle_id": {
              "name": "Bundle ID",
              "type": "configuration",
              "description": "A field to add a unique identifier assigned to the respective asset bundle."
            },
            "shipment_id": {
              "name": "Shipment ID",
              "type": "configuration",
              "description": "A field to add the identifier associated with the assigned process's shipment."
            },
            "due_on": {
              "name": "Due On",
              "type": "configuration",
              "description": "A field to set the date when the gate pass will no longer be valid."
            },
            "issue_date": {
              "name": "Issue Date",
              "type": "configuration",
              "description": "A field to add the date when the gate pass is issued."
            },
            "phone_number": {
              "name": "Phone Number",
              "type": "configuration",
              "description": "A field to enter the phone numbers of the respective assignee or contact."
            },
            "type_of_scanning": {
              "name": "Type of scanning",
              "type": "configuration",
              "description": "An option to select whether barcode or QR code scanning is required for the gate pass."
            },
            "add_custom_field": {
              "name": "Add Custom Field",
              "type": "action",
              "description": "An action to personalize the gate pass with additional information beyond standard categories."
            }
          }
        }
      },
      "workflows": {
        "imacd_process_management": {
          "name": "IMACD Process Management",
          "description": "Managing the lifecycle of all IMACD processes, including searching, filtering, viewing details, and deleting existing processes within the system."
        },
        "imacd_process_creation": {
          "name": "IMACD Process Creation",
          "description": "Initiating new IMACD processes (Install, Move, Add, Change, Dispose) by defining process details, priority, assignee, location, and associated assets."
        },
        "it_asset_installation": {
          "name": "IT Asset Installation",
          "description": "Deploying and configuring new IT assets such as compute nodes, client devices, applications, and network fabric within the target infrastructure."
        },
        "it_asset_relocation_(move)": {
          "name": "IT Asset Relocation (Move)",
          "description": "Managing the physical and logical relocation of IT resources, including hardware assets, data, and software, between different sites or environments."
        },
        "it_component_integration_(add)": {
          "name": "IT Component Integration (Add)",
          "description": "Planning and integrating new IT components like software applications, hardware upgrades, and network expansions into the existing infrastructure."
        },
        "it_configuration_change_management": {
          "name": "IT Configuration Change Management",
          "description": "Implementing controlled modifications and updates to hardware or software configurations, such as network infrastructure, software versions, and security enhancements."
        },
        "it_asset_disposal_(destroy)": {
          "name": "IT Asset Disposal (Destroy)",
          "description": "Managing the planned and secure retirement or removal of hardware and software assets at the end of their useful life, including compliant data disposal."
        },
        "gate_pass_management": {
          "name": "Gate Pass Management",
          "description": "Generating and managing gate passes for the secure and authorized movement of IT equipment and valuable assets, including custom fields and scanning options."
        },
        "imacd_process_communication_management": {
          "name": "IMACD Process Communication Management",
          "description": "Facilitating communication within an IMACD process through email, SMS, and adding notes."
        },
        "imacd_process_attachment_management": {
          "name": "IMACD Process Attachment Management",
          "description": "Managing attachments and documents associated with an IMACD process."
        }
      }
    },
    "knowledge_base": {
      "name": "Knowledge Base",
      "description": "The Knowledge Base module is a self-service repository designed to provide users with quick access to solutions, guides, and information, enabling independent problem-solving and reducing reliance on direct support.",
      "category": "unknown",
      "features": {
        "article_authoring": {
          "name": "Article Authoring",
          "description": "Users can create and write their own knowledge base articles.",
          "category": "core",
          "entities": {
            "article": {
              "name": "Article",
              "type": "resource",
              "description": "The primary content unit created by users within the Knowledge Base."
            },
            "user": {
              "name": "User",
              "type": "resource",
              "description": "An individual who creates or 'authors' articles in the Knowledge Base."
            }
          }
        },
        "content_curation": {
          "name": "Content Curation",
          "description": "Users can gather and select articles/guides from internal or external sources.",
          "category": "core",
          "entities": {
            "article/guide": {
              "name": "Article/Guide",
              "type": "resource",
              "description": "Content, such as articles or guides, that is selected, organized, and maintained."
            },
            "internal_source": {
              "name": "Internal Source",
              "type": "resource",
              "description": "Origin of content from within the organization."
            },
            "external_source": {
              "name": "External Source",
              "type": "resource",
              "description": "Origin of content from outside the organization."
            }
          }
        },
        "knowledge_access_&_utilization": {
          "name": "Knowledge Access & Utilization",
          "description": "Users can search for, find, and use information within the knowledge base.",
          "category": "core",
          "entities": {
            "knowledge": {
              "name": "Knowledge",
              "type": "data",
              "description": "The collective information and solutions stored in the Knowledge Base."
            },
            "user": {
              "name": "User",
              "type": "resource",
              "description": "An individual who accesses and uses the knowledge for self-service."
            },
            "solution": {
              "name": "Solution",
              "type": "data",
              "description": "Answers or resolutions to problems found within the Knowledge Base."
            },
            "information": {
              "name": "Information",
              "type": "data",
              "description": "Any piece of data or content available in the Knowledge Base."
            }
          }
        },
        "knowledge_sharing": {
          "name": "Knowledge Sharing",
          "description": "Users can share knowledge base content with others.",
          "category": "core",
          "entities": {
            "knowledge": {
              "name": "Knowledge",
              "type": "data",
              "description": "The information and solutions that can be distributed to others."
            },
            "organization": {
              "name": "Organization",
              "type": "resource",
              "description": "The entity or group across which knowledge is shared."
            },
            "end-user": {
              "name": "End-User",
              "type": "resource",
              "description": "The final consumer of the shared knowledge."
            }
          }
        },
        "direct_kb_creation": {
          "name": "Direct KB Creation",
          "description": "Ability to directly create various types of knowledge base content (articles, FAQs, etc.).",
          "category": "core",
          "entities": {
            "kb_(knowledge_base)": {
              "name": "KB (Knowledge Base)",
              "type": "resource",
              "description": "The system or repository where knowledge content is directly created."
            },
            "article": {
              "name": "Article",
              "type": "resource",
              "description": "A specific type of content that can be directly created in the KB."
            },
            "faq": {
              "name": "FAQ",
              "type": "resource",
              "description": "A specific type of content (Frequently Asked Question) that can be directly created in the KB."
            }
          }
        },
        "user-friendly_content_presentation": {
          "name": "User-Friendly Content Presentation",
          "description": "Presents complex and detailed information in an easy-to-understand and user-friendly format.",
          "category": "core",
          "entities": {
            "information": {
              "name": "Information",
              "type": "data",
              "description": "The content that needs to be displayed in an easily understandable format."
            },
            "user-friendly_format": {
              "name": "User-Friendly Format",
              "type": "configuration",
              "description": "The design and layout of content that makes it easy for users to consume."
            },
            "problem-solving_tips": {
              "name": "Problem-Solving Tips",
              "type": "resource",
              "description": "Concise advice for resolving issues, presented in a user-friendly manner."
            },
            "troubleshooting_guides": {
              "name": "Troubleshooting Guides",
              "type": "resource",
              "description": "Step-by-step instructions for diagnosing and fixing problems, presented clearly."
            },
            "faqs": {
              "name": "FAQs",
              "type": "resource",
              "description": "Common questions and their answers, structured for easy access."
            },
            "best_practices_articles": {
              "name": "Best Practices Articles",
              "type": "resource",
              "description": "Articles detailing recommended methods or techniques, shared effectively."
            },
            "known_errors": {
              "name": "Known Errors",
              "type": "resource",
              "description": "Documented issues with temporary fixes or workarounds, presented clearly."
            }
          }
        },
        "search_functionality": {
          "name": "Search Functionality",
          "description": "Content is designed to be easily searchable.",
          "category": "core",
          "entities": {
            "user": {
              "name": "User",
              "type": "resource",
              "description": "The individual performing a search within the Knowledge Base."
            },
            "solution": {
              "name": "Solution",
              "type": "data",
              "description": "The desired outcome or answer that users search for."
            },
            "content": {
              "name": "Content",
              "type": "resource",
              "description": "The articles, guides, or information available for searching."
            }
          }
        },
        "seamless_navigation": {
          "name": "Seamless Navigation",
          "description": "Provides an intuitive and easy-to-navigate structure for the knowledge base.",
          "category": "core",
          "entities": {
            "knowledge_base": {
              "name": "Knowledge Base",
              "type": "resource",
              "description": "The system or platform that users navigate through to find information."
            },
            "navigation": {
              "name": "Navigation",
              "type": "action",
              "description": "The process of moving through the Knowledge Base interface to locate content."
            }
          }
        },
        "content_tagging": {
          "name": "Content Tagging",
          "description": "Allows adding relevant tags to KB articles for improved organization and search.",
          "category": "core",
          "entities": {
            "tag": {
              "name": "Tag",
              "type": "data",
              "description": "Keywords or labels added to content to improve searchability and organization."
            },
            "kb_article/documentation": {
              "name": "KB Article/Documentation",
              "type": "resource",
              "description": "The specific content items (articles or documentation) to which tags are applied."
            }
          }
        },
        "content_archiving_&_deletion": {
          "name": "Content Archiving & Deletion",
          "description": "Ability to remove or archive outdated articles to maintain a clutter-free knowledge base.",
          "category": "core",
          "entities": {
            "old_article": {
              "name": "Old Article",
              "type": "resource",
              "description": "Content that is outdated or no longer relevant and needs to be removed or archived."
            },
            "kb_(knowledge_base)": {
              "name": "KB (Knowledge Base)",
              "type": "resource",
              "description": "The repository where content is managed, including archiving and deletion."
            },
            "archive": {
              "name": "Archive",
              "type": "action",
              "description": "The action of moving content to a storage area, typically for historical purposes."
            },
            "delete": {
              "name": "Delete",
              "type": "action",
              "description": "The action of permanently removing content from the Knowledge Base."
            }
          }
        },
        "multiple_content_types_support": {
          "name": "Multiple Content Types Support",
          "description": "Supports various distinct content formats including Articles, FAQs, Information, Known Errors, and Solutions.",
          "category": "core",
          "entities": {
            "article": {
              "name": "Article",
              "type": "resource",
              "description": "A comprehensive piece of information on a selected topic, often solving a common problem."
            },
            "faq": {
              "name": "FAQ",
              "type": "resource",
              "description": "A collection of frequently asked questions and their answers."
            },
            "information": {
              "name": "Information",
              "type": "resource",
              "description": "A general piece of data or instructions that can be published."
            },
            "known_error": {
              "name": "Known Error",
              "type": "resource",
              "description": "A documented problem with a temporary fix or workaround."
            },
            "solution": {
              "name": "Solution",
              "type": "resource",
              "description": "A permanent resolution to a reported problem."
            },
            "problem-solving_tips": {
              "name": "Problem-Solving Tips",
              "type": "resource",
              "description": "Quick advice for resolving issues."
            },
            "troubleshooting_guides": {
              "name": "Troubleshooting Guides",
              "type": "resource",
              "description": "Instructions for diagnosing and fixing problems."
            },
            "best_practices": {
              "name": "Best Practices",
              "type": "resource",
              "description": "Recommended methods or techniques shared through articles."
            }
          }
        },
        "recent_articles_display": {
          "name": "Recent Articles Display",
          "description": "Displays recently published articles on the main page.",
          "category": "core",
          "entities": {
            "main_page": {
              "name": "Main Page",
              "type": "resource",
              "description": "The primary interface of the Knowledge Base where recent articles are shown."
            },
            "recent_article": {
              "name": "Recent Article",
              "type": "resource",
              "description": "Articles that have been recently published or updated, displayed prominently."
            }
          }
        },
        "article_sorting_options": {
          "name": "Article Sorting Options",
          "description": "Provides options to sort articles (e.g., by highest rated, bookmarked).",
          "category": "core",
          "entities": {
            "highest_rated_article": {
              "name": "Highest Rated Article",
              "type": "resource",
              "description": "Articles ordered based on their user ratings, from highest to lowest."
            },
            "bookmarked_article": {
              "name": "Bookmarked Article",
              "type": "resource",
              "description": "Articles that users have marked for quick access, used as a sorting criterion."
            },
            "sorting_option": {
              "name": "Sorting Option",
              "type": "configuration",
              "description": "A configurable setting that determines the order in which articles are displayed."
            }
          }
        },
        "privileged_user_content_management": {
          "name": "Privileged User Content Management",
          "description": "Allows authorized users to edit or delete knowledge base articles.",
          "category": "core",
          "entities": {
            "privileged_user": {
              "name": "Privileged User",
              "type": "resource",
              "description": "A user with elevated permissions to perform management actions on KB content."
            },
            "kb_(knowledge_base)": {
              "name": "KB (Knowledge Base)",
              "type": "resource",
              "description": "The content within the Knowledge Base that privileged users can manage."
            },
            "edit": {
              "name": "Edit",
              "type": "action",
              "description": "The action of modifying existing Knowledge Base content."
            },
            "delete": {
              "name": "Delete",
              "type": "action",
              "description": "The action of removing Knowledge Base content permanently."
            }
          }
        },
        "version_history_tracking": {
          "name": "Version History Tracking",
          "description": "Maintains a history of changes and previous versions for each article.",
          "category": "core",
          "entities": {
            "version_history": {
              "name": "Version History",
              "type": "data",
              "description": "A record of all past iterations and modifications made to a Knowledge Base article."
            },
            "change": {
              "name": "Change",
              "type": "data",
              "description": "A specific modification or update recorded within the version history."
            }
          }
        },
        "attachment_management": {
          "name": "Attachment Management",
          "description": "Allows viewing of documents and files attached to knowledge base articles.",
          "category": "core",
          "entities": {
            "document/file": {
              "name": "Document/File",
              "type": "resource",
              "description": "External documents or files that can be linked or uploaded to a Knowledge Base article."
            },
            "kb_(knowledge_base)": {
              "name": "KB (Knowledge Base)",
              "type": "resource",
              "description": "The content item to which documents or files can be attached."
            },
            "attachment": {
              "name": "Attachment",
              "type": "data",
              "description": "The link or inclusion of a document/file with a KB article."
            }
          }
        },
        "draft/publish_workflow": {
          "name": "Draft/Publish Workflow",
          "description": "Supports a content lifecycle where KBs can be in 'Draft' status and then 'Published'.",
          "category": "core",
          "entities": {
            "kb_(knowledge_base)": {
              "name": "KB (Knowledge Base)",
              "type": "resource",
              "description": "The content item that progresses through different publication states."
            },
            "draft_status": {
              "name": "Draft Status",
              "type": "configuration",
              "description": "The initial, unpublished state of a Knowledge Base article."
            },
            "published_status": {
              "name": "Published Status",
              "type": "configuration",
              "description": "The final state of a Knowledge Base article, making it live and accessible."
            },
            "publish": {
              "name": "Publish",
              "type": "action",
              "description": "The action of changing a Knowledge Base article's status from Draft to Published."
            }
          }
        },
        "search_keyword_monitoring": {
          "name": "Search Keyword Monitoring",
          "description": "Tracks and observes keywords entered by users to understand their needs and enhance UX.",
          "category": "extended",
          "entities": {
            "entered_keyword": {
              "name": "Entered Keyword",
              "type": "data",
              "description": "The terms or phrases that users type into the search bar."
            },
            "monitor": {
              "name": "Monitor",
              "type": "action",
              "description": "The action of observing and tracking entered keywords to understand user search behavior."
            }
          }
        },
        "user_usage_monitoring": {
          "name": "User Usage Monitoring",
          "description": "Monitors how end-users interact with the knowledge base to enhance user experience.",
          "category": "extended",
          "entities": {
            "end_customer_usage": {
              "name": "End Customer Usage",
              "type": "data",
              "description": "Data related to how end customers interact with and utilize the Knowledge Base."
            },
            "monitor": {
              "name": "Monitor",
              "type": "action",
              "description": "The action of observing and analyzing how users interact with the Knowledge Base."
            }
          }
        },
        "article_bookmarking": {
          "name": "Article Bookmarking",
          "description": "Users can bookmark frequently used articles for quick and easy access.",
          "category": "extended",
          "entities": {
            "article": {
              "name": "Article",
              "type": "resource",
              "description": "A Knowledge Base content item that users can mark for quick access."
            },
            "bookmark": {
              "name": "Bookmark",
              "type": "action",
              "description": "The action of marking an article for frequent or easy access."
            },
            "bookmarked_post": {
              "name": "Bookmarked Post",
              "type": "resource",
              "description": "An article that has been marked by a user, typically displayed in a dedicated section."
            },
            "right_panel": {
              "name": "Right Panel",
              "type": "resource",
              "description": "A section of the user interface where bookmarked articles are displayed."
            }
          }
        },
        "helpful_marking": {
          "name": "Helpful Marking",
          "description": "Users can indicate if a knowledge base article was helpful.",
          "category": "extended",
          "entities": {
            "kb_(knowledge_base)": {
              "name": "KB (Knowledge Base)",
              "type": "resource",
              "description": "The content item that users can indicate as helpful."
            },
            "helpful_mark": {
              "name": "Helpful Mark",
              "type": "data",
              "description": "An indication or flag applied by a user to signify that a KB article was useful."
            },
            "mark": {
              "name": "Mark",
              "type": "action",
              "description": "The action of indicating whether a KB article was helpful."
            }
          }
        },
        "article_rating_&_reviews": {
          "name": "Article Rating & Reviews",
          "description": "Users can provide ratings and written reviews for articles.",
          "category": "extended",
          "entities": {
            "article": {
              "name": "Article",
              "type": "resource",
              "description": "A Knowledge Base content item that users can provide feedback on through ratings and reviews."
            },
            "rating": {
              "name": "Rating",
              "type": "data",
              "description": "A numerical or qualitative assessment given by a user to an article."
            },
            "review": {
              "name": "Review",
              "type": "data",
              "description": "A textual comment or evaluation provided by a user for an article."
            },
            "add_rating": {
              "name": "Add Rating",
              "type": "action",
              "description": "The action of submitting a rating for an article."
            },
            "add_review": {
              "name": "Add Review",
              "type": "action",
              "description": "The action of submitting a textual review for an article."
            }
          }
        },
        "feedback_submission": {
          "name": "Feedback Submission",
          "description": "Allows users to submit feedback on articles, especially if they are not beneficial, for improvement.",
          "category": "extended",
          "entities": {
            "feedback": {
              "name": "Feedback",
              "type": "data",
              "description": "Information provided by users to help improve the Knowledge Base content."
            },
            "add_feedback": {
              "name": "Add Feedback",
              "type": "action",
              "description": "The action of submitting comments or suggestions for improvement."
            }
          }
        },
        "article_commenting": {
          "name": "Article Commenting",
          "description": "Users can add comments to knowledge base articles.",
          "category": "extended",
          "entities": {
            "comment": {
              "name": "Comment",
              "type": "data",
              "description": "A textual remark or note added by a user to a Knowledge Base article."
            },
            "kb_(knowledge_base)": {
              "name": "KB (Knowledge Base)",
              "type": "resource",
              "description": "The content item to which comments can be added."
            },
            "add_comment": {
              "name": "Add Comment",
              "type": "action",
              "description": "The action of submitting a comment on a Knowledge Base article."
            }
          }
        },
        "article_liking": {
          "name": "Article Liking",
          "description": "Users can 'like' knowledge base articles.",
          "category": "extended",
          "entities": {
            "article": {
              "name": "Article",
              "type": "resource",
              "description": "A Knowledge Base content item that users can express approval for."
            },
            "like": {
              "name": "Like",
              "type": "action",
              "description": "The action of expressing approval or positive sentiment towards an article."
            }
          }
        },
        "incident_to_kb_conversion": {
          "name": "Incident to KB Conversion",
          "description": "Provides an option to convert incidents directly into knowledge base articles.",
          "category": "integration",
          "entities": {
            "incident": {
              "name": "Incident",
              "type": "resource",
              "description": "A reported problem or event that can be converted into a Knowledge Base article."
            },
            "kb_(knowledge_base)": {
              "name": "KB (Knowledge Base)",
              "type": "resource",
              "description": "The target repository where incidents are converted into knowledge articles."
            },
            "incident_to_kb_option": {
              "name": "Incident to KB Option",
              "type": "configuration",
              "description": "A feature or tool that facilitates the conversion of incidents into Knowledge Base articles."
            }
          }
        },
        "service_catalog_integration_for_categorization": {
          "name": "Service Catalog Integration for Categorization",
          "description": "Groups knowledge base information into categories defined within the 'Service Catalog'.",
          "category": "integration",
          "entities": {
            "information": {
              "name": "Information",
              "type": "data",
              "description": "The content within the Knowledge Base that is organized into categories."
            },
            "category": {
              "name": "Category",
              "type": "configuration",
              "description": "A classification or grouping mechanism for organizing information in the Knowledge Base."
            },
            "service_catalog": {
              "name": "Service Catalog",
              "type": "resource",
              "description": "An external system where categories for the Knowledge Base are defined."
            },
            "integration": {
              "name": "Integration",
              "type": "configuration",
              "description": "The connection or link between the Knowledge Base and the Service Catalog for category definition."
            }
          }
        }
      },
      "workflows": {
        "knowledge_creation": {
          "name": "Knowledge Creation",
          "description": "The process of generating new knowledge articles, FAQs, solutions, and other content, either by authoring directly, converting from incidents, or curating from internal/external sources."
        },
        "knowledge_management_&_lifecycle": {
          "name": "Knowledge Management & Lifecycle",
          "description": "The ongoing process of organizing, optimizing (e.g., tagging, categorization), publishing, editing, deleting, archiving, and tracking versions of knowledge articles to ensure accuracy and relevance."
        },
        "knowledge_consumption_&_self-service": {
          "name": "Knowledge Consumption & Self-Service",
          "description": "Users accessing the knowledge base to search for, browse, retrieve, and utilize information for self-service, including the ability to bookmark frequently used articles."
        },
        "knowledge_feedback_&_improvement": {
          "name": "Knowledge Feedback & Improvement",
          "description": "The mechanisms for users to provide input on the quality and usefulness of knowledge articles (e.g., ratings, comments, likes), and for the system to monitor usage patterns to enhance the knowledge base."
        }
      }
    },
    "ticket_management": {
      "name": "Ticket Management",
      "description": "Infraon's Ticket Management module streamlines the entire lifecycle of IT service interruption tickets, from detection to resolution, to ensure rapid service restoration.",
      "category": "unknown",
      "features": {
        "ticket_submission_methods": {
          "name": "Ticket Submission Methods",
          "description": "Allows users to submit tickets via the portal, email, service desk helpline, or mobile app (future release).",
          "category": "core",
          "entities": {
            "portal": {
              "name": "Portal",
              "type": "resource",
              "description": "A web interface for direct ticket logging."
            },
            "service_desk_mail_address": {
              "name": "Service Desk Mail Address",
              "type": "resource",
              "description": "An email address for submitting tickets."
            },
            "service_desk_helpline_number": {
              "name": "Service Desk Helpline Number",
              "type": "resource",
              "description": "A phone number for submitting tickets."
            },
            "infraon_mobile_app": {
              "name": "Infraon Mobile App",
              "type": "resource",
              "description": "A mobile application for ticket submission."
            },
            "end-user": {
              "name": "End-user",
              "type": "resource",
              "description": "The person identifying an interruption and submitting a ticket."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "A user role that can create tickets on behalf of requesters."
            },
            "network_monitoring_systems": {
              "name": "Network Monitoring Systems",
              "type": "resource",
              "description": "External systems configured to send problem reports and create tickets automatically."
            },
            "api": {
              "name": "API",
              "type": "resource",
              "description": "Standard interfaces for automated ticket creation from external systems."
            }
          }
        },
        "ticket_classification_&_categorization": {
          "name": "Ticket Classification & Categorization",
          "description": "Enables service desk agents to classify and categorize tickets appropriately, typically with a category and sub-category, including attributes like Service Category, Service, Impact, Urgency, Priority, and Source.",
          "category": "core",
          "entities": {
            "service_desk_agent": {
              "name": "Service Desk Agent",
              "type": "resource",
              "description": "User role responsible for classifying and categorizing tickets."
            },
            "category": {
              "name": "Category",
              "type": "data",
              "description": "A primary classification attribute assigned to tickets."
            },
            "sub-category": {
              "name": "Sub-category",
              "type": "data",
              "description": "A more granular classification attribute within a category."
            },
            "service_category": {
              "name": "Service Category",
              "type": "data",
              "description": "A specific type of category for ticket classification."
            },
            "service": {
              "name": "Service",
              "type": "data",
              "description": "The IT service related to the ticket."
            },
            "impact": {
              "name": "Impact",
              "type": "data",
              "description": "A classification attribute indicating the effect of the issue."
            },
            "urgency": {
              "name": "Urgency",
              "type": "data",
              "description": "A classification attribute indicating the speed required for resolution."
            },
            "priority": {
              "name": "Priority",
              "type": "data",
              "description": "A classification attribute derived from impact and urgency."
            },
            "source": {
              "name": "Source",
              "type": "data",
              "description": "A classification attribute indicating how the ticket was submitted."
            }
          }
        },
        "initial_support_provision": {
          "name": "Initial Support Provision",
          "description": "Service desk technicians can offer immediate support to requesters based on the simplicity of the reported issue.",
          "category": "core",
          "entities": {
            "service_desk_technician": {
              "name": "Service Desk Technician",
              "type": "resource",
              "description": "User role providing initial support to the requester."
            },
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The person who reported the issue and receives initial support."
            },
            "issue": {
              "name": "Issue",
              "type": "data",
              "description": "The problem reported by the requester."
            }
          }
        },
        "investigation_&_diagnosis": {
          "name": "Investigation & Diagnosis",
          "description": "Agents troubleshoot issues by investigating further and diagnosing problems to find workarounds or temporary fixes.",
          "category": "core",
          "entities": {
            "service/help_desk_agent": {
              "name": "Service/Help Desk Agent",
              "type": "resource",
              "description": "User role responsible for troubleshooting, investigating, and diagnosing issues."
            },
            "issue": {
              "name": "Issue",
              "type": "data",
              "description": "The problem being investigated and diagnosed."
            },
            "diagnosis": {
              "name": "Diagnosis",
              "type": "data",
              "description": "The outcome of the investigation, identifying the problem."
            },
            "workaround": {
              "name": "Workaround",
              "type": "data",
              "description": "A temporary solution to resume services quickly."
            },
            "temporary_fix": {
              "name": "Temporary Fix",
              "type": "data",
              "description": "A short-term solution applied to restore service."
            }
          }
        },
        "ticket_escalation_&_notification": {
          "name": "Ticket Escalation & Notification",
          "description": "Allows agents to escalate tickets to higher support levels (L2/L3) or field engineers when advanced support is needed, while simultaneously informing the requester and technicians.",
          "category": "core",
          "entities": {
            "support/help_desk_agent": {
              "name": "Support/Help Desk Agent",
              "type": "resource",
              "description": "User role initiating ticket escalation."
            },
            "l2/l3_support": {
              "name": "L2/L3 Support",
              "type": "resource",
              "description": "Higher levels of technical support to which tickets can be escalated."
            },
            "field_engineer": {
              "name": "Field Engineer",
              "type": "resource",
              "description": "Specialized personnel to whom tickets can be escalated."
            },
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The person who is informed of escalation proceedings."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "The person who is informed of escalation proceedings."
            },
            "notification": {
              "name": "Notification",
              "type": "action",
              "description": "The act of informing relevant parties about ticket proceedings."
            }
          }
        },
        "resolution_&_recovery": {
          "name": "Resolution & Recovery",
          "description": "Involves applying workarounds, temporary fixes, or software patches to restore or recover the service.",
          "category": "core",
          "entities": {
            "resolution": {
              "name": "Resolution",
              "type": "data",
              "description": "A workaround, temporary fix, or software patch applied to restore service."
            },
            "workaround": {
              "name": "Workaround",
              "type": "data",
              "description": "A type of resolution that provides a temporary solution."
            },
            "temporary_fix": {
              "name": "Temporary Fix",
              "type": "data",
              "description": "A type of resolution that provides a short-term solution."
            },
            "software_patch": {
              "name": "Software Patch",
              "type": "data",
              "description": "A type of resolution that involves applying a software update."
            },
            "service": {
              "name": "Service",
              "type": "resource",
              "description": "The IT service that is recovered or restored."
            }
          }
        },
        "requester-agreed_ticket_closure": {
          "name": "Requester-Agreed Ticket Closure",
          "description": "A ticket is considered closed only when the requester explicitly agrees to the provided resolution.",
          "category": "core",
          "entities": {
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The person whose agreement is required for ticket closure."
            },
            "resolution": {
              "name": "Resolution",
              "type": "data",
              "description": "The solution provided that the requester must agree to."
            },
            "ticket_closure": {
              "name": "Ticket Closure",
              "type": "action",
              "description": "The final step of closing a ticket."
            }
          }
        },
        "automatic_ticket_closure_(configurable)": {
          "name": "Automatic Ticket Closure (Configurable)",
          "description": "The system can be configured to automatically close tickets after a specified number of days.",
          "category": "extended",
          "entities": {
            "system_configuration": {
              "name": "System Configuration",
              "type": "configuration",
              "description": "Settings that control the automatic closure of tickets."
            },
            "specified_days": {
              "name": "Specified Days",
              "type": "configuration",
              "description": "The configurable duration after which a ticket automatically closes."
            },
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "The item that is automatically closed."
            }
          }
        },
        "ticket_ownership_management": {
          "name": "Ticket Ownership Management",
          "description": "Covers the assignment and management of responsibility for each ticket throughout its lifecycle.",
          "category": "core",
          "entities": {
            "ticket_owner": {
              "name": "Ticket Owner",
              "type": "resource",
              "description": "The individual or team responsible for a ticket."
            },
            "ownership": {
              "name": "Ownership",
              "type": "data",
              "description": "The state of being assigned responsibility for a ticket."
            }
          }
        },
        "ticket_monitoring": {
          "name": "Ticket Monitoring",
          "description": "Provides capabilities to oversee the progress and status of tickets.",
          "category": "core",
          "entities": {
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "The item whose progress and status are observed."
            },
            "monitoring": {
              "name": "Monitoring",
              "type": "action",
              "description": "The act of observing the progress and status of a ticket."
            }
          }
        },
        "ticket_tracking": {
          "name": "Ticket Tracking",
          "description": "Enables tracking the status, history, and proceedings of each ticket.",
          "category": "core",
          "entities": {
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "The item whose lifecycle and status changes are followed."
            },
            "tracking": {
              "name": "Tracking",
              "type": "action",
              "description": "The act of following the lifecycle and status changes of a ticket."
            }
          }
        },
        "lifecycle_communication_management": {
          "name": "Lifecycle Communication Management",
          "description": "Manages all communications related to a ticket throughout its entire lifecycle.",
          "category": "core",
          "entities": {
            "ticket_lifecycle": {
              "name": "Ticket Lifecycle",
              "type": "data",
              "description": "The entire progression of a ticket from creation to closure."
            },
            "communication": {
              "name": "Communication",
              "type": "action",
              "description": "Interactions and updates exchanged throughout the ticket's lifecycle."
            },
            "communication_history": {
              "name": "Communication History",
              "type": "data",
              "description": "A record of all interactions related to a ticket."
            },
            "email": {
              "name": "Email",
              "type": "resource",
              "description": "A communication channel used for ticket interactions."
            },
            "sms": {
              "name": "SMS",
              "type": "resource",
              "description": "A communication channel used for ticket interactions."
            },
            "notes": {
              "name": "Notes",
              "type": "data",
              "description": "Comments or remarks added to a ticket."
            }
          }
        },
        "ticket_state_&_status_management": {
          "name": "Ticket State & Status Management",
          "description": "Tickets follow multiple defined states (e.g., Open, In Progress, Resolved, Closed) and statuses (e.g., New, Analysis, Escalated, Waiting for Closure), which can be customized.",
          "category": "core",
          "entities": {
            "state": {
              "name": "State",
              "type": "data",
              "description": "A high-level phase of a ticket's lifecycle (e.g., Open, In Progress, Resolved, Closed, On-Hold)."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "A more granular condition within a ticket's state (e.g., New, Analysis, Escalated, Pending, Accepted, Rejected, Waiting for Closure, Completed)."
            },
            "ticket_lifecycle": {
              "name": "Ticket Lifecycle",
              "type": "data",
              "description": "The progression of states and statuses a ticket follows."
            }
          }
        },
        "automatic_hierarchical_escalation": {
          "name": "Automatic Hierarchical Escalation",
          "description": "The system automatically handles hierarchical escalation processes in the backend.",
          "category": "extended",
          "entities": {
            "escalation": {
              "name": "Escalation",
              "type": "action",
              "description": "The process of automatically moving a ticket to a higher level of support."
            },
            "back_end_system": {
              "name": "Back End System",
              "type": "resource",
              "description": "The part of the system that handles automatic processes like hierarchical escalation."
            }
          }
        },
        "closure_details_(category,_note)": {
          "name": "Closure Details (Category, Note)",
          "description": "Allows updating a closure category and adding a detailed closure note when a ticket is completed.",
          "category": "core",
          "entities": {
            "closure_category": {
              "name": "Closure Category",
              "type": "data",
              "description": "A classification indicating the reason or type of ticket closure."
            },
            "closure_note": {
              "name": "Closure Note",
              "type": "data",
              "description": "A descriptive comment or remark added upon ticket closure."
            }
          }
        },
        "customizable_ticket_statuses": {
          "name": "Customizable Ticket Statuses",
          "description": "Allows configuration of customized statuses from the 'Workflow' module to meet specific requirements.",
          "category": "extended",
          "entities": {
            "workflow_module": {
              "name": "Workflow Module",
              "type": "resource",
              "description": "The system module used to configure customized ticket statuses."
            },
            "custom_status": {
              "name": "Custom Status",
              "type": "configuration",
              "description": "A user-defined status that can be configured to meet specific requirements."
            },
            "requirement": {
              "name": "Requirement",
              "type": "data",
              "description": "The specific needs or criteria for customizing ticket statuses."
            }
          }
        },
        "convert_ticket_to_knowledge_base_article": {
          "name": "Convert Ticket to Knowledge Base Article",
          "description": "Enables converting resolved or closed tickets directly into Knowledge Base articles for efficient knowledge management.",
          "category": "integration",
          "entities": {
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "The source item that can be converted into a Knowledge Base article."
            },
            "knowledge_base_article": {
              "name": "Knowledge Base Article",
              "type": "resource",
              "description": "The target item, a documented solution or information, created from a ticket."
            },
            "kb_icon": {
              "name": "KB Icon",
              "type": "resource",
              "description": "A user interface element that appears post-resolution for conversion."
            },
            "resolved_status": {
              "name": "Resolved Status",
              "type": "data",
              "description": "A prerequisite status for a ticket to be converted to a KB article."
            },
            "closed_status": {
              "name": "Closed Status",
              "type": "data",
              "description": "A prerequisite status for a ticket to be converted to a KB article."
            }
          }
        },
        "reporting_manager_approval_workflow": {
          "name": "Reporting Manager Approval Workflow",
          "description": "Configurable approval settings that automatically send approval emails with a link to the reporting manager for streamlined request approval or rejection.",
          "category": "extended",
          "entities": {
            "approval_settings": {
              "name": "Approval Settings",
              "type": "configuration",
              "description": "Configuration options for setting up approval processes."
            },
            "approval_toggle_button": {
              "name": "Approval Toggle Button",
              "type": "configuration",
              "description": "A user interface element to enable or disable the approval workflow."
            },
            "reporting_manager": {
              "name": "Reporting Manager",
              "type": "resource",
              "description": "The individual responsible for approving requests."
            },
            "approval_email": {
              "name": "Approval Email",
              "type": "resource",
              "description": "An email sent to the reporting manager containing an approval link."
            },
            "approval_link": {
              "name": "Approval Link",
              "type": "resource",
              "description": "A link within the approval email for managers to approve or reject."
            },
            "request": {
              "name": "Request",
              "type": "resource",
              "description": "The item (e.g., ticket) that requires approval."
            }
          }
        },
        "email-based_approval_submission": {
          "name": "Email-based Approval Submission",
          "description": "Streamlines the approval process by allowing tickets to be accepted or rejected directly from an email link.",
          "category": "extended",
          "entities": {
            "toggle_button": {
              "name": "Toggle Button",
              "type": "configuration",
              "description": "A configuration option to enable email-based approval submission."
            },
            "approval_link": {
              "name": "Approval Link",
              "type": "resource",
              "description": "A link sent via email to accept or reject a ticket."
            },
            "email": {
              "name": "Email",
              "type": "resource",
              "description": "The communication channel used for submitting approvals."
            },
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "The item for which approval is sought."
            }
          }
        },
        "sla_monitoring_&_management": {
          "name": "SLA Monitoring & Management",
          "description": "Visualizes, configures, and monitors SLA profiles, indicating whether SLAs are achieved, breached, or canceled, and includes response time counts for compliance monitoring.",
          "category": "extended",
          "entities": {
            "sla_profile": {
              "name": "SLA Profile",
              "type": "configuration",
              "description": "A configurable set of service level agreements."
            },
            "metric_name": {
              "name": "Metric Name",
              "type": "data",
              "description": "A specific measurement used within an SLA profile."
            },
            "panel_view_page": {
              "name": "Panel View Page",
              "type": "resource",
              "description": "A user interface for visualizing SLA status."
            },
            "sla_status": {
              "name": "SLA Status",
              "type": "data",
              "description": "The current state of an SLA (achieved, breached, or canceled)."
            },
            "response_time_count": {
              "name": "Response Time Count",
              "type": "data",
              "description": "A metric indicating the number of SLAs and their compliance status."
            },
            "sla_widget": {
              "name": "SLA Widget",
              "type": "resource",
              "description": "A user interface component displaying SLA information."
            }
          }
        },
        "workspace_incident_actions_(hover)": {
          "name": "Workspace Incident Actions (Hover)",
          "description": "Provides a dynamic set of features accessible via mouse hover for quick access to recent activity, interactions, and attachments on assigned tickets.",
          "category": "extended",
          "entities": {
            "incident_actions": {
              "name": "Incident Actions",
              "type": "action",
              "description": "A dynamic set of features accessible via mouse hover for quick access."
            },
            "mouse_hover": {
              "name": "Mouse Hover",
              "type": "action",
              "description": "The user interaction method to access incident actions."
            },
            "recent_activity": {
              "name": "Recent Activity",
              "type": "data",
              "description": "Information displayed via incident actions."
            },
            "interactions": {
              "name": "Interactions",
              "type": "data",
              "description": "Information displayed via incident actions."
            },
            "attachments": {
              "name": "Attachments",
              "type": "data",
              "description": "Information displayed via incident actions."
            }
          }
        },
        "one-click_complete_&_resolve": {
          "name": "One-Click Complete & Resolve",
          "description": "Simplifies ticket resolution with a single button to complete and resolve tickets.",
          "category": "extended",
          "entities": {
            "complete_button": {
              "name": "Complete Button",
              "type": "action",
              "description": "A user interface element for simplifying ticket resolution."
            },
            "resolve_button": {
              "name": "Resolve Button",
              "type": "action",
              "description": "A user interface element for simplifying ticket resolution."
            },
            "ticket_resolution": {
              "name": "Ticket Resolution",
              "type": "action",
              "description": "The process of resolving a ticket, simplified by one-click actions."
            }
          }
        },
        "incident_card_inline_editing": {
          "name": "Incident Card Inline Editing",
          "description": "Enables hassle-free inline updates to assignees and other ticket details directly on the incident card.",
          "category": "extended",
          "entities": {
            "incident_card": {
              "name": "Incident Card",
              "type": "resource",
              "description": "A user interface component displaying ticket details that supports inline editing."
            },
            "assignee": {
              "name": "Assignee",
              "type": "data",
              "description": "The person assigned to the ticket, whose details can be updated inline."
            },
            "ticket_details": {
              "name": "Ticket Details",
              "type": "data",
              "description": "Various attributes of the ticket that can be updated inline."
            }
          }
        },
        "ticket_summary_&_analytics_(by_count)": {
          "name": "Ticket Summary & Analytics (by count)",
          "description": "Provides a quick overview of ticket status (open, on hold, closed), identifies frequent issues, and helps manage high-volume requesters, sorted by ticket count.",
          "category": "extended",
          "entities": {
            "ticket_count": {
              "name": "Ticket Count",
              "type": "data",
              "description": "The number of tickets, used for sorting and summarizing."
            },
            "ticket_status": {
              "name": "Ticket Status",
              "type": "data",
              "description": "The current state of tickets (open, on hold, or closed) displayed in the summary."
            },
            "frequent_issues": {
              "name": "Frequent Issues",
              "type": "data",
              "description": "Recurring problems identified from ticket data."
            },
            "widget": {
              "name": "Widget",
              "type": "resource",
              "description": "A user interface component displaying the ticket summary."
            },
            "high-volume_requesters": {
              "name": "High-Volume Requesters",
              "type": "resource",
              "description": "Users who submit a large number of tickets, identified by summary."
            }
          }
        },
        "ticket_re-opening": {
          "name": "Ticket Re-opening",
          "description": "Allows requesters to re-open a ticket if they are unsatisfied with the resolution, specifically when the ticket's status is 'Waiting for Closure'.",
          "category": "core",
          "entities": {
            "user/requester": {
              "name": "User/Requester",
              "type": "resource",
              "description": "The person who can request a ticket to be re-opened if unsatisfied."
            },
            "resolution": {
              "name": "Resolution",
              "type": "data",
              "description": "The solution provided that the user/requester may be unsatisfied with."
            },
            "waiting_for_closure_status": {
              "name": "Waiting for Closure Status",
              "type": "data",
              "description": "The specific status required for a ticket to be re-opened."
            },
            "closed_status": {
              "name": "Closed Status",
              "type": "data",
              "description": "A status that prevents re-opening, requiring a new ticket instead."
            },
            "new_ticket": {
              "name": "New Ticket",
              "type": "resource",
              "description": "A new ticket that must be raised if the original is already closed."
            }
          }
        },
        "link_new_ticket_to_parent_ticket": {
          "name": "Link New Ticket to Parent Ticket",
          "description": "Enables linking a newly created ticket to an existing parent ticket.",
          "category": "extended",
          "entities": {
            "new_ticket": {
              "name": "New Ticket",
              "type": "resource",
              "description": "A newly created ticket that can be linked to an existing parent ticket."
            },
            "parent_ticket": {
              "name": "Parent Ticket",
              "type": "resource",
              "description": "An existing ticket to which a new ticket can be linked."
            }
          }
        },
        "email-to-ticket_conversion": {
          "name": "Email-to-Ticket Conversion",
          "description": "Automatically converts incoming emails into tickets, using the email subject as the ticket summary, the body as the description, and setting the source to 'Email'.",
          "category": "integration",
          "entities": {
            "email": {
              "name": "Email",
              "type": "resource",
              "description": "The source communication that is converted into a ticket."
            },
            "message_subject_line": {
              "name": "Message Subject Line",
              "type": "data",
              "description": "The email's subject line, which becomes the ticket summary."
            },
            "message_body": {
              "name": "Message Body",
              "type": "data",
              "description": "The email's body, which becomes the ticket description."
            },
            "source_field": {
              "name": "Source Field",
              "type": "data",
              "description": "A ticket attribute that is automatically set to 'Email' upon conversion."
            },
            "ticket_summary": {
              "name": "Ticket Summary",
              "type": "data",
              "description": "A field in the ticket populated by the email subject line."
            },
            "ticket_description": {
              "name": "Ticket Description",
              "type": "data",
              "description": "A field in the ticket populated by the email body."
            }
          }
        },
        "quick_action_panel": {
          "name": "Quick Action Panel",
          "description": "A floating panel providing technicians with quick actions to reduce ticket resolution time.",
          "category": "extended",
          "entities": {
            "quick_action_panel/bar": {
              "name": "Quick Action Panel/Bar",
              "type": "resource",
              "description": "A user interface element providing shortcuts for common ticket actions."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "The user role that benefits from the quick action panel for faster resolution."
            },
            "ticket_resolution_time": {
              "name": "Ticket Resolution Time",
              "type": "data",
              "description": "A metric that is reduced by using the quick action panel."
            },
            "floater": {
              "name": "Floater",
              "type": "resource",
              "description": "A characteristic of the quick action bar, appearing on each ticket line."
            },
            "ticket_line": {
              "name": "Ticket Line",
              "type": "resource",
              "description": "The row in the ticket list where the quick action floater appears."
            }
          }
        },
        "ticket_listing_page": {
          "name": "Ticket Listing Page",
          "description": "Displays all tickets with essential details like summary card, impact service, status, subject, team, requester name, and actions, sorted by time.",
          "category": "core",
          "entities": {
            "tickets_page": {
              "name": "Tickets Page",
              "type": "resource",
              "description": "A user interface displaying a list of all tickets."
            },
            "ticket_details": {
              "name": "Ticket Details",
              "type": "data",
              "description": "Information displayed for each ticket, such as summary card, impact service, status, subject, team, requester name, and actions."
            },
            "sorting_(by_time)": {
              "name": "Sorting (by time)",
              "type": "configuration",
              "description": "The default order in which tickets are displayed on the listing page."
            }
          }
        },
        "ticket_summary_card": {
          "name": "Ticket Summary Card",
          "description": "A customizable card that briefly summarizes key ticket information including Ticket ID, Source, Priority, Asset ID, Comment, Requester Icon, and Subject.",
          "category": "core",
          "entities": {
            "ticket_summary_card": {
              "name": "Ticket Summary Card",
              "type": "resource",
              "description": "A user interface component providing a brief overview of a ticket's key information."
            },
            "ticket_information": {
              "name": "Ticket Information",
              "type": "data",
              "description": "Important details displayed on the summary card, such as ID, source, priority, asset ID, comment, requester, and subject."
            }
          }
        },
        "auto-generated_ticket_id": {
          "name": "Auto-generated Ticket ID",
          "description": "A unique ID is automatically generated for each ticket upon creation.",
          "category": "core",
          "entities": {
            "ticket_id": {
              "name": "Ticket ID",
              "type": "data",
              "description": "A unique identifier automatically generated when a ticket is created."
            },
            "system": {
              "name": "System",
              "type": "resource",
              "description": "The platform that automatically generates the ticket ID."
            }
          }
        },
        "ticket_detail_view_(via_id)": {
          "name": "Ticket Detail View (via ID)",
          "description": "Clicking on the Ticket ID allows users to view communication history, reply to/forward emails, add notes, analyze, add symptoms/root causes, view/add work logs, and resolve the ticket.",
          "category": "core",
          "entities": {
            "ticket_id": {
              "name": "Ticket ID",
              "type": "data",
              "description": "The clickable identifier that leads to the detailed view of a ticket."
            },
            "communication_history": {
              "name": "Communication History",
              "type": "data",
              "description": "A record of all interactions viewable from the ticket detail screen."
            },
            "emails": {
              "name": "Emails",
              "type": "resource",
              "description": "Email communications that can be replied to or forwarded from the detail view."
            },
            "notes": {
              "name": "Notes",
              "type": "data",
              "description": "Comments or remarks that can be added from the ticket detail view."
            },
            "symptoms": {
              "name": "Symptoms",
              "type": "data",
              "description": "Information about the problem's manifestations that can be added."
            },
            "root_causes": {
              "name": "Root Causes",
              "type": "data",
              "description": "Underlying reasons for the problem that can be added."
            },
            "work_logs": {
              "name": "Work Logs",
              "type": "data",
              "description": "Records of work performed on the ticket that can be viewed or added."
            },
            "resolution": {
              "name": "Resolution",
              "type": "action",
              "description": "The action of resolving a ticket, possible from this detailed view."
            }
          }
        },
        "asset_linking_&_information_access": {
          "name": "Asset Linking & Information Access",
          "description": "Links tickets to specific assets, allowing users to view detailed asset information by clicking on the Asset ID.",
          "category": "integration",
          "entities": {
            "asset_id": {
              "name": "Asset ID",
              "type": "data",
              "description": "An identifier for the asset linked to the ticket."
            },
            "asset": {
              "name": "Asset",
              "type": "resource",
              "description": "The resource for which the ticket is raised, linked via its ID."
            },
            "asset_information": {
              "name": "Asset Information",
              "type": "data",
              "description": "Detailed data about the linked asset, accessible by clicking its ID."
            }
          }
        },
        "communication_tab_(centralized_history)": {
          "name": "Communication Tab (Centralized History)",
          "description": "A central hub displaying the complete communication history for a ticket, including emails, SMS messages, and comments.",
          "category": "core",
          "entities": {
            "communication_tab": {
              "name": "Communication Tab",
              "type": "resource",
              "description": "A user interface element serving as a central hub for all ticket interactions."
            },
            "communication_history": {
              "name": "Communication History",
              "type": "data",
              "description": "A complete record of all interactions, including emails, SMS, and comments."
            },
            "emails": {
              "name": "Emails",
              "type": "resource",
              "description": "Email communications included in the history."
            },
            "sms_messages": {
              "name": "SMS Messages",
              "type": "resource",
              "description": "SMS communications included in the history."
            },
            "comments": {
              "name": "Comments",
              "type": "data",
              "description": "Remarks or notes added throughout the ticket lifecycle."
            },
            "ticket_lifecycle": {
              "name": "Ticket Lifecycle",
              "type": "data",
              "description": "The entire progression of a ticket, providing context for communication history."
            }
          }
        },
        "direct_email/sms_sending": {
          "name": "Direct Email/SMS Sending",
          "description": "Technicians can send emails and SMS messages directly to the end-user from within the ticket interface.",
          "category": "core",
          "entities": {
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "The user role empowered to send emails and SMS messages directly."
            },
            "email": {
              "name": "Email",
              "type": "resource",
              "description": "A message type that can be sent directly to the end-user."
            },
            "sms_message": {
              "name": "SMS Message",
              "type": "resource",
              "description": "A message type that can be sent directly to the end-user."
            },
            "end-user": {
              "name": "End-user",
              "type": "resource",
              "description": "The recipient of direct emails and SMS messages."
            }
          }
        },
        "requester_dropdown_(auto-fill)": {
          "name": "Requester Dropdown (Auto-fill)",
          "description": "A dynamic requester dropdown that eliminates the need for manual entry.",
          "category": "extended",
          "entities": {
            "requester_dropdown": {
              "name": "Requester Dropdown",
              "type": "resource",
              "description": "A user interface element that dynamically auto-fills requester information."
            },
            "requester": {
              "name": "Requester",
              "type": "data",
              "description": "The person whose information is automatically populated in the dropdown."
            }
          }
        },
        "file_attachments_(communication)": {
          "name": "File Attachments (Communication)",
          "description": "Allows attaching files (e.g., emails, screenshots) to communications within the ticket.",
          "category": "core",
          "entities": {
            "file": {
              "name": "File",
              "type": "data",
              "description": "Digital documents or media that can be attached to ticket communications."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "A user role that can attach files to ticket communications."
            },
            "end-user": {
              "name": "End-user",
              "type": "resource",
              "description": "A user role that can attach files to ticket communications."
            }
          }
        },
        "digital_signatures_(communication)": {
          "name": "Digital Signatures (Communication)",
          "description": "Supports adding signatures to communications for enhanced clarity and authenticity.",
          "category": "extended",
          "entities": {
            "signature": {
              "name": "Signature",
              "type": "data",
              "description": "A digital mark that can be added to communications for clarity and authenticity."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "A user role that can add signatures to communications."
            },
            "end-user": {
              "name": "End-user",
              "type": "resource",
              "description": "A user role that can add signatures to communications."
            }
          }
        },
        "communication_text_enhancement": {
          "name": "Communication Text Enhancement",
          "description": "Provides real-time prompts for text improvement, tone/style adjustments (professional, conversational, emphatic, simple), proofreading, rephrasing, and content expansion tools.",
          "category": "extended",
          "entities": {
            "communication_text": {
              "name": "Communication Text",
              "type": "data",
              "description": "The content of messages within tickets that can be refined."
            },
            "real-time_prompts": {
              "name": "Real-time Prompts",
              "type": "resource",
              "description": "System suggestions for improving text quality."
            },
            "tone_adjustments": {
              "name": "Tone Adjustments",
              "type": "configuration",
              "description": "Options to modify the tone of communication text."
            },
            "style_adjustments": {
              "name": "Style Adjustments",
              "type": "configuration",
              "description": "Options to modify the style of communication text."
            },
            "proofreading_tool": {
              "name": "Proofreading Tool",
              "type": "action",
              "description": "Functionality for correcting errors in communication text."
            },
            "rephrasing_tool": {
              "name": "Rephrasing Tool",
              "type": "action",
              "description": "Functionality for rephrasing communication text."
            },
            "content_expansion_tool": {
              "name": "Content Expansion Tool",
              "type": "action",
              "description": "Functionality for expanding the content of communication text."
            }
          }
        },
        "customizable_summary_card": {
          "name": "Customizable Summary Card",
          "description": "Allows configuration and customization of the details displayed on the ticket summary card.",
          "category": "extended",
          "entities": {
            "summary_card_details": {
              "name": "Summary Card Details",
              "type": "data",
              "description": "The specific information displayed on the ticket summary card, which can be configured."
            },
            "configure_icon": {
              "name": "Configure Icon",
              "type": "action",
              "description": "A user interface element used to customize the summary card."
            },
            "requirements": {
              "name": "Requirements",
              "type": "data",
              "description": "User-defined needs that guide the customization of the summary card."
            }
          }
        },
        "ticket_resolution_functionality": {
          "name": "Ticket Resolution Functionality",
          "description": "Enables technicians to resolve tickets, automatically recording the resolution date and time, and requiring status change and resolution details.",
          "category": "core",
          "entities": {
            "resolve_action": {
              "name": "Resolve Action",
              "type": "action",
              "description": "The action of marking a ticket as resolved."
            },
            "resolution_date": {
              "name": "Resolution Date",
              "type": "data",
              "description": "The date when a ticket is resolved, automatically recorded."
            },
            "resolution_time": {
              "name": "Resolution Time",
              "type": "data",
              "description": "The time when a ticket is resolved, automatically recorded."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "The user role responsible for resolving tickets."
            },
            "ticket_status": {
              "name": "Ticket Status",
              "type": "data",
              "description": "The attribute that must be changed to reflect resolution."
            },
            "resolution_(data)": {
              "name": "Resolution (data)",
              "type": "data",
              "description": "The solution or fix provided for the ticket."
            }
          }
        },
        "ticket_aging_metrics_&_reporting": {
          "name": "Ticket Aging Metrics & Reporting",
          "description": "Tracks ticket resolution time with aging metrics, stopping the clock upon resolution or closure, and provides detailed aging reports.",
          "category": "extended",
          "entities": {
            "aging_metric": {
              "name": "Aging Metric",
              "type": "data",
              "description": "A measurement indicating how long a ticket has been open or unresolved."
            },
            "grid_view": {
              "name": "Grid View",
              "type": "resource",
              "description": "A user interface display that includes aging metrics."
            },
            "ticket_resolution_time": {
              "name": "Ticket Resolution Time",
              "type": "data",
              "description": "The duration taken to resolve a ticket, which is tracked accurately."
            },
            "resolve_action": {
              "name": "Resolve Action",
              "type": "action",
              "description": "An action that stops the aging clock for a ticket."
            },
            "close_action": {
              "name": "Close Action",
              "type": "action",
              "description": "An action that stops the aging clock for a ticket."
            },
            "aging_reports": {
              "name": "Aging Reports",
              "type": "data",
              "description": "Detailed reports generated based on ticket aging data."
            },
            "resolved_status": {
              "name": "Resolved Status",
              "type": "data",
              "description": "The status used as a basis for generating aging reports."
            }
          }
        },
        "ticket_assignment_(individual/team/expertise)": {
          "name": "Ticket Assignment (Individual/Team/Expertise)",
          "description": "Allows assigning tickets to individual users or to users based on specific teams, expertise, or support levels.",
          "category": "core",
          "entities": {
            "assign_to_action": {
              "name": "Assign To Action",
              "type": "action",
              "description": "The action of assigning a ticket to a user or group."
            },
            "user": {
              "name": "User",
              "type": "resource",
              "description": "An individual to whom a ticket can be assigned."
            },
            "team": {
              "name": "Team",
              "type": "resource",
              "description": "A group of users to whom a ticket can be assigned."
            },
            "expertise": {
              "name": "Expertise",
              "type": "data",
              "description": "A skill-based criterion for assigning tickets."
            },
            "level": {
              "name": "Level",
              "type": "data",
              "description": "A hierarchical criterion for assigning tickets."
            }
          }
        },
        "quick_edit_(key_attributes)": {
          "name": "Quick Edit (Key Attributes)",
          "description": "Enables rapid editing of key ticket attributes such as status, priority, urgency, severity, impact, impact service, and assignee.",
          "category": "extended",
          "entities": {
            "quick_edit_action": {
              "name": "Quick Edit Action",
              "type": "action",
              "description": "The action of rapidly modifying key ticket attributes."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "A key ticket attribute that can be quickly edited."
            },
            "priority": {
              "name": "Priority",
              "type": "data",
              "description": "A key ticket attribute that can be quickly edited."
            },
            "urgency": {
              "name": "Urgency",
              "type": "data",
              "description": "A key ticket attribute that can be quickly edited."
            },
            "severity": {
              "name": "Severity",
              "type": "data",
              "description": "A key ticket attribute that can be quickly edited."
            },
            "impact": {
              "name": "Impact",
              "type": "data",
              "description": "A key ticket attribute that can be quickly edited."
            },
            "impact_service": {
              "name": "Impact Service",
              "type": "data",
              "description": "A key ticket attribute that can be quickly edited."
            },
            "ticket_assignee": {
              "name": "Ticket Assignee",
              "type": "data",
              "description": "A key ticket attribute that can be quickly edited."
            }
          }
        },
        "detailed_ticket_editing": {
          "name": "Detailed Ticket Editing",
          "description": "Provides a comprehensive option to edit all details of a ticket.",
          "category": "core",
          "entities": {
            "edit_action": {
              "name": "Edit Action",
              "type": "action",
              "description": "The action of modifying all ticket details comprehensively."
            },
            "detailed_edit_button": {
              "name": "Detailed Edit Button",
              "type": "action",
              "description": "A user interface element to access comprehensive ticket editing."
            },
            "ticket_details": {
              "name": "Ticket Details",
              "type": "data",
              "description": "All attributes and information of a ticket that can be edited."
            }
          }
        },
        "ticket_deletion": {
          "name": "Ticket Deletion",
          "description": "Allows irreversible deletion of tickets.",
          "category": "core",
          "entities": {
            "delete_action": {
              "name": "Delete Action",
              "type": "action",
              "description": "The irreversible action of removing a ticket from the system."
            },
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "The item that is permanently removed from the system."
            }
          }
        },
        "additional_actions_menu_(customizable)": {
          "name": "Additional Actions Menu (Customizable)",
          "description": "A customizable menu for additional actions, such as viewing ticket history or converting to KB, allowing selection of up to four actions.",
          "category": "extended",
          "entities": {
            "additional_action_button": {
              "name": "Additional Action Button",
              "type": "action",
              "description": "A user interface element that provides access to a customizable menu of extra actions."
            },
            "ticket_history": {
              "name": "Ticket History",
              "type": "data",
              "description": "An option available in the additional actions menu to view past changes."
            },
            "convert_to_knowledge_base": {
              "name": "Convert to Knowledge Base",
              "type": "action",
              "description": "An action option available in the additional actions menu."
            },
            "edit_options_icon": {
              "name": "Edit Options Icon",
              "type": "configuration",
              "description": "A user interface element used to customize the available additional action options."
            },
            "action_options": {
              "name": "Action Options",
              "type": "configuration",
              "description": "The configurable choices available within the additional actions menu."
            }
          }
        },
        "ticket_history_view": {
          "name": "Ticket History View",
          "description": "Allows viewing the complete historical record of a ticket's changes and interactions.",
          "category": "core",
          "entities": {
            "ticket_history": {
              "name": "Ticket History",
              "type": "data",
              "description": "A record of all changes, updates, and events related to a specific ticket."
            }
          }
        },
        "ticket_filters": {
          "name": "Ticket Filters",
          "description": "Provides expandable filters to refine and narrow down ticket search results.",
          "category": "core",
          "entities": {
            "ticket_filters": {
              "name": "Ticket Filters",
              "type": "configuration",
              "description": "Criteria used to narrow down and display specific subsets of tickets."
            },
            "expand_icon": {
              "name": "Expand Icon",
              "type": "action",
              "description": "A user interface element to reveal ticket filter options."
            }
          }
        },
        "ticket_search_bar": {
          "name": "Ticket Search Bar",
          "description": "Offers search functionality to find specific tickets using criteria like ticket number or assignee.",
          "category": "core",
          "entities": {
            "search_bar": {
              "name": "Search Bar",
              "type": "resource",
              "description": "A user interface element for searching for specific tickets."
            },
            "ticket_number": {
              "name": "Ticket Number",
              "type": "data",
              "description": "A criterion used to search for a specific ticket."
            },
            "assignee": {
              "name": "Assignee",
              "type": "data",
              "description": "A criterion used to search for tickets assigned to a particular person."
            }
          }
        },
        "calendar_filter": {
          "name": "Calendar Filter",
          "description": "Enables filtering tickets by a specific day, date, or date range.",
          "category": "core",
          "entities": {
            "calendar": {
              "name": "Calendar",
              "type": "resource",
              "description": "A user interface element for filtering tickets based on dates."
            },
            "day": {
              "name": "Day",
              "type": "data",
              "description": "A specific day used as a filter criterion."
            },
            "date": {
              "name": "Date",
              "type": "data",
              "description": "A specific date used as a filter criterion."
            },
            "date_range": {
              "name": "Date Range",
              "type": "data",
              "description": "A period between two dates used as a filter criterion."
            }
          }
        },
        "convert_ticket_to_request": {
          "name": "Convert Ticket to Request",
          "description": "Allows technicians to convert a ticket into a request if it is deemed more appropriate for a request workflow.",
          "category": "integration",
          "entities": {
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "The source item that can be converted into a request."
            },
            "request": {
              "name": "Request",
              "type": "resource",
              "description": "The target item, a formal request, into which a ticket can be converted."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "The user role that can perform the conversion from ticket to request."
            }
          }
        },
        "link_ticket_to_change_request_(add_change)": {
          "name": "Link Ticket to Change Request (Add Change)",
          "description": "Allows adding and linking a change request to a ticket, applicable when the ticket status is 'Open', 'In Progress', or 'On Hold'.",
          "category": "integration",
          "entities": {
            "change_request": {
              "name": "Change Request",
              "type": "resource",
              "description": "A formal request for a change that can be linked to a ticket."
            },
            "ticket_resolution": {
              "name": "Ticket Resolution",
              "type": "data",
              "description": "The reason or outcome of a ticket that may necessitate a change request."
            },
            "open_status": {
              "name": "Open Status",
              "type": "data",
              "description": "A prerequisite status for a ticket to allow linking a change request."
            },
            "in_progress_status": {
              "name": "In Progress Status",
              "type": "data",
              "description": "A prerequisite status for a ticket to allow linking a change request."
            },
            "on_hold_status": {
              "name": "On Hold Status",
              "type": "data",
              "description": "A prerequisite status for a ticket to allow linking a change request."
            }
          }
        },
        "view_linked_change_request": {
          "name": "View Linked Change Request",
          "description": "Provides an option to view a change request that has been linked to a ticket.",
          "category": "integration",
          "entities": {
            "change_request": {
              "name": "Change Request",
              "type": "resource",
              "description": "The linked item that can be viewed from the ticket."
            },
            "view_change_option": {
              "name": "View Change Option",
              "type": "action",
              "description": "A user interface option to view a change request linked to a ticket."
            }
          }
        },
        "ticket_tagging": {
          "name": "Ticket Tagging",
          "description": "Enables grouping tickets using predefined tags for better classification and organization.",
          "category": "extended",
          "entities": {
            "tag": {
              "name": "Tag",
              "type": "data",
              "description": "A label used to group and classify tickets."
            },
            "tag_option": {
              "name": "Tag Option",
              "type": "action",
              "description": "A user interface option to apply tags to a ticket."
            },
            "ticket_grouping": {
              "name": "Ticket Grouping",
              "type": "action",
              "description": "The purpose of tagging, which is to organize tickets into logical groups."
            }
          }
        },
        "ticket_merging": {
          "name": "Ticket Merging",
          "description": "Allows merging two or more related tickets into a single ticket.",
          "category": "extended",
          "entities": {
            "merge_option": {
              "name": "Merge Option",
              "type": "action",
              "description": "A user interface option to combine multiple tickets into one."
            },
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "The items that can be combined or merged."
            }
          }
        },
        "auto-reload_pause": {
          "name": "Auto-reload Pause",
          "description": "Provides an option to pause the automatic refreshing of the ticket view.",
          "category": "extended",
          "entities": {
            "pause_icon": {
              "name": "Pause Icon",
              "type": "action",
              "description": "A user interface element to temporarily stop the automatic refreshing of data."
            },
            "auto-reload": {
              "name": "Auto-reload",
              "type": "configuration",
              "description": "A system function that automatically refreshes displayed data."
            }
          }
        },
        "customizable_column_selection_(ticket_list)": {
          "name": "Customizable Column Selection (Ticket List)",
          "description": "Allows configuring which columns are displayed in the ticket list view.",
          "category": "extended",
          "entities": {
            "configure_icon": {
              "name": "Configure Icon",
              "type": "action",
              "description": "A user interface element used to customize column selection."
            },
            "column_selection": {
              "name": "Column Selection",
              "type": "configuration",
              "description": "The choice of which columns to display in a ticket list."
            },
            "ticket_list": {
              "name": "Ticket List",
              "type": "resource",
              "description": "The display where columns can be selected and configured."
            }
          }
        },
        "list_&_smart_grid_view_toggle": {
          "name": "List & Smart Grid View Toggle",
          "description": "Enables switching between a standard list view and a smart grid view for displaying tickets.",
          "category": "extended",
          "entities": {
            "toggle_icons": {
              "name": "Toggle Icons",
              "type": "action",
              "description": "User interface elements to switch between different display formats."
            },
            "list_view": {
              "name": "List View",
              "type": "resource",
              "description": "A display format for tickets, typically showing items in a vertical list."
            },
            "smart_grid_view": {
              "name": "Smart Grid View",
              "type": "resource",
              "description": "An alternative display format for tickets, offering enhanced data visibility."
            }
          }
        },
        "integrated_panel_view": {
          "name": "Integrated Panel View",
          "description": "A revamped panel view offering enhanced data visibility and aging metrics for efficient handling of incidents, requests, and problems.",
          "category": "extended",
          "entities": {
            "panel_view": {
              "name": "Panel View",
              "type": "resource",
              "description": "A user interface display offering enhanced data visibility for incident, request, and problem handling."
            },
            "incident_handling": {
              "name": "Incident Handling",
              "type": "action",
              "description": "The process of managing incidents, supported by the panel view."
            },
            "request_handling": {
              "name": "Request Handling",
              "type": "action",
              "description": "The process of managing requests, supported by the panel view."
            },
            "problem_handling": {
              "name": "Problem Handling",
              "type": "action",
              "description": "The process of managing problems, supported by the panel view."
            },
            "data_visibility": {
              "name": "Data Visibility",
              "type": "data",
              "description": "The extent to which data is displayed and accessible in the panel view."
            },
            "aging_metrics": {
              "name": "Aging Metrics",
              "type": "data",
              "description": "Data points related to ticket age, displayed in the panel view."
            }
          }
        },
        "automated_ticket_creation_from_monitoring_systems_(api)": {
          "name": "Automated Ticket Creation from Monitoring Systems (API)",
          "description": "Allows tickets to be created automatically from network monitoring systems configured to send problem reports via standard APIs.",
          "category": "integration",
          "entities": {
            "network_monitoring_system": {
              "name": "Network Monitoring System",
              "type": "resource",
              "description": "An external system that can automatically create tickets."
            },
            "problem_reports": {
              "name": "Problem Reports",
              "type": "data",
              "description": "Data sent by monitoring systems that trigger ticket creation."
            },
            "standard_api": {
              "name": "Standard API",
              "type": "resource",
              "description": "The interface used by monitoring systems to create tickets automatically."
            },
            "ticket_creation": {
              "name": "Ticket Creation",
              "type": "action",
              "description": "The action of generating a new ticket automatically."
            }
          }
        },
        "event-driven_ticket_configuration": {
          "name": "Event-driven Ticket Configuration",
          "description": "Enables configuring event types to automatically create tickets and event resolutions to close tickets within the Event Management module.",
          "category": "integration",
          "entities": {
            "event_management_module": {
              "name": "Event Management Module",
              "type": "resource",
              "description": "The system module where event-driven ticket configurations are set up."
            },
            "event_type": {
              "name": "Event Type",
              "type": "configuration",
              "description": "A specific category of event that can be configured to result in ticket creation."
            },
            "event_resolution": {
              "name": "Event Resolution",
              "type": "configuration",
              "description": "A specific resolution of an event that can be configured to result in ticket closure."
            },
            "ticket_creation": {
              "name": "Ticket Creation",
              "type": "action",
              "description": "The action of generating a ticket, triggered by an event type."
            },
            "ticket_closure": {
              "name": "Ticket Closure",
              "type": "action",
              "description": "The action of closing a ticket, triggered by an event resolution."
            }
          }
        },
        "self-assignment_(take_it)": {
          "name": "Self-Assignment (Take It)",
          "description": "Allows technicians to self-assign tickets using the 'Take it' option.",
          "category": "core",
          "entities": {
            "take_it_option": {
              "name": "Take It Option",
              "type": "action",
              "description": "A user interface option allowing a technician to assign a ticket to themselves."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "The user role that can self-assign tickets."
            },
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "The item that is being self-assigned."
            }
          }
        },
        "ticket_followers_&_notifications": {
          "name": "Ticket Followers & Notifications",
          "description": "Allows adding users as followers who will receive notifications about ticket changes.",
          "category": "core",
          "entities": {
            "follower": {
              "name": "Follower",
              "type": "resource",
              "description": "A user who receives notifications about changes to a ticket."
            },
            "ticket_changes": {
              "name": "Ticket Changes",
              "type": "data",
              "description": "Events or updates to a ticket that trigger notifications to followers."
            },
            "follow_button": {
              "name": "Follow Button",
              "type": "action",
              "description": "A user interface element to become a follower of a ticket."
            },
            "notification": {
              "name": "Notification",
              "type": "action",
              "description": "An alert sent to followers when ticket changes occur."
            }
          }
        },
        "process_visibility_configuration": {
          "name": "Process Visibility Configuration",
          "description": "Enables or disables the visibility of various processes (ticket, request, change, problem, release) based on service details, providing control and flexibility.",
          "category": "extended",
          "entities": {
            "process_visibility": {
              "name": "Process Visibility",
              "type": "configuration",
              "description": "A configuration setting to enable or disable the visibility of various processes."
            },
            "service_details": {
              "name": "Service Details",
              "type": "data",
              "description": "Information related to services that can influence process visibility."
            },
            "ticket_process": {
              "name": "Ticket Process",
              "type": "resource",
              "description": "A specific process related to tickets that can be enabled or disabled."
            },
            "request_process": {
              "name": "Request Process",
              "type": "resource",
              "description": "A specific process related to requests that can be enabled or disabled."
            },
            "change_process": {
              "name": "Change Process",
              "type": "resource",
              "description": "A specific process related to changes that can be enabled or disabled."
            },
            "problem_process": {
              "name": "Problem Process",
              "type": "resource",
              "description": "A specific process related to problems that can be enabled or disabled."
            },
            "release_process": {
              "name": "Release Process",
              "type": "resource",
              "description": "A specific process related to releases that can be enabled or disabled."
            }
          }
        },
        "new_ticket_creation_interface": {
          "name": "New Ticket Creation Interface",
          "description": "Provides a dedicated interface, accessible via a 'New ticket' button, to initiate the ticket creation process.",
          "category": "core",
          "entities": {
            "new_ticket_button": {
              "name": "New Ticket Button",
              "type": "action",
              "description": "A user interface element to initiate the creation of a new ticket."
            },
            "ticket_page": {
              "name": "Ticket Page",
              "type": "resource",
              "description": "The starting point or interface for creating new tickets."
            }
          }
        },
        "requester_search_&_add": {
          "name": "Requester Search & Add",
          "description": "Allows searching for existing requesters or adding new ones during the ticket creation process.",
          "category": "core",
          "entities": {
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The user for whom a ticket is being created."
            },
            "search_option": {
              "name": "Search Option",
              "type": "action",
              "description": "A user interface element to find existing requesters."
            },
            "add_a_new_requester_button": {
              "name": "Add a New Requester Button",
              "type": "action",
              "description": "A user interface element to create a new requester entry."
            }
          }
        },
        "ticket_url_for_tracking": {
          "name": "Ticket URL for Tracking",
          "description": "Provides a unique URL for each ticket in acknowledgment emails, allowing requesters to track progress via a self-service portal.",
          "category": "extended",
          "entities": {
            "ticket_url": {
              "name": "Ticket URL",
              "type": "data",
              "description": "A unique web address for a ticket, used for tracking its progress."
            },
            "acknowledgment_email": {
              "name": "Acknowledgment Email",
              "type": "resource",
              "description": "An email containing the ticket URL sent upon request submission."
            },
            "self-service_portal": {
              "name": "Self-Service Portal",
              "type": "resource",
              "description": "A web interface where the ticket URL can be used to view status and updates."
            },
            "ticket_status": {
              "name": "Ticket Status",
              "type": "data",
              "description": "The current state of the ticket, viewable via the URL."
            },
            "updates": {
              "name": "Updates",
              "type": "data",
              "description": "New information or changes to the ticket, viewable via the URL."
            }
          }
        },
        "reported_by_(on_behalf_of)": {
          "name": "Reported By (On Behalf Of)",
          "description": "Allows specifying a different person as the reporter if the ticket is raised on behalf of the requester.",
          "category": "core",
          "entities": {
            "reporter": {
              "name": "Reporter",
              "type": "resource",
              "description": "The user who reports a service issue on behalf of the requester."
            },
            "reporter_name": {
              "name": "Reporter Name",
              "type": "data",
              "description": "The name of the user reporting the ticket."
            },
            "reporter_email_address": {
              "name": "Reporter Email Address",
              "type": "data",
              "description": "The email address of the user reporting the ticket."
            },
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The person for whom the ticket is being reported."
            }
          }
        },
        "email_notification_tracking_(read_status)": {
          "name": "Email Notification Tracking (Read Status)",
          "description": "Tracks whether the assignee has read ticket creation email notifications, automatically closing pop-up notifications upon reading.",
          "category": "extended",
          "entities": {
            "email_notification": {
              "name": "Email Notification",
              "type": "resource",
              "description": "An email sent to notify the assignee about ticket creation."
            },
            "assignee": {
              "name": "Assignee",
              "type": "resource",
              "description": "The recipient of the email notification."
            },
            "read_status": {
              "name": "Read Status",
              "type": "data",
              "description": "The tracked state indicating whether the assignee has read the email."
            },
            "pop-up_notification": {
              "name": "Pop-up Notification",
              "type": "resource",
              "description": "A user interface alert that closes automatically when the email is read."
            }
          }
        },
        "internal_notes": {
          "name": "Internal Notes",
          "description": "Allows adding internal notes visible only to technicians, separate from external communication.",
          "category": "core",
          "entities": {
            "internal_note": {
              "name": "Internal Note",
              "type": "data",
              "description": "A private comment or message intended for technicians or team members."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "The intended audience for internal notes."
            },
            "team_member": {
              "name": "Team Member",
              "type": "resource",
              "description": "The intended audience for internal notes."
            }
          }
        },
        "ticket_attachments": {
          "name": "Ticket Attachments",
          "description": "Allows adding attachments, such as emails or screenshots, to tickets.",
          "category": "core",
          "entities": {
            "attachment": {
              "name": "Attachment",
              "type": "data",
              "description": "Files (e.g., emails, screenshots) that can be added to a ticket."
            },
            "action_icon": {
              "name": "Action Icon",
              "type": "action",
              "description": "A user interface element used to add attachments to a ticket."
            }
          }
        },
        "customizable_signatures": {
          "name": "Customizable Signatures",
          "description": "Allows customizing and creating multiple signatures for tickets and other processes, including images and text.",
          "category": "extended",
          "entities": {
            "signature": {
              "name": "Signature",
              "type": "configuration",
              "description": "A customizable text or image block that can be added to communications."
            },
            "image": {
              "name": "Image",
              "type": "data",
              "description": "A component that can be included in a customizable signature."
            },
            "text": {
              "name": "Text",
              "type": "data",
              "description": "A component that can be included in a customizable signature."
            },
            "multiple_signatures": {
              "name": "Multiple Signatures",
              "type": "configuration",
              "description": "The option to create and store various signature configurations."
            }
          }
        },
        "imap_integration_for_email_communication": {
          "name": "IMAP Integration for Email Communication",
          "description": "Integrates with IMAP mailboxes for simplified email communication, allowing replies directly from the associated mailbox.",
          "category": "integration",
          "entities": {
            "imap": {
              "name": "IMAP",
              "type": "configuration",
              "description": "A protocol for integrating email mailboxes to facilitate ticket communication."
            },
            "smtp": {
              "name": "SMTP",
              "type": "configuration",
              "description": "A protocol for sending email, mentioned in the context of IMAP integration."
            },
            "communication_dropdown": {
              "name": "Communication Dropdown",
              "type": "resource",
              "description": "A user interface element to select IMAP for email communication."
            },
            "imap_mailbox": {
              "name": "IMAP Mailbox",
              "type": "resource",
              "description": "The integrated email account from which emails can be replied to directly."
            },
            "email": {
              "name": "Email",
              "type": "resource",
              "description": "The communication medium facilitated by IMAP integration."
            }
          }
        },
        "past_interactions_display_(requester_history)": {
          "name": "Past Interactions Display (Requester History)",
          "description": "Displays a list of a requester's past interactions when their name is added to a ticket, providing historical context.",
          "category": "extended",
          "entities": {
            "requester_name": {
              "name": "Requester Name",
              "type": "data",
              "description": "The input that triggers the display of a requester's past interactions."
            },
            "past_interactions": {
              "name": "Past Interactions",
              "type": "data",
              "description": "Historical records of previous tickets or requests associated with a requester."
            },
            "ticket_id": {
              "name": "Ticket ID",
              "type": "data",
              "description": "An identifier that can be clicked to view details of past interactions."
            }
          }
        },
        "related_kb_article_suggestion": {
          "name": "Related KB Article Suggestion",
          "description": "Suggests related Knowledge Base articles based on the ticket title, enabling technicians to quickly add resolutions.",
          "category": "integration",
          "entities": {
            "ticket_title": {
              "name": "Ticket Title",
              "type": "data",
              "description": "The input that triggers suggestions for related Knowledge Base articles."
            },
            "knowledge_base_article": {
              "name": "Knowledge Base Article",
              "type": "resource",
              "description": "Suggested resources containing potential solutions or information."
            },
            "related_resolution": {
              "name": "Related Resolution",
              "type": "data",
              "description": "A solution found within a suggested KB article that can be applied to the ticket."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "The user role that can utilize KB article suggestions to resolve tickets."
            },
            "ticket_resolution": {
              "name": "Ticket Resolution",
              "type": "data",
              "description": "The field where a resolution from a KB article can be added."
            }
          }
        },
        "flexible_ticket_submission_status": {
          "name": "Flexible Ticket Submission Status",
          "description": "Allows submitting tickets directly with a status of 'New', 'Pending', or 'Resolved'.",
          "category": "extended",
          "entities": {
            "submit_as_new_option": {
              "name": "Submit as New Option",
              "type": "action",
              "description": "A choice to save a ticket with a 'new' status upon submission."
            },
            "submit_as_pending_option": {
              "name": "Submit as Pending Option",
              "type": "action",
              "description": "A choice to save a ticket with a 'pending' status upon submission."
            },
            "submit_as_resolved_option": {
              "name": "Submit as Resolved Option",
              "type": "action",
              "description": "A choice to save a ticket with a 'resolved' status upon submission."
            },
            "ticket_status": {
              "name": "Ticket Status",
              "type": "data",
              "description": "The initial state of a ticket upon submission, chosen by the user."
            }
          }
        },
        "requester_self-service_portal": {
          "name": "Requester Self-Service Portal",
          "description": "Provides requesters with a dedicated portal to raise tickets, change requests, follow up, and communicate about their requests.",
          "category": "extended",
          "entities": {
            "requester_portal": {
              "name": "Requester Portal",
              "type": "resource",
              "description": "A web interface allowing requesters to manage their tickets and requests."
            },
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The user role that accesses and utilizes the self-service portal."
            },
            "ticket_creation": {
              "name": "Ticket Creation",
              "type": "action",
              "description": "The action of raising new tickets via the portal."
            },
            "change_request_creation": {
              "name": "Change Request Creation",
              "type": "action",
              "description": "The action of raising change requests via the portal."
            },
            "follow_up": {
              "name": "Follow Up",
              "type": "action",
              "description": "The action of tracking and inquiring about existing tickets/requests via the portal."
            },
            "communication": {
              "name": "Communication",
              "type": "action",
              "description": "The action of interacting about tickets/requests via the portal."
            }
          }
        }
      },
      "workflows": {
        "ticket_detection_and_recording": {
          "name": "Ticket Detection and Recording",
          "description": "End-users or technicians identify an interruption and submit a ticket through various channels like a portal, email, phone, or mobile app."
        },
        "ticket_classification_and_categorization": {
          "name": "Ticket Classification and Categorization",
          "description": "Service desk agents classify and categorize newly submitted tickets by assigning attributes such as category, sub-category, impact, urgency, priority, and source."
        },
        "initial_ticket_support": {
          "name": "Initial Ticket Support",
          "description": "Service desk technicians provide immediate support for simple issues reported in a ticket."
        },
        "ticket_investigation_and_diagnosis": {
          "name": "Ticket Investigation and Diagnosis",
          "description": "Service/help desk agents troubleshoot, investigate, and diagnose reported issues to find workarounds or temporary fixes."
        },
        "ticket_escalation_and_notification": {
          "name": "Ticket Escalation and Notification",
          "description": "Support agents escalate tickets requiring additional or advanced support to higher levels (L2/L3) or field engineers, while informing requesters and technicians."
        },
        "ticket_resolution_and_recovery": {
          "name": "Ticket Resolution and Recovery",
          "description": "Applying a workaround, temporary fix, or software patch to restore service and confirm recovery."
        },
        "ticket_closure": {
          "name": "Ticket Closure",
          "description": "The process of formally closing a ticket, which is considered complete only when the requester agrees to the resolution."
        },
        "automated_ticket_closure": {
          "name": "Automated Ticket Closure",
          "description": "The system automatically closes tickets after a specified number of days if not manually closed by a technician or requester."
        },
        "knowledge_base_article_creation_from_ticket": {
          "name": "Knowledge Base Article Creation from Ticket",
          "description": "Converting a resolved ticket into a Knowledge Base article for future reference and efficient knowledge management."
        },
        "ticket_approval_process": {
          "name": "Ticket Approval Process",
          "description": "A workflow where reporting managers receive and act on approval requests for tickets, either approving or rejecting them."
        },
        "sla_monitoring_and_management": {
          "name": "SLA Monitoring and Management",
          "description": "Monitoring and managing Service Level Agreements (SLAs) for tickets, including tracking achievement, breaches, and response times."
        },
        "ticket_re-opening": {
          "name": "Ticket Re-opening",
          "description": "A requester can initiate the re-opening of a ticket if they are unsatisfied with the provided resolution, typically when the ticket is in a 'Waiting for Closure' state."
        },
        "automated_ticket_creation_(from_events)": {
          "name": "Automated Ticket Creation (from Events)",
          "description": "The system automatically creates tickets based on predefined events detected by network monitoring systems."
        },
        "ticket_communication_management": {
          "name": "Ticket Communication Management",
          "description": "Managing all interactions and communications related to a ticket, including sending/receiving emails and SMS, adding notes, and attaching files."
        },
        "ticket_assignment": {
          "name": "Ticket Assignment",
          "description": "Assigning a ticket to an individual technician or a specific team based on expertise or workload."
        },
        "ticket_detail_modification": {
          "name": "Ticket Detail Modification",
          "description": "Updating or editing various attributes and details of a ticket, such as status, priority, urgency, impact, and assignee."
        },
        "ticket_deletion": {
          "name": "Ticket Deletion",
          "description": "Removing a ticket from the system."
        },
        "ticket_to_request_conversion": {
          "name": "Ticket to Request Conversion",
          "description": "Converting an existing ticket into a service request if it is determined to be more appropriate for that process."
        },
        "ticket_to_change_request_creation": {
          "name": "Ticket to Change Request Creation",
          "description": "Initiating a change request directly from a ticket, often to implement a more permanent resolution."
        },
        "ticket_tagging": {
          "name": "Ticket Tagging",
          "description": "Applying predefined tags to tickets for better organization, grouping, and classification."
        },
        "ticket_merging": {
          "name": "Ticket Merging",
          "description": "Combining multiple related tickets into a single, consolidated ticket."
        }
      }
    },
    "workspace": {
      "name": "Workspace",
      "description": "The Workspace is a centralized environment where users can access, manage, and collaborate on integrated IT Service Management (ITSM) modules such as incidents, requests, changes, problems, and releases.",
      "category": "unknown",
      "features": {
        "module_access": {
          "name": "Module Access",
          "description": "Provides access to multiple IT Service Management (ITSM) modules, including incidents, tasks, requests, problems, changes, and releases, within a specific environment.",
          "category": "core",
          "entities": {
            "workspace": {
              "name": "Workspace",
              "type": "resource",
              "description": "The central environment where users can access various modules."
            },
            "module": {
              "name": "Module",
              "type": "resource",
              "description": "Functional areas like incidents, tasks, requests, problems, changes, and release, accessible within the workspace."
            },
            "itsm_module": {
              "name": "ITSM Module",
              "type": "resource",
              "description": "Process-oriented IT Service Management modules integrated into the workspace."
            },
            "environment": {
              "name": "Environment",
              "type": "configuration",
              "description": "The specific setting or context within which modules are accessed in the workspace."
            }
          }
        },
        "collaboration_chat_interface": {
          "name": "Collaboration Chat Interface",
          "description": "Enables seamless communication and collaboration related to the modules through an integrated chat interface.",
          "category": "extended",
          "entities": {
            "chat_interface": {
              "name": "Chat Interface",
              "type": "resource",
              "description": "A communication tool integrated within the workspace modules for seamless collaboration."
            },
            "channel": {
              "name": "Channel",
              "type": "resource",
              "description": "A specific communication stream or group within the chat interface where tickets/requests appear."
            }
          }
        },
        "record_creation_&_management": {
          "name": "Record Creation & Management",
          "description": "Allows users to create, view, and manage detailed records for incidents, requests, changes, problems, and releases, including comprehensive data input fields (e.g., requester, team assignment, priority, impact, urgency, severity, risk, type, category, tags, due date, version, notes, subject, description).",
          "category": "core",
          "entities": {
            "ticket": {
              "name": "Ticket",
              "type": "data",
              "description": "A type of record representing an issue or service request, created and managed within the workspace."
            },
            "request": {
              "name": "Request",
              "type": "data",
              "description": "A type of record representing a user request, created and managed within the workspace."
            },
            "change": {
              "name": "Change",
              "type": "data",
              "description": "A type of record representing a change request, created and managed within the workspace."
            },
            "problem": {
              "name": "Problem",
              "type": "data",
              "description": "A type of record representing a problem, created and managed within the workspace."
            },
            "release": {
              "name": "Release",
              "type": "data",
              "description": "A type of record representing a release, created and managed within the workspace."
            },
            "mandatory_details": {
              "name": "Mandatory Details",
              "type": "configuration",
              "description": "Required fields that must be filled when creating a new record (e.g., Ticket, Request, Change, Problem, Release)."
            },
            "subject_line": {
              "name": "Subject Line",
              "type": "data",
              "description": "A field to provide a brief summary or title for the record."
            },
            "brief_description": {
              "name": "Brief Description",
              "type": "data",
              "description": "A field to provide detailed information about the record."
            },
            "submit_as_new_action": {
              "name": "Submit as New Action",
              "type": "action",
              "description": "The action taken to finalize the creation of a new record in the system."
            }
          }
        },
        "follower_management": {
          "name": "Follower Management",
          "description": "Enables adding multiple followers to a record for notification and tracking purposes.",
          "category": "extended",
          "entities": {
            "follower": {
              "name": "Follower",
              "type": "resource",
              "description": "A user who is selected to receive updates or notifications regarding a specific record."
            },
            "follower_drop-down": {
              "name": "Follower Drop-down",
              "type": "configuration",
              "description": "A user interface element used to select multiple followers for a record."
            }
          }
        },
        "real-time_metadata_synchronization": {
          "name": "Real-time Metadata Synchronization",
          "description": "Ensures that updates made to record metadata within the workspace are simultaneously reflected across all relevant pages.",
          "category": "core",
          "entities": {
            "ticket_id": {
              "name": "Ticket ID",
              "type": "data",
              "description": "A unique identifier assigned to a ticket."
            },
            "metadata": {
              "name": "Metadata",
              "type": "data",
              "description": "Information about a record (e.g., Ticket ID, status, priority) that is synchronized across different views or pages."
            },
            "page": {
              "name": "Page",
              "type": "resource",
              "description": "Different views or interfaces within the system where record details are displayed and updated."
            }
          }
        },
        "detailed_record_view": {
          "name": "Detailed Record View",
          "description": "Provides a comprehensive details page for each record, accessible via its ID, displaying all relevant information including creation timestamp.",
          "category": "core",
          "entities": {
            "record_id": {
              "name": "Record ID",
              "type": "data",
              "description": "Unique identifiers (e.g., Ticket ID, Request ID, Change ID, Problem ID, Release ID) used to access comprehensive details of a specific record."
            },
            "comprehensive_details_page": {
              "name": "Comprehensive Details Page",
              "type": "resource",
              "description": "A dedicated page that displays all comprehensive information and attributes related to a specific record."
            },
            "creation_time_and_date": {
              "name": "Creation Time and Date",
              "type": "data",
              "description": "The timestamp indicating when a record was initially created."
            }
          }
        },
        "record_lifecycle_&_status_management": {
          "name": "Record Lifecycle & Status Management",
          "description": "Manages records through predefined lifecycle stages (e.g., Logged, Responded, Investigation, On Hold, Resolution, Closure) with the ability to update status.",
          "category": "core",
          "entities": {
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The current state of a record (e.g., new, responded, logged, investigation, on hold, resolution, closure) that can be changed throughout its lifecycle."
            },
            "priority": {
              "name": "Priority",
              "type": "data",
              "description": "The level of importance assigned to a record (e.g., critical, high, medium, low)."
            },
            "urgency": {
              "name": "Urgency",
              "type": "data",
              "description": "The measure of how quickly a record needs to be addressed (e.g., high, medium, low)."
            },
            "impact": {
              "name": "Impact",
              "type": "data",
              "description": "The degree of effect a record has on services or users."
            },
            "impact_service": {
              "name": "Impact Service",
              "type": "data",
              "description": "The specific service that is affected by the issue or request documented in the record."
            },
            "service_classification": {
              "name": "Service Classification",
              "type": "data",
              "description": "A categorization of the service associated with the record."
            },
            "risk": {
              "name": "Risk",
              "type": "data",
              "description": "The potential for adverse outcomes associated with a record, particularly for releases."
            },
            "due_date": {
              "name": "Due Date",
              "type": "data",
              "description": "The target date by which a record is expected to be completed."
            },
            "version": {
              "name": "Version",
              "type": "data",
              "description": "A specific iteration or release number associated with a record."
            },
            "record_stage": {
              "name": "Record Stage",
              "type": "configuration",
              "description": "A defined phase in the lifecycle of a ticket, such as Logged, Responded, Investigation, On Hold, Resolution, and Closure."
            }
          }
        },
        "communication_tab": {
          "name": "Communication Tab",
          "description": "Provides a dedicated tab within each record's detailed view for managing and viewing email communications, with options to reply, forward, and add notes.",
          "category": "core",
          "entities": {
            "communication_tab": {
              "name": "Communication Tab",
              "type": "resource",
              "description": "A dedicated section within the record's detailed view where all communications, such as emails and notes, are visible and managed."
            },
            "email": {
              "name": "Email",
              "type": "data",
              "description": "Written communication content, such as emails, visible within the Communication tab."
            },
            "reply_action": {
              "name": "Reply Action",
              "type": "action",
              "description": "An action allowing users to respond to communications within the Communication tab."
            },
            "forward_action": {
              "name": "Forward Action",
              "type": "action",
              "description": "An action allowing users to forward communications to other recipients."
            },
            "add_notes_action": {
              "name": "Add Notes Action",
              "type": "action",
              "description": "An action allowing users to add internal notes related to the communication."
            }
          }
        },
        "ai-powered_communication_enhancement": {
          "name": "AI-Powered Communication Enhancement",
          "description": "Integrates OpenAI to offer text enhancement features for refining communication content within the communication tab.",
          "category": "integration",
          "entities": {
            "openai": {
              "name": "OpenAI",
              "type": "resource",
              "description": "The artificial intelligence technology used to provide text enhancement features for communication content."
            },
            "text_enhancement_feature": {
              "name": "Text Enhancement Feature",
              "type": "action",
              "description": "A capability that allows users to refine communication content by offering various styles using OpenAI."
            },
            "communication_content": {
              "name": "Communication Content",
              "type": "data",
              "description": "The textual information within the Communication section that can be refined or rephrased using AI."
            }
          }
        },
        "record_relationship_linking": {
          "name": "Record Relationship Linking",
          "description": "Enables users to link and manage relationships between different records (e.g., associating tickets) for better context and tracking.",
          "category": "extended",
          "entities": {
            "relation_tab": {
              "name": "Relation Tab",
              "type": "resource",
              "description": "A dedicated section within the record's detailed view for linking and managing relationships with other records."
            },
            "ticket_search_tab": {
              "name": "Ticket Search Tab",
              "type": "resource",
              "description": "A user interface element within the Relation tab used to search for existing tickets to link."
            },
            "relation_type": {
              "name": "Relation Type",
              "type": "configuration",
              "description": "The predefined nature of the relationship between linked records, such as 'associated'."
            },
            "linked_ticket": {
              "name": "Linked Ticket",
              "type": "data",
              "description": "An existing ticket that has been associated or linked to the current record within the Relation tab."
            }
          }
        },
        "attachment_management": {
          "name": "Attachment Management",
          "description": "Facilitates adding, categorizing, and managing documents and files associated with records, supporting drag-and-drop functionality.",
          "category": "core",
          "entities": {
            "attachment_tab": {
              "name": "Attachment Tab",
              "type": "resource",
              "description": "A dedicated section within the record's detailed view for managing and viewing attached files."
            },
            "document/file": {
              "name": "Document/File",
              "type": "data",
              "description": "Any digital file or document that can be attached to a record."
            },
            "drag_and_drop_area": {
              "name": "Drag and Drop Area",
              "type": "resource",
              "description": "A user interface area where documents can be directly dragged and dropped to be attached."
            },
            "attachment_category": {
              "name": "Attachment Category",
              "type": "configuration",
              "description": "A classification or type assigned to an attached document (e.g., default category, ticket screenshot, team docs)."
            },
            "attachment_description": {
              "name": "Attachment Description",
              "type": "data",
              "description": "Textual information providing details or context about an attached document."
            },
            "upload_files_action": {
              "name": "Upload Files Action",
              "type": "action",
              "description": "The action taken to finalize the process of attaching selected files to a record."
            }
          }
        },
        "knowledge_base_conversion": {
          "name": "Knowledge Base Conversion",
          "description": "Allows for the conversion of resolved tickets, problems, changes, or requests into knowledge base articles.",
          "category": "integration",
          "entities": {
            "knowledge_base_(kb)": {
              "name": "Knowledge Base (KB)",
              "type": "resource",
              "description": "A repository of information, typically created from resolved or closed tickets, problems, changes, or requests, for future reference."
            },
            "convert_to_kb_action": {
              "name": "Convert to KB Action",
              "type": "action",
              "description": "An action available for resolved or closed records (Ticket, Problem, Change, Request) to convert their content into a Knowledge Base article."
            },
            "resolved/closed_record": {
              "name": "Resolved/Closed Record",
              "type": "data",
              "description": "A record (Ticket, Problem, Change, Request) that has reached a resolved or closed status, making it eligible for conversion to a Knowledge Base article."
            }
          }
        },
        "recent_activities_log": {
          "name": "Recent Activities Log",
          "description": "Provides a historical log of all actions performed on a record, visible in the 'Recent Activities' tab.",
          "category": "core",
          "entities": {
            "recent_activities_tab": {
              "name": "Recent Activities Tab",
              "type": "resource",
              "description": "A dedicated section within the record's detailed view that displays a chronological history of all actions performed on the record."
            },
            "action_history": {
              "name": "Action History",
              "type": "data",
              "description": "A chronological log of all actions performed on a record, displayed in the Recent Activities tab."
            }
          }
        },
        "recent_issues_display": {
          "name": "Recent Issues Display",
          "description": "Displays the five most recent issues related to the current record in the 'Interaction' tab.",
          "category": "extended",
          "entities": {
            "interaction_tab": {
              "name": "Interaction Tab",
              "type": "resource",
              "description": "A dedicated section within the record's detailed view that displays the five most recent issues related to the current record."
            },
            "recent_issue": {
              "name": "Recent Issue",
              "type": "data",
              "description": "One of the five most recently raised issues displayed within the Interaction tab."
            }
          }
        },
        "specialized_module_workspaces": {
          "name": "Specialized Module Workspaces",
          "description": "Offers tailored workspace views and functionalities specifically designed for Change, Release, and Problem management processes.",
          "category": "core",
          "entities": {
            "change/release_workspace": {
              "name": "Change/Release Workspace",
              "type": "resource",
              "description": "A specialized workspace environment tailored for managing Change and Release records, including planning and tasks."
            },
            "problem_workspace": {
              "name": "Problem Workspace",
              "type": "resource",
              "description": "A specialized workspace environment tailored for managing Problem records, including analysis and submission."
            }
          }
        },
        "change/release_planning_&_task_management": {
          "name": "Change/Release Planning & Task Management",
          "description": "Supports detailed planning for changes and releases, including setting schedules, documenting reasons, outlining rollout/rollback plans, and managing associated sub-tasks.",
          "category": "core",
          "entities": {
            "planning_tab": {
              "name": "Planning Tab",
              "type": "resource",
              "description": "A dedicated section within the Change/Release workspace for defining the start/end dates, reason, and rollout/rollback plans."
            },
            "start_date": {
              "name": "Start Date",
              "type": "data",
              "description": "The planned beginning date for a change or release, selected via a calendar."
            },
            "end_date": {
              "name": "End Date",
              "type": "data",
              "description": "The planned completion date for a change or release, selected via a calendar."
            },
            "reason_for_change": {
              "name": "Reason for Change",
              "type": "data",
              "description": "The justification or explanation for initiating a change."
            },
            "rollout_plan": {
              "name": "Rollout Plan",
              "type": "data",
              "description": "A detailed plan outlining the steps for implementing a change or release."
            },
            "rollback_plan": {
              "name": "Rollback Plan",
              "type": "data",
              "description": "A detailed plan outlining the steps to revert a change or release in case of issues."
            },
            "task_tab": {
              "name": "Task Tab",
              "type": "resource",
              "description": "A dedicated section within the Change/Release workspace for creating and managing individual tasks related to the change or release."
            },
            "task": {
              "name": "Task",
              "type": "data",
              "description": "An individual unit of work associated with a change or release, with its own title, description, status, priority, assignee, and due date."
            },
            "task_title": {
              "name": "Task Title",
              "type": "data",
              "description": "A brief name or summary for a task."
            },
            "task_description": {
              "name": "Task Description",
              "type": "data",
              "description": "Detailed information about a task."
            },
            "task_status": {
              "name": "Task Status",
              "type": "data",
              "description": "The current state of a task, selected from a drop-down."
            },
            "task_priority": {
              "name": "Task Priority",
              "type": "configuration",
              "description": "The level of importance assigned to a task, selected from a drop-down."
            },
            "task_assignee": {
              "name": "Task Assignee",
              "type": "resource",
              "description": "The user assigned responsibility for completing a task, selected from a drop-down."
            },
            "task_due_date": {
              "name": "Task Due Date",
              "type": "data",
              "description": "The target date by which a task is expected to be completed, selected via a calendar."
            }
          }
        },
        "problem_analysis_&_solution_tools": {
          "name": "Problem Analysis & Solution Tools",
          "description": "Provides structured tools for problem analysis (including support for Chronological, 5-Why, and Kepner-Tregoe techniques) and documentation of solutions.",
          "category": "extended",
          "entities": {
            "analysis_and_submission_tab": {
              "name": "Analysis and Submission Tab",
              "type": "resource",
              "description": "The primary section within the Problem workspace dedicated to analyzing the problem and submitting its solution."
            },
            "cause_details_tab": {
              "name": "Cause Details Tab",
              "type": "resource",
              "description": "A sub-tab within the Analysis section for documenting details related to the cause of the problem."
            },
            "technique_details_tab": {
              "name": "Technique Details Tab",
              "type": "resource",
              "description": "A sub-tab within the Analysis section where specific analysis techniques are applied and their details recorded."
            },
            "submitter": {
              "name": "Submitter",
              "type": "resource",
              "description": "The user who submits the problem analysis."
            },
            "analysis_technique": {
              "name": "Analysis Technique",
              "type": "configuration",
              "description": "Methodologies used for problem analysis, including Chronological analysis, 5-Way analysis, and Kepner-Tregeo Technique."
            },
            "problem_type": {
              "name": "Problem Type",
              "type": "configuration",
              "description": "A classification of the problem (e.g., general, troubleshooting, analysis, testing)."
            },
            "problem_category": {
              "name": "Problem Category",
              "type": "configuration",
              "description": "A further categorization of the problem, selected based on its type."
            },
            "submission_date_(analysis)": {
              "name": "Submission Date (Analysis)",
              "type": "data",
              "description": "The date when the problem analysis is submitted."
            },
            "root_cause": {
              "name": "Root Cause",
              "type": "data",
              "description": "The fundamental underlying reason for a problem, identified through analysis techniques."
            },
            "problem_description_(5-way)": {
              "name": "Problem Description (5-Way)",
              "type": "data",
              "description": "A designated space to describe the problem when using the 5-Way analysis technique."
            },
            "kepner-tregeo_questions": {
              "name": "Kepner-Tregeo Questions",
              "type": "configuration",
              "description": "A set of five specific questions used in the Kepner-Tregeo Technique to identify the problem."
            },
            "solution_(problem)": {
              "name": "Solution (Problem)",
              "type": "data",
              "description": "The resolution or fix provided by the technician based on the problem analysis."
            },
            "resolve_action_(problem)": {
              "name": "Resolve Action (Problem)",
              "type": "action",
              "description": "The action taken to mark a problem as resolved after providing a solution and filling mandatory details."
            }
          }
        },
        "cross-module_record_creation": {
          "name": "Cross-Module Record Creation",
          "description": "Enables the creation of related records (e.g., a problem from a ticket, a change from a request) directly from the current workspace, facilitating integrated workflows.",
          "category": "extended",
          "entities": {
            "present_workspace": {
              "name": "Present Workspace",
              "type": "resource",
              "description": "The current module's workspace (e.g., Ticket, Request, Change, Release) from which a user can initiate the creation of a related record in another module."
            },
            "related_record_creation_action": {
              "name": "Related Record Creation Action",
              "type": "action",
              "description": "The action allowing users to create a new record (e.g., Request, Problem, Change, Ticket) from within a different, currently active workspace."
            }
          }
        },
        "contextual_actions_menu": {
          "name": "Contextual Actions Menu",
          "description": "Provides a menu (three vertical dots) for accessing additional, context-specific actions relevant to the current record or workspace.",
          "category": "core",
          "entities": {
            "three_vertical_dots_icon": {
              "name": "Three Vertical Dots Icon",
              "type": "resource",
              "description": "A user interface icon (three vertical dots) located in the right-hand corner of the taskbar, which reveals a contextual actions menu."
            },
            "taskbar": {
              "name": "Taskbar",
              "type": "resource",
              "description": "A user interface component where the contextual actions menu icon is located."
            },
            "contextual_actions_menu": {
              "name": "Contextual Actions Menu",
              "type": "resource",
              "description": "A menu that appears upon clicking the three vertical dots icon, offering actions relevant to the current context or record."
            }
          }
        }
      },
      "workflows": {
        "itsm_record_creation": {
          "name": "ITSM Record Creation",
          "description": "Users initiate new records (Ticket, Request, Change, Problem, Release) by selecting a channel, filling in mandatory details, and submitting them."
        },
        "itsm_record_management": {
          "name": "ITSM Record Management",
          "description": "Users can view comprehensive details of an ITSM record and update its core attributes such as status, priority, urgency, impact, and other specific details."
        },
        "itsm_record_communication": {
          "name": "ITSM Record Communication",
          "description": "Users can communicate within an ITSM record via chat/email, including replying, forwarding, adding notes, and leveraging AI for text enhancement."
        },
        "itsm_record_relationship_management": {
          "name": "ITSM Record Relationship Management",
          "description": "Users can establish and manage associations between different ITSM records (e.g., linking tickets, requests, changes, problems, releases)."
        },
        "itsm_record_attachment_management": {
          "name": "ITSM Record Attachment Management",
          "description": "Users can add, categorize, and upload various documents and files as attachments to an ITSM record."
        },
        "change/release_planning": {
          "name": "Change/Release Planning",
          "description": "Users define planning details for Change and Release records, including start/end dates, reasons, and rollout/rollback plans."
        },
        "change/release_task_management": {
          "name": "Change/Release Task Management",
          "description": "Users create and manage individual tasks associated with Change and Release records, specifying titles, descriptions, assignees, and due dates."
        },
        "problem_analysis_and_resolution": {
          "name": "Problem Analysis and Resolution",
          "description": "Users perform detailed analysis for Problem records, including identifying causes and techniques, and subsequently provide and submit solutions."
        },
        "knowledge_base_conversion": {
          "name": "Knowledge Base Conversion",
          "description": "Users have the option to convert a resolved or closed ITSM record into a knowledge base article for future reference."
        },
        "itsm_record_activity_monitoring": {
          "name": "ITSM Record Activity Monitoring",
          "description": "Users can review recent interactions and a historical log of all activities performed on an ITSM record."
        },
        "workspace_metadata_synchronization": {
          "name": "Workspace Metadata Synchronization",
          "description": "The system ensures that updates to an issue within a Ticket ID in the workspace are simultaneously reflected on all relevant pages."
        }
      }
    },
    "log_management": {
      "name": "Log Management",
      "description": "Log Management analyzes real-time logs from various IT systems to provide crucial insights for security, compliance, IT operations, and business analytics, offering comprehensive visibility into system status.",
      "category": "unknown",
      "features": {
        "real-time_log_analysis": {
          "name": "Real-time Log Analysis",
          "description": "Analyzes logs from various IT systems in real time.",
          "category": "core",
          "entities": {
            "logs": {
              "name": "Logs",
              "type": "data",
              "description": "Data from various IT systems that are analyzed."
            },
            "it_systems": {
              "name": "IT Systems",
              "type": "resource",
              "description": "Various systems within the IT infrastructure that generate logs."
            },
            "security_monitoring": {
              "name": "Security Monitoring",
              "type": "action",
              "description": "An insight or purpose derived from log analysis for security purposes."
            },
            "compliance": {
              "name": "Compliance",
              "type": "action",
              "description": "An insight or purpose derived from log analysis for regulatory adherence."
            },
            "auditing": {
              "name": "Auditing",
              "type": "action",
              "description": "An insight or purpose derived from log analysis for review and verification."
            },
            "it_operations": {
              "name": "IT Operations",
              "type": "action",
              "description": "An insight or purpose derived from log analysis for managing IT infrastructure."
            },
            "anomaly_detection": {
              "name": "Anomaly Detection",
              "type": "action",
              "description": "An insight or purpose derived from log analysis to identify unusual patterns."
            },
            "application_troubleshooting": {
              "name": "Application Troubleshooting",
              "type": "action",
              "description": "An insight or purpose derived from log analysis to diagnose application issues."
            },
            "business_analytics": {
              "name": "Business Analytics",
              "type": "action",
              "description": "An insight or purpose derived from log analysis for business intelligence."
            }
          }
        },
        "diverse_log_source_processing": {
          "name": "Diverse Log Source Processing",
          "description": "Processes log data from diverse sources across the IT infrastructure.",
          "category": "core",
          "entities": {
            "data": {
              "name": "Data",
              "type": "data",
              "description": "Information originating from various sources across the IT infrastructure."
            },
            "diverse_sources": {
              "name": "Diverse Sources",
              "type": "resource",
              "description": "Various origins of data across the IT infrastructure."
            },
            "it_infrastructure": {
              "name": "IT Infrastructure",
              "type": "resource",
              "description": "The overall IT environment where data sources reside."
            },
            "system_status": {
              "name": "System Status",
              "type": "data",
              "description": "Information about the current state of systems, provided through visibility."
            },
            "processes": {
              "name": "Processes",
              "type": "data",
              "description": "Information about ongoing operations and activities, provided through visibility."
            }
          }
        },
        "log_search_module": {
          "name": "Log Search Module",
          "description": "Enables rapid querying and analysis of large volumes of structured and unstructured log data.",
          "category": "core",
          "entities": {
            "log_search_module": {
              "name": "Log Search Module",
              "type": "resource",
              "description": "A tool that enables rapid querying and analysis of log data."
            },
            "structured_log_data": {
              "name": "Structured Log Data",
              "type": "data",
              "description": "Log data organized in a defined format."
            },
            "unstructured_log_data": {
              "name": "Unstructured Log Data",
              "type": "data",
              "description": "Log data without a predefined format."
            },
            "querying": {
              "name": "Querying",
              "type": "action",
              "description": "The act of retrieving information from log data."
            },
            "analysis": {
              "name": "Analysis",
              "type": "action",
              "description": "The act of examining log data to extract insights."
            }
          }
        },
        "index-based_elastic_search_architecture": {
          "name": "Index-based Elastic Search Architecture",
          "description": "Utilizes an index-based storage architecture in an Elastic database for efficient searching across specific log categories within Log Search.",
          "category": "extended",
          "entities": {
            "index-based_storage_architecture": {
              "name": "Index-based Storage Architecture",
              "type": "configuration",
              "description": "A system design that uses indexes for data storage and retrieval."
            },
            "elastic_database": {
              "name": "Elastic Database",
              "type": "resource",
              "description": "A database system used for efficient searching."
            },
            "log_categories": {
              "name": "Log Categories",
              "type": "data",
              "description": "Specific classifications or types of logs that can be searched."
            },
            "search_times": {
              "name": "Search Times",
              "type": "data",
              "description": "The duration taken to perform a search operation, which is significantly reduced."
            },
            "extensive_log_collections": {
              "name": "Extensive Log Collections",
              "type": "data",
              "description": "Large volumes of collected log data that can be efficiently searched."
            }
          }
        },
        "log_stream_module": {
          "name": "Log Stream Module",
          "description": "A centralized tool providing unified access to all logs in the Elasticsearch database, enabling real-time search, filter, and tailing without logging into individual servers.",
          "category": "core",
          "entities": {
            "log_stream_module": {
              "name": "Log Stream Module",
              "type": "resource",
              "description": "A centralized tool in Infraon Infinity that provides unified access to logs."
            },
            "infraon_infinity": {
              "name": "Infraon Infinity",
              "type": "resource",
              "description": "The platform where Log Stream is a component."
            },
            "elasticsearch_database": {
              "name": "Elasticsearch Database",
              "type": "resource",
              "description": "The database storing logs that Log Stream accesses."
            },
            "unified_access": {
              "name": "Unified Access",
              "type": "action",
              "description": "The ability to access all logs from a single point without logging into individual servers."
            },
            "logs": {
              "name": "Logs",
              "type": "data",
              "description": "The data stored in the Elasticsearch database that Log Stream provides access to."
            }
          }
        },
        "live_streaming_(log_stream)": {
          "name": "Live Streaming (Log Stream)",
          "description": "Provides real-time, continuous display of log events within the Log Stream module.",
          "category": "extended",
          "entities": {
            "live_streaming": {
              "name": "Live Streaming",
              "type": "action",
              "description": "The ability to view logs as they are generated in real time."
            }
          }
        },
        "auto-complete_filtering_(log_stream)": {
          "name": "Auto-complete Filtering (Log Stream)",
          "description": "Assists users in filtering logs by suggesting relevant terms within the Log Stream module.",
          "category": "extended",
          "entities": {
            "auto-complete_filtering": {
              "name": "Auto-complete Filtering",
              "type": "configuration",
              "description": "A feature that suggests filter options as the user types to streamline log analysis."
            }
          }
        },
        "navigation_log_graph_(log_stream)": {
          "name": "Navigation Log Graph (Log Stream)",
          "description": "Offers a graphical representation for navigating log data within the Log Stream module.",
          "category": "extended",
          "entities": {
            "navigation_log_graph": {
              "name": "Navigation Log Graph",
              "type": "resource",
              "description": "A graphical representation to aid in navigating logs."
            }
          }
        },
        "quick_message_categorization_(log_stream)": {
          "name": "Quick Message Categorization (Log Stream)",
          "description": "Facilitates rapid categorization of log messages within the Log Stream module.",
          "category": "extended",
          "entities": {
            "quick_message_categorization": {
              "name": "Quick Message Categorization",
              "type": "action",
              "description": "The ability to rapidly assign categories to log messages."
            }
          }
        },
        "pattern_identification_(log_stream)": {
          "name": "Pattern Identification (Log Stream)",
          "description": "Helps in identifying recurring patterns within log data using the Log Stream module.",
          "category": "extended",
          "entities": {
            "pattern_identification": {
              "name": "Pattern Identification",
              "type": "action",
              "description": "The process of recognizing recurring sequences or structures in logs."
            }
          }
        }
      },
      "workflows": {
        "log_data_ingestion_and_processing": {
          "name": "Log Data Ingestion and Processing",
          "description": "The system processes log data from diverse sources across the IT infrastructure in real time, providing visibility into system status and processes."
        },
        "log_data_querying_and_analysis": {
          "name": "Log Data Querying and Analysis",
          "description": "Users can rapidly query and analyze large volumes of structured and unstructured log data across specific log categories using an index-based storage architecture."
        },
        "real-time_log_monitoring_and_streaming": {
          "name": "Real-time Log Monitoring and Streaming",
          "description": "Users can search, filter, and tail logs in real time from a centralized location, enabling live streaming, auto-complete filtering, and pattern identification."
        }
      }
    },
    "contract_management": {
      "name": "Contract Management",
      "description": "The Contract Management module in Infraon Infinity enables organizations to efficiently store, track, and manage the lifecycle of various contractual agreements, including software, hardware, lease, and service contracts.",
      "category": "unknown",
      "features": {
        "contract_lifecycle_management": {
          "name": "Contract Lifecycle Management",
          "description": "Handles and tracks essential contractual agreements, ensuring streamlined organization and visibility into each contract\u2019s lifecycle.",
          "category": "core",
          "entities": {
            "contract": {
              "name": "Contract",
              "type": "resource",
              "description": "The core contractual agreement being managed."
            },
            "start_date": {
              "name": "Start Date",
              "type": "data",
              "description": "The date when the contract becomes effective."
            },
            "end_date": {
              "name": "End Date",
              "type": "data",
              "description": "The date when the contract ceases to be effective."
            },
            "renewal_terms": {
              "name": "Renewal Terms",
              "type": "data",
              "description": "Conditions and details governing the extension of a contract."
            },
            "obligations": {
              "name": "Obligations",
              "type": "data",
              "description": "Duties or commitments specified within the contract."
            },
            "compliance_requirements": {
              "name": "Compliance Requirements",
              "type": "data",
              "description": "Rules or standards that the contract must adhere to."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The current state of the contract (e.g., Draft, Waiting for Approval, Review)."
            },
            "renewal_status": {
              "name": "Renewal Status",
              "type": "data",
              "description": "The current status specifically related to contract renewal."
            },
            "expiry_date": {
              "name": "Expiry Date",
              "type": "data",
              "description": "The specific date on which the contract expires."
            }
          }
        },
        "detailed_contract_data_storage": {
          "name": "Detailed Contract Data Storage",
          "description": "Stores and monitors important details such as start and end dates, renewal terms, obligations, compliance requirements, and associated costs.",
          "category": "core",
          "entities": {
            "contract": {
              "name": "Contract",
              "type": "resource",
              "description": "The primary resource for which detailed data is stored."
            },
            "contract_name": {
              "name": "Contract Name",
              "type": "data",
              "description": "A descriptive title for the contract."
            },
            "contract_id": {
              "name": "Contract ID",
              "type": "data",
              "description": "A unique identifier assigned to each contract."
            },
            "type": {
              "name": "Type",
              "type": "data",
              "description": "The classification or category of the contract (e.g., Software, Hardware)."
            },
            "vendor": {
              "name": "Vendor",
              "type": "data",
              "description": "The company or individual providing goods or services under the contract."
            },
            "manufacturer": {
              "name": "Manufacturer",
              "type": "data",
              "description": "The entity that produced the goods, particularly relevant for hardware contracts."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The current state of the contract in its lifecycle."
            },
            "renewal_status": {
              "name": "Renewal Status",
              "type": "data",
              "description": "Information regarding the contract's renewal state."
            },
            "expiry_date": {
              "name": "Expiry Date",
              "type": "data",
              "description": "The date when the contract is set to expire."
            },
            "start_date": {
              "name": "Start Date",
              "type": "data",
              "description": "The date when the contract begins."
            },
            "end_date": {
              "name": "End Date",
              "type": "data",
              "description": "The date when the contract concludes."
            },
            "renewal_terms": {
              "name": "Renewal Terms",
              "type": "data",
              "description": "Specific conditions and periods for contract renewal."
            },
            "obligations": {
              "name": "Obligations",
              "type": "data",
              "description": "Responsibilities and duties outlined in the contract."
            },
            "compliance_requirements": {
              "name": "Compliance Requirements",
              "type": "data",
              "description": "Mandatory rules or standards applicable to the contract."
            },
            "associated_costs": {
              "name": "Associated Costs",
              "type": "data",
              "description": "Financial expenditures related to the contract."
            },
            "description": {
              "name": "Description",
              "type": "data",
              "description": "A detailed explanation or summary of the contract."
            },
            "managed_by": {
              "name": "Managed By",
              "type": "data",
              "description": "The user responsible for overseeing the contract."
            },
            "approver": {
              "name": "Approver",
              "type": "data",
              "description": "The team or individual authorized to approve the contract."
            },
            "visibility_type": {
              "name": "Visibility Type",
              "type": "configuration",
              "description": "The scope of who can view the contract (e.g., Department, Team, User)."
            },
            "visibility_to": {
              "name": "Visibility To",
              "type": "data",
              "description": "The specific department, team, or user granted visibility."
            },
            "terms_and_conditions": {
              "name": "Terms and Conditions",
              "type": "data",
              "description": "Specific clauses, agreements, or special notes within the contract."
            },
            "license_type": {
              "name": "License Type",
              "type": "data",
              "description": "The classification of a software license (e.g., Perpetual, Subscription)."
            },
            "license_key": {
              "name": "License Key",
              "type": "data",
              "description": "The unique identifier for a software license."
            },
            "license_based_on": {
              "name": "License Based On",
              "type": "data",
              "description": "The model by which a software license is measured (e.g., Number of users, device count)."
            },
            "software": {
              "name": "Software",
              "type": "data",
              "description": "The specific software product associated with a software contract."
            },
            "billing_cycle": {
              "name": "Billing Cycle",
              "type": "data",
              "description": "The frequency of billing for the contract (e.g., Monthly, Yearly)."
            },
            "plan_name": {
              "name": "Plan Name",
              "type": "data",
              "description": "The name of the specific plan or tier within a contract."
            },
            "pricing_model": {
              "name": "Pricing Model",
              "type": "data",
              "description": "The method used to determine the cost (e.g., Per Unit, Fixed)."
            },
            "cost": {
              "name": "Cost",
              "type": "data",
              "description": "The monetary value associated with the contract or plan."
            },
            "count": {
              "name": "Count",
              "type": "data",
              "description": "The number of licenses or units included in a plan."
            },
            "comments": {
              "name": "Comments",
              "type": "data",
              "description": "Additional notes or remarks about the contract or plan."
            },
            "currency": {
              "name": "Currency",
              "type": "data",
              "description": "The monetary unit in which the contract cost is denominated."
            }
          }
        },
        "multi-type_contract_support": {
          "name": "Multi-Type Contract Support",
          "description": "Manages various contract types including Software, Hardware, Lease, and Service contracts.",
          "category": "core",
          "entities": {
            "contract_type": {
              "name": "Contract Type",
              "type": "configuration",
              "description": "The classification system for different kinds of contracts."
            },
            "software_contract": {
              "name": "Software Contract",
              "type": "resource",
              "description": "A contract specifically for software licenses and service terms."
            },
            "hardware_contract": {
              "name": "Hardware Contract",
              "type": "resource",
              "description": "A contract for physical assets, including warranties and maintenance."
            },
            "lease_contract": {
              "name": "Lease Contract",
              "type": "resource",
              "description": "A contract for lease agreements of equipment and infrastructure."
            },
            "service_contract": {
              "name": "Service Contract",
              "type": "resource",
              "description": "A contract for outsourced or third-party services."
            }
          }
        },
        "predefined_contract_categorization": {
          "name": "Predefined Contract Categorization",
          "description": "Provides pre-configured, non-editable categories (Software, Hardware, Lease, Service) for organizing contracts.",
          "category": "extended",
          "entities": {
            "contract_category": {
              "name": "Contract Category",
              "type": "configuration",
              "description": "A classification label for contracts, pre-configured in the system."
            },
            "software_category": {
              "name": "Software Category",
              "type": "configuration",
              "description": "A predefined category for software-related contracts."
            },
            "hardware_category": {
              "name": "Hardware Category",
              "type": "configuration",
              "description": "A predefined category for hardware-related contracts."
            },
            "lease_category": {
              "name": "Lease Category",
              "type": "configuration",
              "description": "A predefined category for lease agreements."
            },
            "service_category": {
              "name": "Service Category",
              "type": "configuration",
              "description": "A predefined category for service-related contracts."
            },
            "left_panel": {
              "name": "Left Panel",
              "type": "resource",
              "description": "A user interface element displaying the list of contract categories."
            }
          }
        },
        "contract_search_functionality": {
          "name": "Contract Search Functionality",
          "description": "Allows users to search for specific contracts by name, type, and other details.",
          "category": "core",
          "entities": {
            "search_bar": {
              "name": "Search Bar",
              "type": "resource",
              "description": "The user interface element used to input search queries."
            },
            "contract_name": {
              "name": "Contract Name",
              "type": "data",
              "description": "A data field that can be used as a search criterion."
            },
            "contract_type": {
              "name": "Contract Type",
              "type": "data",
              "description": "A data field that can be used as a search criterion."
            },
            "contract_id": {
              "name": "Contract ID",
              "type": "data",
              "description": "A data field that can be used as a search criterion."
            },
            "search_action": {
              "name": "Search Action",
              "type": "action",
              "description": "The operation of locating contracts based on specified criteria."
            }
          }
        },
        "contract_filtering_capabilities": {
          "name": "Contract Filtering Capabilities",
          "description": "Enables applying filters based on various fields like Contract Name, Type, ID, Vendor, Status, Managed By, Approver, Description, Start Date, and End Date.",
          "category": "core",
          "entities": {
            "filter_action": {
              "name": "Filter Action",
              "type": "action",
              "description": "The operation of applying criteria to narrow down the displayed contracts."
            },
            "filter_fields": {
              "name": "Filter Fields",
              "type": "configuration",
              "description": "The available data attributes that can be used to filter contracts."
            },
            "contract_name": {
              "name": "Contract Name",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "type": {
              "name": "Type",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "id": {
              "name": "ID",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "vendor": {
              "name": "Vendor",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "managed_by": {
              "name": "Managed By",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "approver": {
              "name": "Approver",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "description": {
              "name": "Description",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "start_date": {
              "name": "Start Date",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "end_date": {
              "name": "End Date",
              "type": "data",
              "description": "A data field available for filtering."
            },
            "conditions": {
              "name": "Conditions",
              "type": "configuration",
              "description": "The logical rules applied to filter fields (e.g., equals, contains, before)."
            }
          }
        },
        "multiple_data_display_views_(grid_&_card)": {
          "name": "Multiple Data Display Views (Grid & Card)",
          "description": "Offers options to display contract data in a structured grid format or a concise card-based layout.",
          "category": "extended",
          "entities": {
            "grid_view": {
              "name": "Grid View",
              "type": "configuration",
              "description": "A display format presenting contract data in a structured row-column table."
            },
            "card_view": {
              "name": "Card View",
              "type": "configuration",
              "description": "A display format presenting contracts as individual, concise summary cards."
            },
            "contract_data": {
              "name": "Contract Data",
              "type": "data",
              "description": "The information pertaining to contracts that is displayed."
            }
          }
        },
        "contract_creation": {
          "name": "Contract Creation",
          "description": "Allows users to add new contracts to the inventory within predefined categories.",
          "category": "core",
          "entities": {
            "new_contract_button": {
              "name": "New Contract Button",
              "type": "resource",
              "description": "The user interface element used to initiate the creation of a new contract."
            },
            "contract_form": {
              "name": "Contract Form",
              "type": "resource",
              "description": "The interactive interface where users input details for a new contract."
            },
            "contract_properties": {
              "name": "Contract Properties",
              "type": "resource",
              "description": "A section within the contract form for basic and general contract details."
            },
            "item_details": {
              "name": "Item Details",
              "type": "resource",
              "description": "A section within the contract form for specific details, particularly for software contracts."
            },
            "asset_properties": {
              "name": "Asset Properties",
              "type": "resource",
              "description": "A section within the contract form for linking relevant assets."
            },
            "contract_category_selection": {
              "name": "Contract Category Selection",
              "type": "action",
              "description": "The action of choosing the appropriate predefined category for the new contract."
            },
            "software_contract": {
              "name": "Software Contract",
              "type": "resource",
              "description": "A specific type of contract that can be created."
            },
            "hardware_contract": {
              "name": "Hardware Contract",
              "type": "resource",
              "description": "A specific type of contract that can be created."
            },
            "lease_contract": {
              "name": "Lease Contract",
              "type": "resource",
              "description": "A specific type of contract that can be created."
            },
            "service_contract": {
              "name": "Service Contract",
              "type": "resource",
              "description": "A specific type of contract that can be created."
            },
            "mandatory_fields": {
              "name": "Mandatory Fields",
              "type": "configuration",
              "description": "Data input fields that are required to be completed before contract submission."
            },
            "add_vendor_action": {
              "name": "Add Vendor Action",
              "type": "action",
              "description": "The action of adding a new vendor during contract creation."
            },
            "add_software_action": {
              "name": "Add Software Action",
              "type": "action",
              "description": "The action of adding new software during contract creation (for software contracts)."
            },
            "add_asset_action": {
              "name": "Add Asset Action",
              "type": "action",
              "description": "The action of adding a new asset during contract creation (for asset-linked contracts)."
            },
            "submit_action": {
              "name": "Submit Action",
              "type": "action",
              "description": "The final action to save and add the new contract to the inventory."
            }
          }
        },
        "contract_modification": {
          "name": "Contract Modification",
          "description": "Enables modification of details for existing contracts.",
          "category": "core",
          "entities": {
            "edit_button": {
              "name": "Edit Button",
              "type": "resource",
              "description": "The user interface element used to initiate changes to an existing contract."
            },
            "contract": {
              "name": "Contract",
              "type": "resource",
              "description": "The specific contract whose details are being altered."
            },
            "modification_action": {
              "name": "Modification Action",
              "type": "action",
              "description": "The operation of changing or updating contract details."
            },
            "contract_details": {
              "name": "Contract Details",
              "type": "data",
              "description": "The various data fields and information associated with a contract that can be edited."
            }
          }
        },
        "contract_deletion": {
          "name": "Contract Deletion",
          "description": "Allows permanent removal of selected contracts and their associated details.",
          "category": "core",
          "entities": {
            "delete_button": {
              "name": "Delete Button",
              "type": "resource",
              "description": "The user interface element used to initiate the removal of a contract."
            },
            "contract": {
              "name": "Contract",
              "type": "resource",
              "description": "The specific contract being permanently removed from the inventory."
            },
            "associated_details": {
              "name": "Associated Details",
              "type": "data",
              "description": "All data and information linked to the contract that will also be deleted."
            },
            "deletion_action": {
              "name": "Deletion Action",
              "type": "action",
              "description": "The operation of permanently removing a contract and its related data."
            }
          }
        },
        "quick_contract_overview": {
          "name": "Quick Contract Overview",
          "description": "Displays essential fields (Contract Name, ID, Type, Vendor, Manufacturer, Status, Renewal Status, Expiry Date) for quick access on the main page.",
          "category": "core",
          "entities": {
            "main_page": {
              "name": "Main Page",
              "type": "resource",
              "description": "The primary display area that provides a summary view of contracts."
            },
            "contract_name": {
              "name": "Contract Name",
              "type": "data",
              "description": "A key identifier displayed for quick recognition."
            },
            "contract_id": {
              "name": "Contract ID",
              "type": "data",
              "description": "A unique identifier displayed for quick reference."
            },
            "type": {
              "name": "Type",
              "type": "data",
              "description": "The category of the contract, visible at a glance."
            },
            "vendor": {
              "name": "Vendor",
              "type": "data",
              "description": "The associated vendor, visible for quick identification."
            },
            "manufacturer": {
              "name": "Manufacturer",
              "type": "data",
              "description": "The associated manufacturer, visible for quick identification (where applicable)."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The current state of the contract, visible for quick assessment."
            },
            "renewal_status": {
              "name": "Renewal Status",
              "type": "data",
              "description": "The renewal state of the contract, visible for quick assessment."
            },
            "expiry_date": {
              "name": "Expiry Date",
              "type": "data",
              "description": "The expiration date of the contract, visible for quick awareness."
            }
          }
        },
        "detailed_contract_view": {
          "name": "Detailed Contract View",
          "description": "Provides a comprehensive view of a contract's key information and associated details via a pop-up window for privileged users.",
          "category": "extended",
          "entities": {
            "detailed_pop-up_window": {
              "name": "Detailed Pop-up Window",
              "type": "resource",
              "description": "A secondary user interface window that opens to display comprehensive contract information."
            },
            "privileged_user": {
              "name": "Privileged User",
              "type": "resource",
              "description": "A user role with specific permissions to access detailed contract views."
            },
            "top_panel": {
              "name": "Top Panel",
              "type": "resource",
              "description": "A section within the detailed view displaying fundamental contract details."
            },
            "summary_section": {
              "name": "Summary Section",
              "type": "resource",
              "description": "A section within the detailed view showcasing comprehensive contract information."
            },
            "license_info_section": {
              "name": "License Info Section",
              "type": "resource",
              "description": "A section within the detailed view providing a summary of license information."
            },
            "attachment_section": {
              "name": "Attachment Section",
              "type": "resource",
              "description": "A section within the detailed view dedicated to managing contract attachments."
            },
            "activity_log_section": {
              "name": "Activity Log Section",
              "type": "resource",
              "description": "A section within the detailed view displaying the complete history of contract activities."
            },
            "recent_activities_section": {
              "name": "Recent Activities Section",
              "type": "resource",
              "description": "A section within the detailed view highlighting the most recent actions on the contract."
            },
            "contract_key_information": {
              "name": "Contract Key Information",
              "type": "data",
              "description": "The essential and critical data points of a contract."
            },
            "associated_details": {
              "name": "Associated Details",
              "type": "data",
              "description": "All related information and data linked to the contract."
            }
          }
        },
        "attachment_management": {
          "name": "Attachment Management",
          "description": "Allows privileged users to upload, drag-and-drop, and categorize attachments (various formats, max 20 MB) under predefined categories.",
          "category": "extended",
          "entities": {
            "attachment_section": {
              "name": "Attachment Section",
              "type": "resource",
              "description": "The dedicated area within the contract details for handling files."
            },
            "attachment_file": {
              "name": "Attachment File",
              "type": "resource",
              "description": "The digital document or image uploaded and associated with a contract."
            },
            "drag_and_drop_functionality": {
              "name": "Drag and Drop Functionality",
              "type": "action",
              "description": "A method allowing users to upload files by dragging them into the designated area."
            },
            "browse_to_upload_functionality": {
              "name": "Browse to Upload Functionality",
              "type": "action",
              "description": "A method allowing users to select files from their system via a file browser."
            },
            "accepted_file_formats": {
              "name": "Accepted File Formats",
              "type": "configuration",
              "description": "The list of file types that the system allows for attachments (e.g., PDF, DOCX, JPEG)."
            },
            "max_file_size": {
              "name": "Max File Size",
              "type": "configuration",
              "description": "The maximum allowable size for an individual attachment file."
            },
            "attachment_categories": {
              "name": "Attachment Categories",
              "type": "configuration",
              "description": "Predefined classifications for organizing attached files (e.g., Legal Notices, Payment Terms)."
            },
            "upload_action": {
              "name": "Upload Action",
              "type": "action",
              "description": "The operation of adding a file to the contract's attachments."
            },
            "privileged_user": {
              "name": "Privileged User",
              "type": "resource",
              "description": "A user role with the necessary permissions to upload attachments."
            }
          }
        },
        "activity_logging": {
          "name": "Activity Logging",
          "description": "Displays a complete history of all activities performed on a contract since its creation, with search capabilities.",
          "category": "extended",
          "entities": {
            "activity_log": {
              "name": "Activity Log",
              "type": "data",
              "description": "A chronological record of all actions performed on a contract."
            },
            "history_of_activities": {
              "name": "History of Activities",
              "type": "data",
              "description": "The complete sequence of events and changes recorded for a contract."
            },
            "contract_creation_event": {
              "name": "Contract Creation Event",
              "type": "data",
              "description": "A specific type of activity recorded in the log, marking the contract's inception."
            },
            "grid_view": {
              "name": "Grid View",
              "type": "configuration",
              "description": "A display setting for viewing the activity log in a structured table format."
            },
            "card_view": {
              "name": "Card View",
              "type": "configuration",
              "description": "A display setting for viewing the activity log in a card-based layout."
            },
            "search_functionality": {
              "name": "Search Functionality",
              "type": "action",
              "description": "The ability to search within the activity log for specific entries."
            }
          }
        },
        "recent_activities_display": {
          "name": "Recent Activities Display",
          "description": "Highlights only the most recent actions taken on a contract for a quick overview.",
          "category": "extended",
          "entities": {
            "recent_activities": {
              "name": "Recent Activities",
              "type": "data",
              "description": "A filtered view showing only the most recent actions performed on a contract."
            },
            "most_recent_actions": {
              "name": "Most Recent Actions",
              "type": "data",
              "description": "The latest operations or updates recorded for the contract."
            }
          }
        },
        "vendor_integration": {
          "name": "Vendor Integration",
          "description": "Allows selection of existing vendors or adding new vendors during contract creation.",
          "category": "integration",
          "entities": {
            "vendor": {
              "name": "Vendor",
              "type": "resource",
              "description": "An external party (company or individual) associated with a contract."
            },
            "vendor_list": {
              "name": "Vendor List",
              "type": "data",
              "description": "A collection of pre-existing vendors available in the system's inventory."
            },
            "add_vendor_action": {
              "name": "Add Vendor Action",
              "type": "action",
              "description": "The action of creating and adding a new vendor record to the system."
            },
            "vendor_selection": {
              "name": "Vendor Selection",
              "type": "action",
              "description": "The action of choosing an existing vendor from a dropdown list or inventory."
            }
          }
        },
        "software_license_property_management": {
          "name": "Software License Property Management",
          "description": "Captures specific details for software licenses like type, key, and licensing model.",
          "category": "extended",
          "entities": {
            "software_license_properties_section": {
              "name": "Software License Properties Section",
              "type": "resource",
              "description": "A dedicated area within the contract form for inputting software license-specific details."
            },
            "license_type": {
              "name": "License Type",
              "type": "data",
              "description": "The classification of the software license (e.g., Perpetual, Subscription, Volume)."
            },
            "license_key": {
              "name": "License Key",
              "type": "data",
              "description": "The unique alphanumeric code associated with a software license."
            },
            "license_based_on": {
              "name": "License Based On",
              "type": "data",
              "description": "The metric or model used for licensing (e.g., number of users, device count, site-based)."
            },
            "software_contract": {
              "name": "Software Contract",
              "type": "resource",
              "description": "The specific type of contract where these properties are managed."
            }
          }
        },
        "automated_renewal_&_expiry_notifications": {
          "name": "Automated Renewal & Expiry Notifications",
          "description": "Manages auto-renewal settings and enables notifications for contract expiration.",
          "category": "extended",
          "entities": {
            "auto_renew_toggle": {
              "name": "Auto Renew Toggle",
              "type": "configuration",
              "description": "A configuration switch to enable or disable automatic contract renewal."
            },
            "notify_expiry_toggle": {
              "name": "Notify Expiry Toggle",
              "type": "configuration",
              "description": "A configuration switch to enable or disable notifications for contract expiration."
            },
            "notification_recipient": {
              "name": "Notification Recipient",
              "type": "configuration",
              "description": "The user or team configured to receive expiry notifications."
            },
            "notification_period": {
              "name": "Notification Period",
              "type": "configuration",
              "description": "The configurable timeframe before expiry when notifications are sent."
            },
            "contract_expiration": {
              "name": "Contract Expiration",
              "type": "data",
              "description": "The event of a contract reaching its end date."
            },
            "contract_renewal": {
              "name": "Contract Renewal",
              "type": "action",
              "description": "The system's action of extending a contract's term automatically."
            }
          }
        },
        "cost_and_billing_management": {
          "name": "Cost and Billing Management",
          "description": "Captures itemized cost details, billing cycles, plan names, and pricing models for contracts.",
          "category": "core",
          "entities": {
            "associated_costs": {
              "name": "Associated Costs",
              "type": "data",
              "description": "The financial expenses linked to a contract."
            },
            "cost_field": {
              "name": "Cost Field",
              "type": "data",
              "description": "A data input field for entering the monetary value of the contract."
            },
            "currency": {
              "name": "Currency",
              "type": "data",
              "description": "The unit of money in which the contract's cost is specified."
            },
            "billing_cycle": {
              "name": "Billing Cycle",
              "type": "data",
              "description": "The frequency at which payments or invoices are generated (e.g., Monthly, Yearly)."
            },
            "pricing_model": {
              "name": "Pricing Model",
              "type": "data",
              "description": "The structure used to calculate the cost (e.g., Per Unit, Fixed, One Time)."
            },
            "count": {
              "name": "Count",
              "type": "data",
              "description": "The quantity of items or units covered by the contract's cost."
            },
            "itemized_cost_details": {
              "name": "Itemized Cost Details",
              "type": "data",
              "description": "A breakdown of individual cost components within the contract."
            }
          }
        },
        "contract_visibility_configuration": {
          "name": "Contract Visibility Configuration",
          "description": "Allows setting contract visibility based on Department, Team, or User.",
          "category": "extended",
          "entities": {
            "visibility_type": {
              "name": "Visibility Type",
              "type": "configuration",
              "description": "A configuration setting defining the scope of who can view a contract (e.g., Department, Team, User)."
            },
            "visibility_to": {
              "name": "Visibility To",
              "type": "data",
              "description": "The specific department, team, or user designated to have access to view the contract."
            },
            "user": {
              "name": "User",
              "type": "resource",
              "description": "An individual account within the system that can be granted contract visibility."
            },
            "team": {
              "name": "Team",
              "type": "resource",
              "description": "A group of users within the system that can be granted contract visibility."
            },
            "department": {
              "name": "Department",
              "type": "resource",
              "description": "An organizational unit within the system that can be granted contract visibility."
            }
          }
        },
        "asset_integration/linking": {
          "name": "Asset Integration/Linking",
          "description": "Enables mapping relevant assets (IT Assets and Fixed Assets) with contracts, including options to link existing or add new assets.",
          "category": "integration",
          "entities": {
            "asset_properties_tab": {
              "name": "Asset Properties Tab",
              "type": "resource",
              "description": "A dedicated section within the contract form for associating assets."
            },
            "asset": {
              "name": "Asset",
              "type": "resource",
              "description": "A physical or IT resource that can be linked to a contract."
            },
            "link_asset_action": {
              "name": "Link Asset Action",
              "type": "action",
              "description": "The action of associating an existing asset from the inventory with a contract."
            },
            "add_asset_action": {
              "name": "Add Asset Action",
              "type": "action",
              "description": "The action of creating and adding a new asset record to the inventory and linking it to a contract."
            },
            "it_asset": {
              "name": "IT Asset",
              "type": "resource",
              "description": "A type of asset specifically related to information technology."
            },
            "fixed_asset": {
              "name": "Fixed Asset",
              "type": "resource",
              "description": "A type of asset typically representing long-term tangible property."
            },
            "asset_inventory": {
              "name": "Asset Inventory",
              "type": "resource",
              "description": "The central repository or list of all assets managed within the system."
            },
            "search_and_filter": {
              "name": "Search and Filter",
              "type": "action",
              "description": "Tools used to locate specific assets within the asset inventory."
            }
          }
        }
      },
      "workflows": {
        "contract_creation": {
          "name": "Contract Creation",
          "description": "The process for users to add new contractual agreements to the system, involving the selection of predefined contract categories (Software, Hardware, Lease, Service) and the input of comprehensive details such as basic information, terms, costs, and associated items or assets."
        },
        "contract_viewing_and_discovery": {
          "name": "Contract Viewing and Discovery",
          "description": "The workflow enabling users to browse, search, and filter the inventory of stored contracts, and to display them in various formats (grid, card, or detailed pop-up view) for quick access to critical information."
        },
        "contract_modification_and_deletion": {
          "name": "Contract Modification and Deletion",
          "description": "The workflow allowing users to update the details of existing contracts or to permanently remove selected contracts and their associated information from the system."
        },
        "contract_attachment_management": {
          "name": "Contract Attachment Management",
          "description": "A workflow for privileged users to upload, categorize, and manage supporting documents and files (e.g., agreements, legal notices) associated with specific contracts."
        },
        "contract_activity_tracking": {
          "name": "Contract Activity Tracking",
          "description": "The process of viewing the complete historical log of all activities and changes performed on a contract since its creation, including search capabilities within the activity log."
        },
        "contract_monitoring_and_notifications": {
          "name": "Contract Monitoring and Notifications",
          "description": "The system's capability to track contract lifecycle details such as start/end dates, renewal terms, and expiry, and to enable notifications for upcoming expirations or renewals."
        }
      }
    },
    "sla_management": {
      "name": "SLA Management",
      "description": "The SLA Management module in Infraon allows users to define and customize Service Level Agreements by configuring metrics, profiles, and service targets.",
      "category": "unknown",
      "features": {
        "sla_metric_configuration": {
          "name": "SLA Metric Configuration",
          "description": "Allows users to define and configure specific conditions (Start, Close, Pause, Resume, Cancel) that govern when SLA calculations begin, pause, resume, or end for tickets. Each metric can be named, assigned a criticality, and described.",
          "category": "core",
          "entities": {
            "sla_module": {
              "name": "SLA Module",
              "type": "resource",
              "description": "The main module within Infraon for managing Service Level Agreements, where metrics are configured."
            },
            "metric": {
              "name": "Metric",
              "type": "data",
              "description": "A measurable target agreed upon between customer and service provider, used to spot SLA breaches, which can be configured."
            },
            "metric_name": {
              "name": "Metric Name",
              "type": "configuration",
              "description": "A unique identifier given to the SLA Metric."
            },
            "metric_criticality": {
              "name": "Metric Criticality",
              "type": "configuration",
              "description": "Defines the importance or priority of the Metric among multiple parameters."
            },
            "metric_description": {
              "name": "Metric Description",
              "type": "configuration",
              "description": "Provides additional details about the SLA Metric."
            },
            "start_condition": {
              "name": "Start Condition",
              "type": "configuration",
              "description": "Specifies the condition under which the SLA attaches to a ticket and begins metering."
            },
            "close_condition": {
              "name": "Close Condition",
              "type": "configuration",
              "description": "Specifies the condition under which the SLA completes."
            },
            "pause_condition": {
              "name": "Pause Condition",
              "type": "configuration",
              "description": "Specifies the condition under which the SLA metering will be paused."
            },
            "resume_condition": {
              "name": "Resume Condition",
              "type": "configuration",
              "description": "Specifies the condition under which the SLA will resume metering."
            },
            "cancel_condition": {
              "name": "Cancel Condition",
              "type": "configuration",
              "description": "Specifies the condition under which the SLA will be canceled."
            },
            "ticket": {
              "name": "Ticket",
              "type": "data",
              "description": "A record of an issue or request to which SLA metrics are applied."
            }
          }
        },
        "sla_profile_definition": {
          "name": "SLA Profile Definition",
          "description": "Enables the creation and detailed definition of SLA profiles (e.g., Gold, VIP), including basic information such as name, type (Service/Performance), status, compliance target, start and end dates, and a description. It also allows specifying conditions under which the SLA metrics are applicable.",
          "category": "core",
          "entities": {
            "sla_module": {
              "name": "SLA Module",
              "type": "resource",
              "description": "The main module within Infraon for managing Service Level Agreements, where profiles are defined."
            },
            "sla_profile": {
              "name": "SLA Profile",
              "type": "data",
              "description": "Defines objectives regarding the quality of service and performance, consisting of SLA Type, Service Level Targets, and applicable conditions."
            },
            "sla_profile_name": {
              "name": "SLA Profile Name",
              "type": "configuration",
              "description": "A unique identifier for the SLA Profile (e.g., Gold, VIP, Platinum)."
            },
            "sla_type": {
              "name": "SLA Type",
              "type": "configuration",
              "description": "Categorizes the SLA based on whether it defines service quality or performance availability."
            },
            "sla_profile_status": {
              "name": "SLA Profile Status",
              "type": "configuration",
              "description": "Indicates whether the SLA Profile is currently active or inactive."
            },
            "compliance_target": {
              "name": "Compliance Target",
              "type": "configuration",
              "description": "The percentage of performance required for the SLA to be considered met over a period."
            },
            "sla_profile_start_date": {
              "name": "SLA Profile Start Date",
              "type": "configuration",
              "description": "The date from which the SLA Profile becomes effective."
            },
            "sla_profile_end_date": {
              "name": "SLA Profile End Date",
              "type": "configuration",
              "description": "The date on which the SLA Profile ceases to be effective."
            },
            "sla_profile_description": {
              "name": "SLA Profile Description",
              "type": "configuration",
              "description": "Provides additional details about the SLA Profile."
            },
            "ticket": {
              "name": "Ticket",
              "type": "data",
              "description": "A record of an issue or request to which SLA profiles are applied."
            }
          }
        },
        "service_level_target_configuration": {
          "name": "Service Level Target Configuration",
          "description": "Within an SLA Profile, this feature allows defining specific response and resolution time targets based on ticket priority, customizable for both business and non-business hours. It leverages predefined metrics.",
          "category": "core",
          "entities": {
            "service_level_target": {
              "name": "Service Level Target",
              "type": "configuration",
              "description": "Commitments made by the service provider regarding availability, response, or resolution times."
            },
            "target_profile": {
              "name": "Target Profile",
              "type": "data",
              "description": "A named collection of service level metrics for response and resolution times."
            },
            "target_profile_name": {
              "name": "Target Profile Name",
              "type": "configuration",
              "description": "A unique identifier for the specific Target Profile."
            },
            "target_metric": {
              "name": "Target Metric",
              "type": "configuration",
              "description": "Specifies the type of service level metric, such as response time or resolution time, derived from the Metrics tab."
            },
            "response_metric": {
              "name": "Response Metric",
              "type": "configuration",
              "description": "Defines the time duration within which a customer can expect a response or acknowledgment for a ticket."
            },
            "resolution_metric": {
              "name": "Resolution Metric",
              "type": "configuration",
              "description": "Defines the time duration within which a customer can expect a resolution for a ticket."
            },
            "target_business_hours": {
              "name": "Target Business Hours",
              "type": "configuration",
              "description": "The defined time duration within which a response or resolution is expected during standard business hours, based on ticket priority."
            },
            "target_non-business_hours": {
              "name": "Target Non-Business Hours",
              "type": "configuration",
              "description": "The defined time duration within which a response or resolution is expected during non-business hours, based on ticket priority."
            },
            "ticket_priority": {
              "name": "Ticket Priority",
              "type": "data",
              "description": "The level of urgency or importance assigned to a ticket, which influences the target response and resolution times."
            }
          }
        },
        "business_hours_integration": {
          "name": "Business Hours Integration",
          "description": "Integrates with the system's general settings to allow the selection and application of predefined business hours profiles, ensuring accurate SLA target calculations based on working hours.",
          "category": "integration",
          "entities": {
            "business_hours_profile": {
              "name": "Business Hours Profile",
              "type": "data",
              "description": "A defined set of daily working hours for teams or departments within the organization, used in SLA calculations."
            },
            "infraon_configuration": {
              "name": "Infraon Configuration",
              "type": "resource",
              "description": "The system section where general settings, including Business Hours, are managed."
            },
            "general_settings": {
              "name": "General Settings",
              "type": "resource",
              "description": "A category within Infraon Configuration where various system-wide settings are managed."
            },
            "business_hours_configuration": {
              "name": "Business Hours Configuration",
              "type": "resource",
              "description": "The dedicated section within General Settings for defining and managing Business Hours Profiles."
            },
            "target_business_hours": {
              "name": "Target Business Hours",
              "type": "configuration",
              "description": "The time duration for response/resolution that applies specifically during the defined Business Hours."
            },
            "target_non-business_hours": {
              "name": "Target Non-Business Hours",
              "type": "configuration",
              "description": "The time duration for response/resolution that applies during periods outside of the defined Business Hours."
            }
          }
        },
        "sla_profile_management_(edit/delete)": {
          "name": "SLA Profile Management (Edit/Delete)",
          "description": "Provides functionality to modify or remove existing SLA profiles after their creation.",
          "category": "core",
          "entities": {
            "sla_profile": {
              "name": "SLA Profile",
              "type": "data",
              "description": "An existing SLA Profile that can be modified or removed from the system."
            },
            "edit_sla_profile": {
              "name": "Edit SLA Profile",
              "type": "action",
              "description": "The action of modifying the details or configurations of an existing SLA Profile."
            },
            "delete_sla_profile": {
              "name": "Delete SLA Profile",
              "type": "action",
              "description": "The action of permanently removing an existing SLA Profile from the system."
            }
          }
        }
      },
      "workflows": {
        "create_sla_metrics": {
          "name": "Create SLA Metrics",
          "description": "Users define and configure specific conditions (start, pause, resume, close, cancel) that govern the calculation and lifecycle of SLA timers for tickets within the system."
        },
        "create_sla_profiles": {
          "name": "Create SLA Profiles",
          "description": "Users define comprehensive SLA profiles, including basic details, service level targets (such as response and resolution times based on priority and business hours), and the conditions under which these profiles are applied to tickets."
        },
        "edit_sla_profiles": {
          "name": "Edit SLA Profiles",
          "description": "Users modify existing SLA profiles to update their details, service level targets, or applicability conditions."
        },
        "delete_sla_profiles": {
          "name": "Delete SLA Profiles",
          "description": "Users remove existing SLA profiles from the system."
        }
      }
    },
    "introduction": {
      "name": "Introduction",
      "description": "This introductory section outlines the document's purpose, provides disclaimers, and details confidentiality and access restrictions for the Infraon product guide.",
      "category": "unknown",
      "features": {},
      "workflows": {
        "module_customization": {
          "name": "Module Customization",
          "description": "Users configure and modify the settings and behavior of various modules within Infraon products, as detailed in the document."
        },
        "module_usage": {
          "name": "Module Usage",
          "description": "Users interact with and operate the functionalities of the modules available in Infraon products, guided by the information in the document."
        },
        "secure_document_access_management": {
          "name": "Secure Document Access Management",
          "description": "A system or administrative process to control and grant access to the sensitive information within this document, ensuring only authorized users with a need-to-know can view it."
        }
      }
    },
    "geomap": {
      "name": "Geomap",
      "description": "The Geomap module provides a geographic visualization of assets and their operational status, streamlining asset management and service delivery.",
      "category": "unknown",
      "features": {
        "asset_location_visualization": {
          "name": "Asset Location Visualization",
          "description": "Displays the geographical location of all assets on a map by associating them with GPS coordinates.",
          "category": "core",
          "entities": {
            "assets": {
              "name": "Assets",
              "type": "resource",
              "description": "Physical or logical items whose location is tracked and visualized on the Geomap."
            },
            "geographic_area": {
              "name": "Geographic Area",
              "type": "data",
              "description": "The spatial region displayed on the map, associated with GPS coordinates."
            },
            "gps_coordinates": {
              "name": "GPS Coordinates",
              "type": "data",
              "description": "Data points used to define the precise location of assets on the map."
            }
          }
        },
        "asset_condition_display": {
          "name": "Asset Condition Display",
          "description": "Provides real-time information about the working condition and status of assets directly on the map.",
          "category": "core",
          "entities": {
            "asset_working_condition": {
              "name": "Asset Working Condition",
              "type": "data",
              "description": "The operational status of an asset, providing information about its current state."
            },
            "maintenance_status_(asset)": {
              "name": "Maintenance Status (Asset)",
              "type": "data",
              "description": "The state indicating an asset is currently under maintenance."
            },
            "up_status_(asset)": {
              "name": "Up Status (Asset)",
              "type": "data",
              "description": "The state indicating an asset is operational and reachable."
            },
            "down_status_(asset)": {
              "name": "Down Status (Asset)",
              "type": "data",
              "description": "The state indicating an asset is not reachable."
            },
            "disabled_status_(asset)": {
              "name": "Disabled Status (Asset)",
              "type": "data",
              "description": "The state indicating an asset is intentionally inactive or disabled."
            },
            "unknown_status_(asset)": {
              "name": "Unknown Status (Asset)",
              "type": "data",
              "description": "The state indicating an asset's operational status is not known."
            },
            "geomap_pins": {
              "name": "Geomap Pins",
              "type": "resource",
              "description": "Visual markers on the map representing assets or locations, whose color indicates status."
            },
            "pin_colors": {
              "name": "Pin Colors",
              "type": "configuration",
              "description": "Visual attributes of Geomap pins used to convey the status of associated assets or nodes."
            }
          }
        },
        "location_details_on_hover": {
          "name": "Location Details on Hover",
          "description": "Shows detailed information (e.g., State, District, Total Sites, Device Counts, Maintenance status) when the mouse pointer hovers over a Geomap location.",
          "category": "core",
          "entities": {
            "mouse_pointer": {
              "name": "Mouse Pointer",
              "type": "resource",
              "description": "The on-screen cursor used by the user to interact with Geomap locations."
            },
            "geomap_location": {
              "name": "Geomap Location",
              "type": "resource",
              "description": "A specific point or area on the Geomap over which the mouse pointer can hover."
            },
            "state_(geographic)": {
              "name": "State (Geographic)",
              "type": "data",
              "description": "The name of the state or territory associated with a Geomap location."
            },
            "district_(geographic)": {
              "name": "District (Geographic)",
              "type": "data",
              "description": "The name of the district associated with a Geomap location."
            },
            "total_sites_count": {
              "name": "Total Sites Count",
              "type": "data",
              "description": "The total number of sites with assets within a specific state or territory."
            },
            "total_devices_count": {
              "name": "Total Devices Count",
              "type": "data",
              "description": "The total number of devices within a specific state or territory."
            },
            "maintenance_devices_count": {
              "name": "Maintenance Devices Count",
              "type": "data",
              "description": "The number of assets that are in maintenance condition within a location."
            },
            "up_devices_count": {
              "name": "Up Devices Count",
              "type": "data",
              "description": "The number of assets that are up and in running condition within a location."
            },
            "down_devices_count": {
              "name": "Down Devices Count",
              "type": "data",
              "description": "The number of assets that are not reachable within a location."
            },
            "disabled_devices_count": {
              "name": "Disabled Devices Count",
              "type": "data",
              "description": "The number of assets that are in 'Disabled' status within a location."
            },
            "unknown_devices_count": {
              "name": "Unknown Devices Count",
              "type": "data",
              "description": "The number of assets whose status is not known within a location."
            }
          }
        },
        "color-coded_status_indicators": {
          "name": "Color-Coded Status Indicators",
          "description": "Uses distinct colors for Geomap pins (Green, Orange, Gray, Red) to visually represent the operational status of nodes/assets.",
          "category": "core",
          "entities": {
            "geomap_pins": {
              "name": "Geomap Pins",
              "type": "resource",
              "description": "Visual markers on the map that display different colors based on the status of associated nodes."
            },
            "green_pin_color": {
              "name": "Green Pin Color",
              "type": "configuration",
              "description": "A pin color indicating that all associated nodes are up and running."
            },
            "orange_pin_color": {
              "name": "Orange Pin Color",
              "type": "configuration",
              "description": "A pin color indicating that one or more associated nodes are in 'Disabled' status."
            },
            "gray_pin_color": {
              "name": "Gray Pin Color",
              "type": "configuration",
              "description": "A pin color indicating that all associated nodes are in 'Disabled' status."
            },
            "red_pin_color": {
              "name": "Red Pin Color",
              "type": "configuration",
              "description": "A pin color indicating that all associated nodes are down."
            },
            "node_status": {
              "name": "Node Status",
              "type": "data",
              "description": "The operational state of a node, which determines the color of its corresponding Geomap pin."
            }
          }
        },
        "google_maps_integration": {
          "name": "Google Maps Integration",
          "description": "Supports various Google Maps view types including Roadmap, Terrain, Altered Roadmap, Satellite, Terrain Only, and Hybrid.",
          "category": "integration",
          "entities": {
            "google_roadmap_view": {
              "name": "Google Roadmap View",
              "type": "configuration",
              "description": "A map display type showing roads and labels, powered by Google Maps."
            },
            "google_terrain_view": {
              "name": "Google Terrain View",
              "type": "configuration",
              "description": "A map display type showing geographical features like mountains and valleys, powered by Google Maps."
            },
            "google_altered_roadmap_view": {
              "name": "Google Altered Roadmap View",
              "type": "configuration",
              "description": "A specific variation of the Google Roadmap view."
            },
            "google_satellite_view": {
              "name": "Google Satellite View",
              "type": "configuration",
              "description": "A map display type showing satellite imagery, powered by Google Maps."
            },
            "google_terrain_only_view": {
              "name": "Google Terrain Only View",
              "type": "configuration",
              "description": "A map display type focusing solely on terrain features, powered by Google Maps."
            },
            "google_hybrid_view": {
              "name": "Google Hybrid View",
              "type": "configuration",
              "description": "A map display type combining satellite imagery with road labels, powered by Google Maps."
            }
          }
        },
        "bing_maps_integration": {
          "name": "Bing Maps Integration",
          "description": "Supports various Bing Maps view types including Road, Aerial, Aerial with Labels, and Road Dark.",
          "category": "integration",
          "entities": {
            "bing_road_view": {
              "name": "Bing Road View",
              "type": "configuration",
              "description": "A map display type showing roads and labels, powered by Bing Maps."
            },
            "bing_aerial_view": {
              "name": "Bing Aerial View",
              "type": "configuration",
              "description": "A map display type showing aerial imagery, powered by Bing Maps."
            },
            "bing_aerial_with_labels_view": {
              "name": "Bing Aerial with Labels View",
              "type": "configuration",
              "description": "A map display type combining Bing aerial imagery with labels."
            },
            "bing_road_dark_view": {
              "name": "Bing Road Dark View",
              "type": "configuration",
              "description": "A map display type showing a dark-themed road map, powered by Bing Maps."
            }
          }
        },
        "osm_(openstreetmap)_integration": {
          "name": "OSM (OpenStreetMap) Integration",
          "description": "Supports OpenStreetMap view type.",
          "category": "integration",
          "entities": {
            "osm_view": {
              "name": "OSM View",
              "type": "configuration",
              "description": "A map display type based on OpenStreetMap data."
            }
          }
        },
        "offline_map_support": {
          "name": "Offline Map Support",
          "description": "Allows viewing maps in an offline mode.",
          "category": "extended",
          "entities": {
            "offline_map_view": {
              "name": "Offline Map View",
              "type": "configuration",
              "description": "A map display type that can be viewed without an active internet connection."
            }
          }
        },
        "asset_sorting_options": {
          "name": "Asset Sorting Options",
          "description": "Enables users to sort displayed assets or locations based on criteria such as City, District, State, or Country.",
          "category": "extended",
          "entities": {
            "city_sort_option": {
              "name": "City Sort Option",
              "type": "configuration",
              "description": "A criterion to arrange assets on the map by their associated city."
            },
            "district_sort_option": {
              "name": "District Sort Option",
              "type": "configuration",
              "description": "A criterion to arrange assets on the map by their associated district."
            },
            "state_sort_option": {
              "name": "State Sort Option",
              "type": "configuration",
              "description": "A criterion to arrange assets on the map by their associated state."
            },
            "country_sort_option": {
              "name": "Country Sort Option",
              "type": "configuration",
              "description": "A criterion to arrange assets on the map by their associated country."
            }
          }
        },
        "save_map_view": {
          "name": "Save Map View",
          "description": "Allows users to save the current configuration or state of the map view.",
          "category": "extended",
          "entities": {
            "save_button": {
              "name": "Save Button",
              "type": "action",
              "description": "A user interface element that, when clicked, saves the current map view."
            },
            "current_map_view": {
              "name": "Current Map View",
              "type": "data",
              "description": "The present state and configuration of the map display that can be saved."
            },
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "The location or context where the saved map view is stored."
            }
          }
        },
        "rescan_map_view": {
          "name": "Rescan Map View",
          "description": "Provides functionality to refresh or rescan the map view for updated information.",
          "category": "extended",
          "entities": {
            "rescan_button": {
              "name": "Rescan Button",
              "type": "action",
              "description": "A user interface element that, when clicked, initiates a rescan of the map view."
            },
            "map_view": {
              "name": "Map View",
              "type": "resource",
              "description": "The visual representation of the map that is updated by the rescan action."
            }
          }
        },
        "full-screen_map_view": {
          "name": "Full-Screen Map View",
          "description": "Offers an option to expand the map to full-screen for a wider and more immersive viewing experience.",
          "category": "extended",
          "entities": {
            "full-screen_button": {
              "name": "Full-Screen Button",
              "type": "action",
              "description": "A user interface element that, when clicked, expands the map to full-screen for a wider view."
            },
            "map_display": {
              "name": "Map Display",
              "type": "resource",
              "description": "The visual representation of the Geomap that can be expanded."
            },
            "full-screen_mode": {
              "name": "Full-Screen Mode",
              "type": "configuration",
              "description": "A display state where the map occupies the entire screen for an enhanced viewing experience."
            }
          }
        },
        "technician_assignment_facilitation": {
          "name": "Technician Assignment Facilitation",
          "description": "Aids in efficient technician assignment by matching technician locations with asset locations for quick service resolution.",
          "category": "extended",
          "entities": {
            "technician_location": {
              "name": "Technician Location",
              "type": "data",
              "description": "The geographical position of a service technician, used for matching with asset locations."
            },
            "asset_location": {
              "name": "Asset Location",
              "type": "data",
              "description": "The geographical position of an asset, used for matching with technician locations."
            },
            "technician_assignment_process": {
              "name": "Technician Assignment Process",
              "type": "action",
              "description": "The workflow for allocating technicians to service requests based on location matching."
            }
          }
        },
        "asset_management_support": {
          "name": "Asset Management Support",
          "description": "Simplifies overall asset management, helps in identifying opportunities, and facilitates prompt service delivery.",
          "category": "extended",
          "entities": {
            "assets": {
              "name": "Assets",
              "type": "resource",
              "description": "The items that are managed within the system, whose visualization aids management."
            },
            "asset_management_process": {
              "name": "Asset Management Process",
              "type": "action",
              "description": "The overall process of overseeing and controlling assets, made easier by Geomap."
            },
            "opportunities_(business)": {
              "name": "Opportunities (Business)",
              "type": "data",
              "description": "Potential areas for improvement or new services, identified through Geomap's insights."
            },
            "quick_service_provision": {
              "name": "Quick Service Provision",
              "type": "action",
              "description": "The act of delivering prompt and efficient service, facilitated by Geomap's features."
            }
          }
        }
      },
      "workflows": {
        "asset_location_visualization": {
          "name": "Asset Location Visualization",
          "description": "Displaying the geographical position of all assets on a map by associating them with GPS coordinates."
        },
        "asset_status_monitoring": {
          "name": "Asset Status Monitoring",
          "description": "Visualizing the operational condition and status (e.g., up, down, disabled, maintenance) of assets directly on the map, often indicated by color-coded pins."
        },
        "service_dispatch_optimization": {
          "name": "Service Dispatch Optimization",
          "description": "Facilitating efficient technician assignment and quick service resolution by comparing technician and asset locations."
        },
        "map_view_configuration_&_management": {
          "name": "Map View Configuration & Management",
          "description": "Allowing users to save, refresh, change display modes (e.g., full-screen), and select different map types (e.g., OSM, Google, Bing) for the current map view."
        },
        "detailed_asset_information_access": {
          "name": "Detailed Asset Information Access",
          "description": "Providing on-demand access to comprehensive details about assets and their associated geographic areas (e.g., state, district, device counts, status breakdowns) by interacting with map locations."
        },
        "geographic_asset_grouping_&_filtering": {
          "name": "Geographic Asset Grouping & Filtering",
          "description": "Enabling the organization and display of assets on the map based on geographic criteria such as city, district, state, or country."
        }
      }
    },
    "topology": {
      "name": "Topology",
      "description": "The Topology module visually displays and allows management of the physical and logical arrangement of network devices and their connections, including status, detailed information, and configuration.",
      "category": "unknown",
      "features": {
        "topology_view_display": {
          "name": "Topology View Display",
          "description": "Displays the complete physical or logical arrangement of connected network devices (nodes, devices, and connections).",
          "category": "core",
          "entities": {
            "topology_view": {
              "name": "Topology View",
              "type": "resource",
              "description": "The visual representation of the network's arrangement."
            },
            "nodes": {
              "name": "Nodes",
              "type": "resource",
              "description": "Individual devices or points within the network."
            },
            "devices": {
              "name": "Devices",
              "type": "resource",
              "description": "Hardware components connected in the network."
            },
            "connections": {
              "name": "Connections",
              "type": "resource",
              "description": "Links or relationships between nodes/devices."
            },
            "network": {
              "name": "Network",
              "type": "resource",
              "description": "The complete system of interconnected devices."
            },
            "physical_arrangement": {
              "name": "Physical arrangement",
              "type": "data",
              "description": "How network components are physically laid out."
            },
            "logical_arrangement": {
              "name": "Logical arrangement",
              "type": "data",
              "description": "How network components are logically structured."
            }
          }
        },
        "connection_status_visualization_(color-coded)": {
          "name": "Connection Status Visualization (Color-coded)",
          "description": "Automatically changes connection colors based on faults or thresholds to indicate their status.",
          "category": "core",
          "entities": {
            "connections": {
              "name": "Connections",
              "type": "resource",
              "description": "The links between nodes whose colors change."
            },
            "faults": {
              "name": "Faults",
              "type": "data",
              "description": "Network issues that trigger connection color changes."
            },
            "thresholds": {
              "name": "Thresholds",
              "type": "data",
              "description": "Predefined limits that, when crossed, trigger connection color changes."
            },
            "colors": {
              "name": "Colors",
              "type": "data",
              "description": "Visual indicators used to represent connection status."
            }
          }
        },
        "node_inventory_details": {
          "name": "Node Inventory Details",
          "description": "Displays detailed inventory information (e.g., Host Name, IP Address, Make, Model, Device Type, Firmware Version, Location) when a node is clicked.",
          "category": "core",
          "entities": {
            "node": {
              "name": "Node",
              "type": "resource",
              "description": "A specific device or point in the network that can be selected."
            },
            "inventory_details": {
              "name": "Inventory details",
              "type": "data",
              "description": "Comprehensive information about a selected node."
            },
            "host_name": {
              "name": "Host Name",
              "type": "data",
              "description": "The network name assigned to the node."
            },
            "ip_address": {
              "name": "IP Address",
              "type": "data",
              "description": "The unique numerical label assigned to the node."
            },
            "make": {
              "name": "Make",
              "type": "data",
              "description": "The manufacturer of the node device."
            },
            "model": {
              "name": "Model",
              "type": "data",
              "description": "The specific model of the node device."
            },
            "device_type": {
              "name": "Device Type",
              "type": "data",
              "description": "The category or function of the node device (e.g., SDH MUX, Router)."
            },
            "ems_name": {
              "name": "EMS Name",
              "type": "data",
              "description": "The name of the Element Management System associated with the node."
            },
            "firmware_version": {
              "name": "Firmware Version",
              "type": "data",
              "description": "The version of the embedded software running on the node."
            },
            "region": {
              "name": "Region",
              "type": "data",
              "description": "The geographical region where the node is located."
            },
            "state": {
              "name": "State",
              "type": "data",
              "description": "The administrative state where the node is located."
            },
            "city": {
              "name": "City",
              "type": "data",
              "description": "The city where the node is located."
            },
            "location": {
              "name": "Location",
              "type": "data",
              "description": "The specific physical location details of the node."
            }
          }
        },
        "node_context_menu_(right-click_actions)": {
          "name": "Node Context Menu (Right-Click Actions)",
          "description": "Provides quick access to Device View, Active Events, and Services upon right-clicking a node.",
          "category": "core",
          "entities": {
            "node": {
              "name": "Node",
              "type": "resource",
              "description": "A specific device or point in the network that can be right-clicked."
            },
            "device_view": {
              "name": "Device View",
              "type": "action",
              "description": "A specific view providing detailed information about the device."
            },
            "active_events": {
              "name": "Active Events",
              "type": "action",
              "description": "A link or view to current active events related to the node."
            },
            "services": {
              "name": "Services",
              "type": "action",
              "description": "A link or view to services associated with the node."
            }
          }
        },
        "node_status_visualization_(color-coded)": {
          "name": "Node Status Visualization (Color-coded)",
          "description": "Indicates device status and severity using a color spectrum (Blue to Dark Red), with specific colors for Up, Down, and Disabled states.",
          "category": "core",
          "entities": {
            "node": {
              "name": "Node",
              "type": "resource",
              "description": "The device whose color indicates its operational status."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The operational state of the device."
            },
            "severity": {
              "name": "Severity",
              "type": "data",
              "description": "The level of impact or criticality of the operational status."
            },
            "colors": {
              "name": "Colors",
              "type": "data",
              "description": "A spectrum of colors used to represent different severities of device status."
            },
            "up_status": {
              "name": "Up status",
              "type": "data",
              "description": "Indicates the device is operational (represented by Green)."
            },
            "down_status": {
              "name": "Down status",
              "type": "data",
              "description": "Indicates the device is not operational (represented by Red)."
            },
            "disabled_status": {
              "name": "Disabled status",
              "type": "data",
              "description": "Indicates the device is intentionally inactive (represented by Grey)."
            }
          }
        },
        "edge/connection_details": {
          "name": "Edge/Connection Details",
          "description": "Displays details (e.g., Description, Source/Destination IP/Device/Port, Layer Rate) and current performance parameters when an edge is clicked.",
          "category": "core",
          "entities": {
            "edge": {
              "name": "Edge",
              "type": "resource",
              "description": "A connection or link between two nodes in the topology."
            },
            "connection_details": {
              "name": "Connection details",
              "type": "data",
              "description": "Specific information about the selected network connection."
            },
            "performance_parameters": {
              "name": "Performance parameters",
              "type": "data",
              "description": "Metrics indicating the current performance of the connection."
            },
            "description": {
              "name": "Description",
              "type": "data",
              "description": "A brief textual explanation of the connection."
            },
            "source_ip": {
              "name": "Source IP",
              "type": "data",
              "description": "The IP address of the originating node of the connection."
            },
            "source_device": {
              "name": "Source Device",
              "type": "data",
              "description": "The name or identifier of the originating device of the connection."
            },
            "source_port": {
              "name": "Source Port",
              "type": "data",
              "description": "The specific port on the source device used for the connection."
            },
            "destination_ip": {
              "name": "Destination Ip",
              "type": "data",
              "description": "The IP address of the terminating node of the connection."
            },
            "destination_device": {
              "name": "Destination Device",
              "type": "data",
              "description": "The name or identifier of the terminating device of the connection."
            },
            "destination_port": {
              "name": "Destination Port",
              "type": "data",
              "description": "The specific port on the destination device used for the connection."
            },
            "layer_rate": {
              "name": "Layer Rate",
              "type": "data",
              "description": "The OSI layer and data rate of the connection."
            },
            "active_events": {
              "name": "Active Events",
              "type": "action",
              "description": "A clickable link to view active events related to the connection."
            },
            "services": {
              "name": "Services",
              "type": "action",
              "description": "A clickable link to view services related to the connection."
            }
          }
        },
        "active_events_integration_(from_edge)": {
          "name": "Active Events Integration (from Edge)",
          "description": "Provides a clickable link within edge details to redirect to the Active Events page.",
          "category": "integration",
          "entities": {
            "active_events_page": {
              "name": "Active Events page",
              "type": "resource",
              "description": "A dedicated page displaying active events."
            },
            "edge": {
              "name": "Edge",
              "type": "resource",
              "description": "The connection element from which the Active Events page can be accessed."
            }
          }
        },
        "services_integration_(from_edge)": {
          "name": "Services Integration (from Edge)",
          "description": "Provides a clickable link within edge details to redirect to the Services page.",
          "category": "integration",
          "entities": {
            "services_page": {
              "name": "Services page",
              "type": "resource",
              "description": "A dedicated page displaying services."
            },
            "edge": {
              "name": "Edge",
              "type": "resource",
              "description": "The connection element from which the Services page can be accessed."
            }
          }
        },
        "topology_view_filtering_(city/condition)": {
          "name": "Topology View Filtering (City/Condition)",
          "description": "Allows filtering the displayed topology view based on City and a specified Condition.",
          "category": "extended",
          "entities": {
            "filter": {
              "name": "Filter",
              "type": "action",
              "description": "The action of narrowing down the displayed topology view."
            },
            "city": {
              "name": "City",
              "type": "data",
              "description": "A criterion for filtering the topology view based on geographical location."
            },
            "condition": {
              "name": "Condition",
              "type": "data",
              "description": "A general criterion for filtering the topology view."
            },
            "drop-down_box": {
              "name": "Drop-down box",
              "type": "resource",
              "description": "A UI element used to select filter criteria."
            }
          }
        },
        "node_location_&_neighbor_display": {
          "name": "Node Location & Neighbor Display",
          "description": "Locates a specific node and displays its neighbors up to a selected number of hops.",
          "category": "extended",
          "entities": {
            "locate_node": {
              "name": "Locate Node",
              "type": "action",
              "description": "The action to find and highlight a specific node in the topology."
            },
            "node": {
              "name": "Node",
              "type": "resource",
              "description": "The specific device or point to be located."
            },
            "drop-down_menu": {
              "name": "Drop-down menu",
              "type": "resource",
              "description": "A UI element used to select the node to locate."
            },
            "no._of_hops": {
              "name": "No. of hops",
              "type": "configuration",
              "description": "A parameter defining the number of network segments or devices away from the located node to display neighbors."
            },
            "neighbors": {
              "name": "Neighbors",
              "type": "data",
              "description": "The nodes directly or indirectly connected to the located node, displayed based on hop count."
            }
          }
        },
        "profile_location": {
          "name": "Profile Location",
          "description": "Allows locating a specific topology profile from a drop-down box.",
          "category": "extended",
          "entities": {
            "locate_a_profile": {
              "name": "Locate a Profile",
              "type": "action",
              "description": "The action to find and display a specific saved topology profile."
            },
            "profile": {
              "name": "Profile",
              "type": "resource",
              "description": "A saved configuration or view of the topology."
            },
            "drop-down_box": {
              "name": "Drop-down box",
              "type": "resource",
              "description": "A UI element used to select the profile to locate."
            }
          }
        },
        "vendor_location": {
          "name": "Vendor Location",
          "description": "Allows locating devices from a specific vendor using a drop-down box.",
          "category": "extended",
          "entities": {
            "locate_a_vendor": {
              "name": "Locate a Vendor",
              "type": "action",
              "description": "The action to find and display devices from a specific vendor."
            },
            "vendor": {
              "name": "Vendor",
              "type": "resource",
              "description": "The manufacturer of network devices."
            },
            "drop-down_box": {
              "name": "Drop-down box",
              "type": "resource",
              "description": "A UI element used to select the vendor to locate."
            }
          }
        },
        "auto_reload_control": {
          "name": "Auto Reload Control",
          "description": "Enables or disables the automatic reloading of the topology view, which defaults to every 60 seconds.",
          "category": "extended",
          "entities": {
            "stop_auto_reload": {
              "name": "Stop Auto Reload",
              "type": "action",
              "description": "The action to disable the automatic refreshing of the topology view."
            },
            "topology_view": {
              "name": "Topology view",
              "type": "resource",
              "description": "The graphical representation of the network that automatically refreshes."
            },
            "interval_of_60_seconds": {
              "name": "Interval of 60 seconds",
              "type": "configuration",
              "description": "The default frequency at which the topology view reloads."
            }
          }
        },
        "export_topology_view_(pdf)": {
          "name": "Export Topology View (PDF)",
          "description": "Exports the current visual topology view as a PDF document.",
          "category": "extended",
          "entities": {
            "export": {
              "name": "Export",
              "type": "action",
              "description": "The action to save the current topology view in a different format."
            },
            "pdf": {
              "name": "PDF",
              "type": "configuration",
              "description": "The Portable Document Format, chosen for exporting the topology view."
            },
            "current_topology_view": {
              "name": "Current topology view",
              "type": "data",
              "description": "The specific state of the topology display at the time of export."
            }
          }
        },
        "topology_view_editing_(drag_&_save)": {
          "name": "Topology View Editing (Drag & Save)",
          "description": "Allows users to drag nodes to adjust the visual layout of the topology view and save new profiles or views.",
          "category": "core",
          "entities": {
            "edit": {
              "name": "Edit",
              "type": "action",
              "description": "The action to modify and save changes to the topology view."
            },
            "new_topology_profile": {
              "name": "New topology profile",
              "type": "configuration",
              "description": "A saved set of configurations or a specific arrangement of the topology."
            },
            "new_topology_view": {
              "name": "New topology view",
              "type": "configuration",
              "description": "A newly arranged or customized display of the network topology."
            },
            "nodes": {
              "name": "Nodes",
              "type": "resource",
              "description": "Individual devices in the topology that can be repositioned by dragging."
            },
            "topology_diagram": {
              "name": "Topology diagram",
              "type": "resource",
              "description": "The visual representation of the network that can be adjusted."
            }
          }
        },
        "navigation_(arrow_keys)": {
          "name": "Navigation (Arrow Keys)",
          "description": "Provides arrow key icons for navigating through the topology diagram.",
          "category": "extended",
          "entities": {
            "arrows_key": {
              "name": "Arrows Key",
              "type": "action",
              "description": "Keyboard input used to move around the topology diagram."
            },
            "icons": {
              "name": "Icons",
              "type": "resource",
              "description": "Graphical representations of the navigation controls."
            },
            "topology_diagram": {
              "name": "Topology diagram",
              "type": "resource",
              "description": "The visual representation of the network that can be navigated."
            }
          }
        },
        "zoom_control": {
          "name": "Zoom Control",
          "description": "Provides zoom key icons for zooming in/out of the topology diagram.",
          "category": "extended",
          "entities": {
            "zoom_key": {
              "name": "Zoom Key",
              "type": "action",
              "description": "Input control used to adjust the magnification level of the topology diagram."
            },
            "icons": {
              "name": "Icons",
              "type": "resource",
              "description": "Graphical representations of the zoom controls."
            },
            "topology_diagram": {
              "name": "Topology diagram",
              "type": "resource",
              "description": "The visual representation of the network that can be zoomed in or out."
            }
          }
        },
        "bandwidth_visualization_(interface_thickness)": {
          "name": "Bandwidth Visualization (Interface Thickness)",
          "description": "Visualizes offered bandwidth by varying the thickness of the interface lines.",
          "category": "core",
          "entities": {
            "interface_thickness": {
              "name": "Interface thickness",
              "type": "data",
              "description": "A visual attribute of connections indicating bandwidth."
            },
            "offered_bandwidth": {
              "name": "Offered Bandwidth",
              "type": "data",
              "description": "The capacity of data transfer available on a network interface."
            }
          }
        },
        "topology_management_filtering_(field/condition)": {
          "name": "Topology Management Filtering (Field/Condition)",
          "description": "Allows filtering lists of topologies based on a specified Field and Condition.",
          "category": "extended",
          "entities": {
            "filter": {
              "name": "Filter",
              "type": "action",
              "description": "The action of applying criteria to narrow down displayed topologies."
            },
            "field": {
              "name": "Field",
              "type": "data",
              "description": "A specific data attribute used as a criterion for filtering."
            },
            "condition": {
              "name": "Condition",
              "type": "data",
              "description": "A logical expression or value used with a field for filtering."
            },
            "drop-down_box": {
              "name": "Drop-down box",
              "type": "resource",
              "description": "A UI element for selecting filter fields and conditions."
            }
          }
        },
        "add_topology_(guided/manual)": {
          "name": "Add Topology (Guided/Manual)",
          "description": "Provides options to add new topologies via a guided process or by manually importing data from a CSV file.",
          "category": "core",
          "entities": {
            "add": {
              "name": "Add",
              "type": "action",
              "description": "The action to create a new topology."
            },
            "new_topologies": {
              "name": "New topologies",
              "type": "configuration",
              "description": "The resulting topology configurations that are created."
            },
            "guided_'add_topology'_option": {
              "name": "Guided 'Add topology' option",
              "type": "action",
              "description": "A wizard-like process for creating new topologies."
            },
            "manually_import_data": {
              "name": "Manually import data",
              "type": "action",
              "description": "The process of adding topology data from an external file."
            },
            "csv_file": {
              "name": "CSV file",
              "type": "data",
              "description": "A Comma Separated Values file format used for importing topology data."
            }
          }
        },
        "export_topology_configuration_(csv/xls)": {
          "name": "Export Topology Configuration (CSV/XLS)",
          "description": "Exports topology configuration data in CSV or Excel-compatible XLS format.",
          "category": "extended",
          "entities": {
            "export": {
              "name": "Export",
              "type": "action",
              "description": "The action to save topology configuration data in a specified format."
            },
            "export_format": {
              "name": "Export format",
              "type": "configuration",
              "description": "The choice of file type for the exported configuration."
            },
            "csv_file": {
              "name": "CSV file",
              "type": "configuration",
              "description": "A Comma Separated Values file format for exporting topology configuration."
            },
            "excel-compatible_xls_file": {
              "name": "Excel-compatible XLS file",
              "type": "configuration",
              "description": "An Excel spreadsheet file format for exporting topology configuration."
            },
            "configuration": {
              "name": "Configuration",
              "type": "data",
              "description": "The settings and data defining a topology."
            }
          }
        },
        "topology_configuration_editing": {
          "name": "Topology Configuration Editing",
          "description": "Allows editing the underlying configuration details of an existing topology.",
          "category": "core",
          "entities": {
            "edit": {
              "name": "Edit",
              "type": "action",
              "description": "The action to modify an existing topology's configuration."
            },
            "changes": {
              "name": "Changes",
              "type": "data",
              "description": "Modifications made to the topology's configuration."
            },
            "topology": {
              "name": "Topology",
              "type": "configuration",
              "description": "The network arrangement whose configuration is being modified."
            }
          }
        },
        "trace_test": {
          "name": "Trace Test",
          "description": "Performs diagnostic trace tests between two nodes using specified link details to validate relationships.",
          "category": "extended",
          "entities": {
            "trace_test": {
              "name": "Trace Test",
              "type": "action",
              "description": "A diagnostic action to validate relationships and improve assertion capabilities between nodes."
            },
            "details": {
              "name": "Details",
              "type": "data",
              "description": "Input parameters required for performing the trace test."
            },
            "link_name": {
              "name": "Link Name",
              "type": "data",
              "description": "The identifier for the network link being tested."
            },
            "description": {
              "name": "Description",
              "type": "data",
              "description": "A brief explanation of the trace test or link."
            },
            "source_node": {
              "name": "Source Node",
              "type": "data",
              "description": "The originating device for the trace test."
            },
            "source_port": {
              "name": "Source Port",
              "type": "data",
              "description": "The specific port on the source node for the trace test."
            },
            "destination_node": {
              "name": "Destination Node",
              "type": "data",
              "description": "The terminating device for the trace test."
            },
            "destination_port": {
              "name": "Destination Port",
              "type": "data",
              "description": "The specific port on the destination node for the trace test."
            },
            "layer_rate": {
              "name": "Layer Rate",
              "type": "data",
              "description": "The OSI layer and data rate relevant to the trace test."
            },
            "direction": {
              "name": "Direction",
              "type": "data",
              "description": "The flow direction of the connection (Bi-directional/Unidirectional)."
            },
            "ring_name": {
              "name": "Ring Name",
              "type": "data",
              "description": "The name of the network ring associated with the connection."
            },
            "trace_data": {
              "name": "Trace data",
              "type": "data",
              "description": "Information collected during the trace test used for analysis."
            },
            "assertion_capabilities": {
              "name": "Assertion capabilities",
              "type": "data",
              "description": "The system's ability to confirm or verify network conditions."
            },
            "relationships_between_two_nodes": {
              "name": "Relationships between two nodes",
              "type": "data",
              "description": "The logical or physical connections and interactions between two devices."
            }
          }
        },
        "guided_topological_link_addition": {
          "name": "Guided Topological Link Addition",
          "description": "Guides the user through adding a new topological link by specifying various connection parameters (e.g., Link Name, Source/Destination Node/Port, Layer Rate).",
          "category": "core",
          "entities": {
            "add": {
              "name": "Add",
              "type": "action",
              "description": "The action to create a new topological link."
            },
            "topological_link": {
              "name": "Topological Link",
              "type": "configuration",
              "description": "A connection between nodes in the topology, defined by specific parameters."
            },
            "link_name": {
              "name": "Link Name",
              "type": "data",
              "description": "A unique identifier for the new topological link."
            },
            "description": {
              "name": "Description",
              "type": "data",
              "description": "A brief explanation of the topological link."
            },
            "source_node": {
              "name": "Source Node",
              "type": "data",
              "description": "The originating device of the link, selected from a drop-down."
            },
            "source_port": {
              "name": "Source Port",
              "type": "data",
              "description": "The specific port on the source node for the link, selected from a drop-down."
            },
            "destination_node": {
              "name": "Destination Node",
              "type": "data",
              "description": "The terminating device of the link, selected from a drop-down."
            },
            "destination_port": {
              "name": "Destination Port",
              "type": "data",
              "description": "The specific port on the destination node for the link, selected from a drop-down."
            },
            "layer_rate": {
              "name": "Layer Rate",
              "type": "data",
              "description": "The OSI layer and data rate for the link, selected from a drop-down."
            },
            "direction": {
              "name": "Direction",
              "type": "data",
              "description": "The flow direction of the link (Bi-directional/Unidirectional)."
            },
            "ring_name": {
              "name": "Ring Name",
              "type": "data",
              "description": "The name of the network ring to which the link belongs, selected from a drop-down."
            }
          }
        },
        "topological_link_import_(csv)": {
          "name": "Topological Link Import (CSV)",
          "description": "Allows bulk import of topological link data from a CSV file, including template download, upload, validation, and import of valid records.",
          "category": "core",
          "entities": {
            "add": {
              "name": "Add",
              "type": "action",
              "description": "The action to add topological links by importing data from a CSV file."
            },
            "csv_file": {
              "name": "CSV file",
              "type": "data",
              "description": "A Comma Separated Values file containing topological link details for import."
            },
            "details_required": {
              "name": "Details required",
              "type": "data",
              "description": "The specific data fields expected within the CSV file for link configuration."
            },
            "selected_column": {
              "name": "Selected column",
              "type": "data",
              "description": "A column chosen for matching during the CSV import process."
            },
            "valid_records": {
              "name": "Valid records",
              "type": "data",
              "description": "Rows from the CSV file that pass validation checks and are processed."
            }
          }
        },
        "export_configuration_(topological_link_page)": {
          "name": "Export Configuration (Topological Link Page)",
          "description": "Exports the configuration data specifically from the Topological Link management page.",
          "category": "extended",
          "entities": {
            "export_icon": {
              "name": "Export icon",
              "type": "action",
              "description": "A graphical user interface element that triggers the export action."
            },
            "configuration": {
              "name": "Configuration",
              "type": "data",
              "description": "The settings and data related to topological links that can be exported."
            },
            "topological_link_page": {
              "name": "Topological Link page",
              "type": "resource",
              "description": "The specific section of the user interface where topological links are managed and exported."
            }
          }
        }
      },
      "workflows": {
        "view_network_topology": {
          "name": "View Network Topology",
          "description": "Displays the complete physical or logical arrangement of network nodes, devices, and connections, with visual indicators for status (colors) and bandwidth (thickness)."
        },
        "inspect_topology_elements": {
          "name": "Inspect Topology Elements",
          "description": "Allows users to click on nodes or connections to view detailed information such as inventory, device details, performance parameters, and associated active events or services."
        },
        "navigate_topology_view": {
          "name": "Navigate Topology View",
          "description": "Provides tools (e.g., arrow keys, zoom) to pan, zoom, and explore the visual representation of the network topology."
        },
        "filter_topology_display": {
          "name": "Filter Topology Display",
          "description": "Enables users to apply various criteria (e.g., city, condition, profile, vendor) to filter or highlight specific elements within the displayed topology view."
        },
        "locate_node_in_topology": {
          "name": "Locate Node in Topology",
          "description": "Allows users to quickly find a specific node and display its neighbors up to a specified number of hops within the topology view."
        },
        "manage_topology_view_layout": {
          "name": "Manage Topology View Layout",
          "description": "Provides functionality to adjust the visual arrangement of nodes by dragging them and to save these customized layouts as new topology profiles or views."
        },
        "control_topology_view_refresh": {
          "name": "Control Topology View Refresh",
          "description": "Allows users to stop or resume the automatic reloading of the topology view at predefined intervals."
        },
        "export_topology_view_(visual)": {
          "name": "Export Topology View (Visual)",
          "description": "Generates a PDF document of the currently displayed network topology view."
        },
        "add_new_topology": {
          "name": "Add New Topology",
          "description": "Facilitates the creation of new network topologies either through a guided manual entry form or by importing configuration data from a CSV file."
        },
        "edit_existing_topology": {
          "name": "Edit Existing Topology",
          "description": "Enables users to modify the details and configurations of previously defined network topologies."
        },
        "export_topology_data_(structured)": {
          "name": "Export Topology Data (Structured)",
          "description": "Allows users to download structured configuration data of topologies in formats such as CSV or Excel (XLS)."
        },
        "perform_topology_trace_test": {
          "name": "Perform Topology Trace Test",
          "description": "Executes a diagnostic test using trace data to validate relationships and improve assertion capabilities between specified source and destination nodes."
        }
      }
    },
    "release_management": {
      "name": "Release Management",
      "description": "The Release Management module provides tools for creating, viewing, tracking, and managing the full lifecycle of releases, along with their associated details and actions.",
      "category": "unknown",
      "features": {
        "view_toggling": {
          "name": "View Toggling",
          "description": "Toggles the release page view between Grid View and Card View.",
          "category": "core",
          "entities": {
            "grid_view": {
              "name": "Grid View",
              "type": "configuration",
              "description": "A display mode for the release page."
            },
            "card_view": {
              "name": "Card View",
              "type": "configuration",
              "description": "An alternative display mode for the release page."
            },
            "toggle_button": {
              "name": "Toggle Button",
              "type": "action",
              "description": "The UI element used to switch between Grid View and Card View."
            }
          }
        },
        "release_categories_view": {
          "name": "Release Categories View",
          "description": "Allows viewing releases based on predefined categories such as All, My Approval, and Pending Releases.",
          "category": "core",
          "entities": {
            "view_icon": {
              "name": "View Icon",
              "type": "action",
              "description": "The UI element to access release categories."
            },
            "all_releases": {
              "name": "All Releases",
              "type": "data",
              "description": "A category displaying all releases."
            },
            "my_approval_releases": {
              "name": "My Approval Releases",
              "type": "data",
              "description": "A category displaying releases awaiting user approval."
            },
            "pending_releases": {
              "name": "Pending Releases",
              "type": "data",
              "description": "A category displaying releases that are pending."
            }
          }
        },
        "release_search": {
          "name": "Release Search",
          "description": "Provides functionality to search for specific releases.",
          "category": "core",
          "entities": {
            "search_functionality": {
              "name": "Search Functionality",
              "type": "action",
              "description": "The capability to find specific releases."
            },
            "release": {
              "name": "Release",
              "type": "resource",
              "description": "The primary resource being searched for."
            }
          }
        },
        "release_filtering": {
          "name": "Release Filtering",
          "description": "Enables users to apply filters to releases based on various fields (e.g., Actual Closure Date, Priority) and conditions (e.g., in, equal to).",
          "category": "core",
          "entities": {
            "filter_functionality": {
              "name": "Filter Functionality",
              "type": "action",
              "description": "The capability to narrow down the displayed releases based on criteria."
            },
            "filter_field": {
              "name": "Filter Field",
              "type": "configuration",
              "description": "An attribute of a release used for filtering (e.g., Actual Closure Date, Assignee, Priority)."
            },
            "filter_condition": {
              "name": "Filter Condition",
              "type": "configuration",
              "description": "The logical operator applied to a filter field (e.g., in, equal to, contains)."
            },
            "drop-down_box": {
              "name": "Drop-down Box",
              "type": "action",
              "description": "The UI element used to select filter fields and conditions."
            },
            "release": {
              "name": "Release",
              "type": "resource",
              "description": "The resource being filtered."
            }
          }
        },
        "auto_reload": {
          "name": "Auto Reload",
          "description": "Automatically reloads the topology view at 60-second intervals, with an option to stop this behavior.",
          "category": "core",
          "entities": {
            "auto_reload_setting": {
              "name": "Auto Reload Setting",
              "type": "configuration",
              "description": "A configuration that automatically refreshes the view."
            },
            "reload_interval": {
              "name": "Reload Interval",
              "type": "configuration",
              "description": "The frequency at which the view is reloaded (60 seconds)."
            },
            "stop_button": {
              "name": "Stop Button",
              "type": "action",
              "description": "The UI element to disable auto reload."
            },
            "topology_view": {
              "name": "Topology View",
              "type": "resource",
              "description": "The specific view that is reloaded."
            }
          }
        },
        "new_release_creation": {
          "name": "New Release Creation",
          "description": "Allows users to create new releases by entering comprehensive details such as requester information, release specifics, and descriptive content.",
          "category": "core",
          "entities": {
            "new_release_button": {
              "name": "New Release Button",
              "type": "action",
              "description": "The UI element to initiate the creation of a new release."
            },
            "release": {
              "name": "Release",
              "type": "resource",
              "description": "The resource being created."
            },
            "requester_details": {
              "name": "Requester Details",
              "type": "data",
              "description": "Information about the person requesting the release."
            },
            "assignee": {
              "name": "Assignee",
              "type": "data",
              "description": "The individual assigned to the release."
            },
            "impact": {
              "name": "Impact",
              "type": "data",
              "description": "The potential effect of the release (Business, Location, Department, Group)."
            },
            "urgency": {
              "name": "Urgency",
              "type": "data",
              "description": "The time-criticality of the release (Low, Medium, High)."
            },
            "severity": {
              "name": "Severity",
              "type": "data",
              "description": "The degree of seriousness of the release (Minor, Major, Critical)."
            },
            "risk": {
              "name": "Risk",
              "type": "data",
              "description": "The level of risk associated with the release (Low, Medium, High, Critical)."
            },
            "version": {
              "name": "Version",
              "type": "data",
              "description": "The version details for the release."
            },
            "service_category": {
              "name": "Service Category",
              "type": "data",
              "description": "The category of service the release belongs to (e.g., IT Services, Hardware Support)."
            },
            "tag": {
              "name": "Tag",
              "type": "data",
              "description": "A label or keyword assigned to the release for organization."
            },
            "title": {
              "name": "Title",
              "type": "data",
              "description": "A descriptive name for the release."
            },
            "description": {
              "name": "Description",
              "type": "data",
              "description": "A brief explanation of the release."
            },
            "due_date": {
              "name": "Due Date",
              "type": "data",
              "description": "The target completion date for the release."
            },
            "release_manager": {
              "name": "Release Manager",
              "type": "data",
              "description": "The individual responsible for managing the release."
            },
            "priority": {
              "name": "Priority",
              "type": "data",
              "description": "The importance level of the release (Low, Medium, High, Critical)."
            },
            "release_type": {
              "name": "Release Type",
              "type": "data",
              "description": "The classification of the release."
            },
            "notes": {
              "name": "Notes",
              "type": "data",
              "description": "Additional specific remarks for the release."
            },
            "submit_button": {
              "name": "Submit Button",
              "type": "action",
              "description": "The UI element to finalize the creation of the new release."
            }
          }
        },
        "comment/communication": {
          "name": "Comment/Communication",
          "description": "Facilitates communication by allowing users to access existing comments or share new insights via Mail, Notes, or workflow.",
          "category": "extended",
          "entities": {
            "comment/communication_tool": {
              "name": "Comment/Communication Tool",
              "type": "action",
              "description": "The quick action tool to manage comments and communications."
            },
            "comment": {
              "name": "Comment",
              "type": "data",
              "description": "Textual feedback or insights related to the release."
            },
            "mail_communication": {
              "name": "Mail Communication",
              "type": "action",
              "description": "A method to share insights via email."
            },
            "notes_communication": {
              "name": "Notes Communication",
              "type": "action",
              "description": "A method to share insights via internal notes."
            },
            "workflow_communication": {
              "name": "Workflow Communication",
              "type": "action",
              "description": "A method to share insights through the defined workflow."
            }
          }
        },
        "release_history": {
          "name": "Release History",
          "description": "Provides a complete timeline and detailed history of a release.",
          "category": "extended",
          "entities": {
            "history_tool": {
              "name": "History Tool",
              "type": "action",
              "description": "The quick action tool to view the release history."
            },
            "release_timeline": {
              "name": "Release Timeline",
              "type": "data",
              "description": "A chronological record of events and changes related to a release."
            },
            "release_details": {
              "name": "Release Details",
              "type": "data",
              "description": "Comprehensive information about the release at different points in time."
            }
          }
        },
        "release_interaction_log": {
          "name": "Release Interaction Log",
          "description": "Offers a data-driven log of user engagement, feedback trends, and support activity related to a release.",
          "category": "extended",
          "entities": {
            "interaction_button": {
              "name": "Interaction Button",
              "type": "action",
              "description": "The quick action tool to access the release interaction log."
            },
            "release_interaction_log": {
              "name": "Release Interaction Log",
              "type": "data",
              "description": "A record of user engagement, feedback trends, and support activity related to a release."
            },
            "user_engagement_data": {
              "name": "User Engagement Data",
              "type": "data",
              "description": "Information reflecting how users interact with the release."
            },
            "feedback_trends_data": {
              "name": "Feedback Trends Data",
              "type": "data",
              "description": "Patterns and directions observed in user feedback."
            },
            "support_activity_data": {
              "name": "Support Activity Data",
              "type": "data",
              "description": "Records of support actions and interactions concerning the release."
            }
          }
        },
        "attachment_management": {
          "name": "Attachment Management",
          "description": "Allows users to access and manage documents or screenshots attached to a release.",
          "category": "extended",
          "entities": {
            "attachment_tool": {
              "name": "Attachment Tool",
              "type": "action",
              "description": "The quick action tool to manage attachments."
            },
            "document_attachment": {
              "name": "Document Attachment",
              "type": "resource",
              "description": "A file, such as a document, linked to the release."
            },
            "screenshot_attachment": {
              "name": "Screenshot Attachment",
              "type": "resource",
              "description": "An image capture linked to the release."
            },
            "release": {
              "name": "Release",
              "type": "resource",
              "description": "The resource to which attachments are linked."
            }
          }
        },
        "quick_edit": {
          "name": "Quick Edit",
          "description": "Enables rapid configuration changes for a release.",
          "category": "core",
          "entities": {
            "quick_edit_tool": {
              "name": "Quick Edit Tool",
              "type": "action",
              "description": "The quick action tool for making rapid configuration changes."
            },
            "configuration_changes": {
              "name": "Configuration Changes",
              "type": "configuration",
              "description": "Modifications to the settings or parameters of a release."
            }
          }
        },
        "advanced_release_editing": {
          "name": "Advanced Release Editing",
          "description": "Provides comprehensive options for detailed editing of release information.",
          "category": "core",
          "entities": {
            "edit_tool": {
              "name": "Edit Tool",
              "type": "action",
              "description": "The quick action tool for performing comprehensive and detailed release editing."
            },
            "release": {
              "name": "Release",
              "type": "resource",
              "description": "The resource being edited."
            }
          }
        },
        "release_deletion": {
          "name": "Release Deletion",
          "description": "Allows users to delete selected releases.",
          "category": "core",
          "entities": {
            "delete_button": {
              "name": "Delete Button",
              "type": "action",
              "description": "The quick action tool to remove a selected release."
            },
            "selected_release": {
              "name": "Selected Release",
              "type": "resource",
              "description": "The specific release chosen for deletion."
            }
          }
        },
        "related_item_linking": {
          "name": "Related Item Linking",
          "description": "Enables linking a release to other related entities such as Tickets, Problems, Changes, or Requests.",
          "category": "integration",
          "entities": {
            "relation_button": {
              "name": "Relation Button",
              "type": "action",
              "description": "The quick action tool to link related items to a release."
            },
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "A related item that can be linked to a release."
            },
            "problem": {
              "name": "Problem",
              "type": "resource",
              "description": "A related item that can be linked to a release."
            },
            "change": {
              "name": "Change",
              "type": "resource",
              "description": "A related item that can be linked to a release."
            },
            "request": {
              "name": "Request",
              "type": "resource",
              "description": "A related item that can be linked to a release."
            },
            "release": {
              "name": "Release",
              "type": "resource",
              "description": "The resource to which other items are linked."
            }
          }
        },
        "release_completion": {
          "name": "Release Completion",
          "description": "Allows changing the status of a release to 'Complete' and simultaneously closing it.",
          "category": "core",
          "entities": {
            "complete_button": {
              "name": "Complete Button",
              "type": "action",
              "description": "The quick action tool to mark a release as complete."
            },
            "release_status": {
              "name": "Release Status",
              "type": "data",
              "description": "The state of the release, which is changed to 'Complete'."
            },
            "release_closure": {
              "name": "Release Closure",
              "type": "action",
              "description": "The action of formally closing the release."
            }
          }
        },
        "tag_management": {
          "name": "Tag Management",
          "description": "Allows assigning existing tags to a release and creating new tags for categorization.",
          "category": "extended",
          "entities": {
            "tag": {
              "name": "Tag",
              "type": "resource",
              "description": "A keyword or label that can be assigned to a release."
            },
            "new_tag_creation": {
              "name": "New Tag Creation",
              "type": "action",
              "description": "The action of creating a new tag."
            },
            "new_tag_button": {
              "name": "New Tag Button",
              "type": "action",
              "description": "The UI element used to create a new tag."
            },
            "release_instance": {
              "name": "Release Instance",
              "type": "resource",
              "description": "The specific release to which a tag is assigned."
            }
          }
        }
      },
      "workflows": {
        "view_and_search_releases": {
          "name": "View and Search Releases",
          "description": "Allows users to browse, search, filter, and customize the display of existing releases, including toggling between grid and card views, applying various search and filter criteria, and auto-reloading the view."
        },
        "create_new_release": {
          "name": "Create New Release",
          "description": "Enables users to initiate and define a new release by navigating to the creation form and providing comprehensive details such as requester information, impact, urgency, severity, risk, version, service category, title, description, due date, and assigning a release manager."
        },
        "manage_existing_release": {
          "name": "Manage Existing Release",
          "description": "Provides tools for users to interact with a specific release, including viewing its history, interaction logs, and attachments; adding comments; performing quick or detailed edits; deleting the release; relating it to other ITIL objects (tickets, problems, changes, requests); and marking the release as complete."
        }
      }
    },
    "dashboard": {
      "name": "Dashboard",
      "description": "Dashboards are customizable visual interfaces that display critical monitoring and performance metrics using various specialized widgets.",
      "category": "unknown",
      "features": {
        "visual_data_representation": {
          "name": "Visual Data Representation",
          "description": "Dashboards visually represent critical data, monitoring, and performance metrics in a direct-to-the-point yet detailed manner.",
          "category": "core",
          "entities": {
            "critical_data": {
              "name": "Critical Data",
              "type": "data",
              "description": "Essential information displayed visually on dashboards."
            },
            "monitoring_metrics": {
              "name": "Monitoring Metrics",
              "type": "data",
              "description": "Specific data points related to system monitoring."
            },
            "performance_metrics": {
              "name": "Performance Metrics",
              "type": "data",
              "description": "Specific data points related to system performance."
            },
            "asset_name": {
              "name": "Asset Name",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying an asset."
            },
            "asset_id": {
              "name": "Asset ID",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying an asset by its unique ID."
            },
            "operational_status": {
              "name": "Operational Status",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, indicating the current operational state of an asset."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "A general status detail that can be viewed in a dashboard tab."
            },
            "type": {
              "name": "Type",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, indicating the category or kind of an item."
            },
            "make": {
              "name": "Make",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, indicating the manufacturer of an asset."
            },
            "active": {
              "name": "Active",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, indicating if an item is currently active."
            },
            "service_name": {
              "name": "Service Name",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying a service."
            },
            "a_end_node": {
              "name": "A End Node",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying the A-end node of a service."
            },
            "a_end_ip": {
              "name": "A End IP",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying the A-end IP address of a service."
            },
            "a_end_port": {
              "name": "A End Port",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying the A-end port of a service."
            },
            "z_end_port": {
              "name": "Z End Port",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying the Z-end port of a service."
            },
            "z_end_ip": {
              "name": "Z End IP",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying the Z-end IP address of a service."
            },
            "trail_type": {
              "name": "Trail Type",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, indicating the type of trail for a service."
            },
            "bandwidth_(mbps)": {
              "name": "Bandwidth (MBPS)",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, indicating the bandwidth in MBPS for a service."
            },
            "issue": {
              "name": "Issue",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying a problem or issue."
            },
            "date": {
              "name": "Date",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, indicating a specific date."
            },
            "event_id": {
              "name": "Event ID",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying an event by its unique ID."
            },
            "node": {
              "name": "Node",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying a network node."
            },
            "resource": {
              "name": "Resource",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying a system resource."
            },
            "acknowledged": {
              "name": "Acknowledged",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, indicating if an event has been acknowledged."
            },
            "event_type": {
              "name": "Event Type",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, indicating the category or kind of an event."
            },
            "ems_name": {
              "name": "EMS Name",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying the Element Management System name."
            },
            "vendor": {
              "name": "Vendor",
              "type": "data",
              "description": "A detail that can be viewed in a dashboard tab, identifying the vendor of a device or service."
            }
          }
        },
        "dashboard_customization": {
          "name": "Dashboard Customization",
          "description": "Users can customize dashboards by adding metrics and reports to suit their specific requirements.",
          "category": "core",
          "entities": {
            "metrics": {
              "name": "Metrics",
              "type": "data",
              "description": "Data points that users can add to customize dashboards."
            },
            "reports": {
              "name": "Reports",
              "type": "resource",
              "description": "Pre-defined views or summaries that users can add to customize dashboards."
            },
            "user": {
              "name": "User",
              "type": "resource",
              "description": "The individual who performs dashboard customization."
            }
          }
        },
        "pdf_export": {
          "name": "PDF Export",
          "description": "Dashboards can be exported as PDFs for reporting purposes.",
          "category": "extended",
          "entities": {
            "pdf": {
              "name": "PDF",
              "type": "resource",
              "description": "The Portable Document Format file to which dashboards can be exported."
            },
            "reporting": {
              "name": "Reporting",
              "type": "action",
              "description": "The purpose for which dashboards are exported as PDFs."
            }
          }
        },
        "role-based_access_control_(rbac)": {
          "name": "Role-Based Access Control (RBAC)",
          "description": "Access to view and customize dashboards is controlled by role privileges and can be managed at the User/User Group level by an administrator.",
          "category": "core",
          "entities": {
            "role_privileges": {
              "name": "Role Privileges",
              "type": "configuration",
              "description": "Permissions associated with specific user roles that determine access to dashboards."
            },
            "administrator": {
              "name": "Administrator",
              "type": "resource",
              "description": "A user with elevated privileges responsible for enabling dashboard access."
            },
            "user": {
              "name": "User",
              "type": "resource",
              "description": "An individual whose access to view and customize dashboards can be controlled."
            },
            "user_group": {
              "name": "User Group",
              "type": "resource",
              "description": "A collection of users whose access to view and customize dashboards can be controlled collectively."
            },
            "access": {
              "name": "Access",
              "type": "configuration",
              "description": "The permission level (view or customize) granted for dashboards."
            }
          }
        },
        "dashboard_management_actions": {
          "name": "Dashboard Management Actions",
          "description": "Users can perform actions such as Pin (promote to top), Edit, Clone (make a copy), and Delete on dashboards.",
          "category": "core",
          "entities": {
            "pin": {
              "name": "Pin",
              "type": "action",
              "description": "An action to promote a dashboard to the top of a list for easy access."
            },
            "edit": {
              "name": "Edit",
              "type": "action",
              "description": "An action to make changes to an existing dashboard."
            },
            "clone": {
              "name": "Clone",
              "type": "action",
              "description": "An action to create a copy of an existing dashboard."
            },
            "delete": {
              "name": "Delete",
              "type": "action",
              "description": "An action to remove a selected dashboard."
            },
            "dashboard": {
              "name": "Dashboard",
              "type": "resource",
              "description": "The primary resource on which management actions (Pin, Edit, Clone, Delete) are performed."
            }
          }
        },
        "widget-based_design": {
          "name": "Widget-Based Design",
          "description": "Dashboards are composed of pre-configured widgets, which are code snippets designed to extract and present essential information graphically.",
          "category": "core",
          "entities": {
            "widget": {
              "name": "Widget",
              "type": "resource",
              "description": "Pre-configured code snippets that extract and present information, serving as building blocks for dashboards."
            },
            "dashboard": {
              "name": "Dashboard",
              "type": "resource",
              "description": "A visual representation of data, composed of widgets."
            }
          }
        },
        "multiple_graphical_formats_for_widgets": {
          "name": "Multiple Graphical Formats for Widgets",
          "description": "Widgets can display data in various graphical formats including Pie chart, Graph View, Panel View, Data Table, Bar Chart, Line Chart, and Area Chart.",
          "category": "core",
          "entities": {
            "pie_chart": {
              "name": "Pie Chart",
              "type": "configuration",
              "description": "A graphical format option for displaying data in widgets."
            },
            "graph_view": {
              "name": "Graph View",
              "type": "configuration",
              "description": "A graphical format option for displaying data in widgets."
            },
            "panel_view": {
              "name": "Panel View",
              "type": "configuration",
              "description": "A graphical format option for displaying data in widgets."
            },
            "data_table": {
              "name": "Data Table",
              "type": "configuration",
              "description": "A tabular format option for displaying data in widgets."
            },
            "bar_chart": {
              "name": "Bar Chart",
              "type": "configuration",
              "description": "A graphical format option for displaying data in widgets."
            },
            "line_chart": {
              "name": "Line Chart",
              "type": "configuration",
              "description": "A graphical format option for displaying data in widgets."
            },
            "area_chart": {
              "name": "Area Chart",
              "type": "configuration",
              "description": "A graphical format option for displaying data in widgets."
            },
            "data_panel": {
              "name": "Data Panel",
              "type": "configuration",
              "description": "A graphical format option for displaying data in widgets."
            }
          }
        },
        "extensive_pre-defined_widget_library": {
          "name": "Extensive Pre-defined Widget Library",
          "description": "A wide range of pre-defined widgets are available, grouped into categories such as Assets, Statistics, Events, Views, ITSM, Contract Management, IMACD, NCCM, Link, Site, and Prediction.",
          "category": "core",
          "entities": {
            "assets_widget_category": {
              "name": "Assets Widget Category",
              "type": "resource",
              "description": "A group of pre-defined widgets focused on asset management and information."
            },
            "statistics_widget_category": {
              "name": "Statistics Widget Category",
              "type": "resource",
              "description": "A group of pre-defined widgets designed to display overall metrics and statistical information."
            },
            "events_widget_category": {
              "name": "Events Widget Category",
              "type": "resource",
              "description": "A group of pre-defined widgets providing visual breakdown of system events."
            },
            "views_widget_category": {
              "name": "Views Widget Category",
              "type": "resource",
              "description": "A group of pre-defined widgets providing device status summaries and network topology visualizations."
            },
            "itsm_widget_category": {
              "name": "ITSM Widget Category",
              "type": "resource",
              "description": "A group of pre-defined widgets integrating information from IT Service Management modules."
            },
            "contract_management_widget_category": {
              "name": "Contract Management Widget Category",
              "type": "resource",
              "description": "A group of pre-defined widgets displaying an overview of contractual agreements."
            },
            "imacd_widget_category": {
              "name": "IMACD Widget Category",
              "type": "resource",
              "description": "A group of pre-defined widgets summarizing IMACD (Install, Move, Add, Change, Dispose) activities."
            },
            "nccm_widget_category": {
              "name": "NCCM Widget Category",
              "type": "resource",
              "description": "A group of pre-defined widgets providing insights into network configuration management activities."
            },
            "aiops_widget_category": {
              "name": "AIOps Widget Category",
              "type": "resource",
              "description": "A group of pre-defined widgets providing intelligent insights into IT operations using advanced analytics."
            },
            "event-based_widget_category": {
              "name": "Event-Based Widget Category",
              "type": "resource",
              "description": "A category of widgets specifically designed to display events on the dashboard."
            },
            "stat_based_widget_category": {
              "name": "Stat Based Widget Category",
              "type": "resource",
              "description": "A category of widgets designed to display overall metrics and statistical information."
            },
            "link_widget_category": {
              "name": "Link Widget Category",
              "type": "resource",
              "description": "A category of widgets that can display information and status of selected links/interfaces."
            },
            "site_widget_category": {
              "name": "Site Widget Category",
              "type": "resource",
              "description": "A category of widgets that can display information about the status and summary of a chosen site or device."
            },
            "prediction_widget_category": {
              "name": "Prediction Widget Category",
              "type": "resource",
              "description": "A category of widgets used to predict test data based on a trained model."
            }
          }
        },
        "timescale_customization_(widgets)": {
          "name": "Timescale Customization (Widgets)",
          "description": "Widgets can be customized by selecting specific time frames for data display (e.g., last hour, 3 hrs, 6 hrs, 12 hrs).",
          "category": "core",
          "entities": {
            "time_frame": {
              "name": "Time Frame",
              "type": "configuration",
              "description": "A configurable parameter for widgets to select a specific period for data display."
            },
            "last_hour": {
              "name": "Last Hour",
              "type": "configuration",
              "description": "A specific time frame option for widget customization."
            },
            "3_hours": {
              "name": "3 Hours",
              "type": "configuration",
              "description": "A specific time frame option for widget customization."
            },
            "6_hours": {
              "name": "6 Hours",
              "type": "configuration",
              "description": "A specific time frame option for widget customization."
            },
            "12_hours": {
              "name": "12 Hours",
              "type": "configuration",
              "description": "A specific time frame option for widget customization."
            }
          }
        },
        "color_palette_customization_(widgets)": {
          "name": "Color Palette Customization (Widgets)",
          "description": "Users can customize the color scheme (palette) of widgets.",
          "category": "core",
          "entities": {
            "colour_scheme": {
              "name": "Colour Scheme",
              "type": "configuration",
              "description": "A configurable parameter for widgets to select a visual color arrangement."
            },
            "palette": {
              "name": "Palette",
              "type": "configuration",
              "description": "The setting or option for color customization within widgets."
            }
          }
        },
        "statistical_customization_(widgets)": {
          "name": "Statistical Customization (Widgets)",
          "description": "Widgets can be configured to display specific statistics to suit user requirements.",
          "category": "core",
          "entities": {
            "statistics": {
              "name": "Statistics",
              "type": "configuration",
              "description": "A configurable parameter for widgets to adjust statistical display to suit requirements."
            }
          }
        },
        "advanced_filtering_(widgets)": {
          "name": "Advanced Filtering (Widgets)",
          "description": "Various custom filters (e.g., Asset ID, IP Address, Location Name, Department) can be applied to widgets to refine the displayed data.",
          "category": "core",
          "entities": {
            "filter": {
              "name": "Filter",
              "type": "configuration",
              "description": "A mechanism applied to widgets to refine the data displayed on the dashboard."
            },
            "asset_id_filter": {
              "name": "Asset ID Filter",
              "type": "configuration",
              "description": "A specific filter type based on Asset ID."
            },
            "ip_address_filter": {
              "name": "IP Address Filter",
              "type": "configuration",
              "description": "A specific filter type based on IP Address."
            },
            "device_type_filter": {
              "name": "Device Type Filter",
              "type": "configuration",
              "description": "A specific filter type based on Device Type."
            },
            "asset_type_filter": {
              "name": "Asset Type Filter",
              "type": "configuration",
              "description": "A specific filter type based on Asset Type."
            },
            "it_asset_status_filter": {
              "name": "IT Asset Status Filter",
              "type": "configuration",
              "description": "A specific filter type based on IT Asset Status."
            },
            "fixed_asset_status_filter": {
              "name": "Fixed Asset Status Filter",
              "type": "configuration",
              "description": "A specific filter type based on Fixed Asset Status."
            },
            "location_name_filter": {
              "name": "Location Name Filter",
              "type": "configuration",
              "description": "A specific filter type based on Location Name."
            },
            "installed_location_filter": {
              "name": "Installed Location Filter",
              "type": "configuration",
              "description": "A specific filter type based on Installed Location."
            },
            "organization_name_filter": {
              "name": "Organization Name Filter",
              "type": "configuration",
              "description": "A specific filter type based on Organization Name."
            },
            "is_active_filter": {
              "name": "Is Active Filter",
              "type": "configuration",
              "description": "A specific filter type based on Active status."
            },
            "designation_filter": {
              "name": "Designation Filter",
              "type": "configuration",
              "description": "A specific filter type based on Designation."
            },
            "floor_filter": {
              "name": "Floor Filter",
              "type": "configuration",
              "description": "A specific filter type based on Floor."
            },
            "building_filter": {
              "name": "Building Filter",
              "type": "configuration",
              "description": "A specific filter type based on Building."
            },
            "sap_id_filter": {
              "name": "SAP ID Filter",
              "type": "configuration",
              "description": "A specific filter type based on SAP ID."
            },
            "location_filter": {
              "name": "Location Filter",
              "type": "configuration",
              "description": "A specific filter type based on Location."
            },
            "old_associated_assets_filter": {
              "name": "OLD Associated Assets Filter",
              "type": "configuration",
              "description": "A specific filter type based on OLD Associated Assets."
            },
            "colour_filter": {
              "name": "Colour Filter",
              "type": "configuration",
              "description": "A specific filter type based on Colour."
            },
            "service_catalogue_filter": {
              "name": "Service Catalogue Filter",
              "type": "configuration",
              "description": "A specific filter type based on Service Catalogue."
            },
            "department_filter": {
              "name": "Department Filter",
              "type": "configuration",
              "description": "A specific filter type based on Department."
            },
            "team_filter": {
              "name": "Team Filter",
              "type": "configuration",
              "description": "A specific filter type based on Team."
            }
          }
        },
        "dashboard_presentation_mode": {
          "name": "Dashboard Presentation Mode",
          "description": "Allows configuration of automated dashboard presentations with customizable time intervals (6-300 seconds) for cycling through multiple dashboards.",
          "category": "extended",
          "entities": {
            "presentation_mode": {
              "name": "Presentation Mode",
              "type": "configuration",
              "description": "A display mode for dashboards that allows automated presentations with configurable time intervals."
            },
            "time_interval": {
              "name": "Time Interval",
              "type": "configuration",
              "description": "A configurable duration (6-300 seconds) for automated dashboard presentations."
            },
            "dynamic_assets": {
              "name": "Dynamic Assets",
              "type": "resource",
              "description": "Assets whose data is displayed and updated dynamically in presentation mode."
            }
          }
        },
        "auto_reload": {
          "name": "Auto Reload",
          "description": "Dashboards can be configured to auto-reload at specified time intervals to ensure data freshness.",
          "category": "extended",
          "entities": {
            "auto_reload": {
              "name": "Auto Reload",
              "type": "configuration",
              "description": "A feature that automatically refreshes dashboard data."
            },
            "reload_time": {
              "name": "Reload Time",
              "type": "configuration",
              "description": "The configurable amount of time after which the dashboard automatically reloads."
            }
          }
        },
        "aiops_widgets/integration": {
          "name": "AIOps Widgets/Integration",
          "description": "Provides intelligent insights, anomaly detection, forecasting, and event correlation through dedicated AIOps widgets.",
          "category": "integration",
          "entities": {
            "aiops_widget_category": {
              "name": "AIOps Widget Category",
              "type": "resource",
              "description": "A category of widgets that provide intelligent insights into IT operations using advanced analytics."
            },
            "predicted_events_count_widget": {
              "name": "Predicted Events Count Widget",
              "type": "resource",
              "description": "An AIOps widget displaying the number of events forecasted based on historical trends."
            },
            "top_predicted_events_widget": {
              "name": "Top Predicted Events Widget",
              "type": "resource",
              "description": "An AIOps widget highlighting the most frequently forecasted events."
            },
            "forecast_summary_widget": {
              "name": "Forecast Summary Widget",
              "type": "resource",
              "description": "An AIOps widget providing an overview of anticipated system behaviors and potential issues."
            },
            "adaptive_event_suppression_summary_widget": {
              "name": "Adaptive Event Suppression Summary Widget",
              "type": "resource",
              "description": "An AIOps widget summarizing events automatically suppressed to reduce noise."
            },
            "active_anomaly_events_count_widget": {
              "name": "Active Anomaly Events Count Widget",
              "type": "resource",
              "description": "An AIOps widget showing the current number of detected anomalies in the system."
            },
            "active_anomaly_events_summary_widget": {
              "name": "Active Anomaly Events Summary Widget",
              "type": "resource",
              "description": "An AIOps widget offering details on ongoing anomalies for in-depth analysis."
            },
            "suppressed_events_count_widget": {
              "name": "Suppressed Events Count Widget",
              "type": "resource",
              "description": "An AIOps widget displaying the current count of active events tagged for suppression."
            },
            "associated_event_inference_widget": {
              "name": "Associated Event Inference Widget",
              "type": "resource",
              "description": "An AIOps widget displaying groups of events that frequently occur together."
            },
            "anomalies": {
              "name": "Anomalies",
              "type": "data",
              "description": "Irregularities or deviations identified by AIOps widgets."
            },
            "potential_issues": {
              "name": "Potential Issues",
              "type": "data",
              "description": "Future problems forecasted or identified by AIOps widgets."
            },
            "events": {
              "name": "Events",
              "type": "data",
              "description": "System occurrences that AIOps widgets correlate and analyze."
            }
          }
        },
        "pre-configured_dashboards": {
          "name": "Pre-configured Dashboards",
          "description": "Infraon provides several ready-to-use, pre-configured dashboards for common use cases.",
          "category": "core",
          "entities": {
            "pre-configured_dashboard": {
              "name": "Pre-configured Dashboard",
              "type": "resource",
              "description": "Ready-to-use dashboards available by default in Infraon."
            }
          }
        },
        "scheduling_and_privacy_controls": {
          "name": "Scheduling and Privacy Controls",
          "description": "Ability to configure and schedule dashboards with privacy controls, particularly highlighted for release dashboards.",
          "category": "extended",
          "entities": {
            "schedule": {
              "name": "Schedule",
              "type": "configuration",
              "description": "A configuration for setting time intervals for dashboard presentations or releases."
            },
            "privacy_controls": {
              "name": "Privacy Controls",
              "type": "configuration",
              "description": "Settings to manage access and visibility of dashboards."
            }
          }
        },
        "service_manager_integration": {
          "name": "Service Manager Integration",
          "description": "Dashboards can integrate with a Service Manager to display service-related information such as incidents and tickets.",
          "category": "integration",
          "entities": {
            "service_manager": {
              "name": "Service Manager",
              "type": "resource",
              "description": "An external system that can be integrated with the dashboard to display service-related information."
            },
            "service_manager_widgets": {
              "name": "Service Manager Widgets",
              "type": "resource",
              "description": "Widgets specifically designed to display information from the integrated Service Manager."
            },
            "incidents": {
              "name": "Incidents",
              "type": "data",
              "description": "Service-related data, such as incidents, displayed through Service Manager widgets."
            },
            "tickets": {
              "name": "Tickets",
              "type": "data",
              "description": "Service-related data, such as tickets, displayed through Service Manager widgets."
            }
          }
        },
        "custom_widget_creation/modification": {
          "name": "Custom Widget Creation/Modification",
          "description": "Users can create new custom widgets or modify existing published widgets to provide additional capabilities or tailor data representation.",
          "category": "extended",
          "entities": {
            "custom_widget": {
              "name": "Custom Widget",
              "type": "resource",
              "description": "A widget that can be created or modified by users to provide additional capabilities."
            },
            "published_widget": {
              "name": "Published Widget",
              "type": "resource",
              "description": "An existing widget that can be modified by users."
            },
            "widget_profile": {
              "name": "Widget Profile",
              "type": "configuration",
              "description": "The configurable settings or characteristics of a custom widget."
            }
          }
        },
        "assignee_management": {
          "name": "Assignee Management",
          "description": "Ability to assign dashboards to specific users or teams for ownership and management.",
          "category": "extended",
          "entities": {
            "assignee": {
              "name": "Assignee",
              "type": "resource",
              "description": "An individual or group to whom a task or responsibility (e.g., related to a dashboard) can be assigned."
            },
            "user": {
              "name": "User",
              "type": "resource",
              "description": "An individual user who can be selected as an assignee."
            },
            "team": {
              "name": "Team",
              "type": "resource",
              "description": "A group of users who can be selected as an assignee."
            }
          }
        }
      },
      "workflows": {
        "view_dashboard_data": {
          "name": "View Dashboard Data",
          "description": "Users can access and display critical monitoring and performance metrics, including asset details, service status, event summaries, and ITSM metrics, presented visually on dashboards."
        },
        "create_dashboard": {
          "name": "Create Dashboard",
          "description": "Users can initiate the creation of a new dashboard from scratch, which involves adding and configuring various types of widgets to display desired data."
        },
        "customize_dashboard": {
          "name": "Customize Dashboard",
          "description": "Users can modify existing dashboards by adding, removing, or rearranging widgets, and adjusting overall dashboard settings to suit their specific requirements."
        },
        "manage_dashboard_instances": {
          "name": "Manage Dashboard Instances",
          "description": "Users can perform lifecycle operations on dashboards, including cloning (making a copy), deleting (removing), and pinning (promoting for easy access) existing dashboards."
        },
        "configure_widget_display": {
          "name": "Configure Widget Display",
          "description": "Users can customize individual widgets within a dashboard by selecting data representation types (e.g., charts, tables), setting timeframes, choosing color schemes, and applying specific filters to refine the displayed data."
        },
        "export_dashboard": {
          "name": "Export Dashboard",
          "description": "Users can export the content of a dashboard as a PDF file for reporting and documentation purposes."
        },
        "configure_dashboard_presentation": {
          "name": "Configure Dashboard Presentation",
          "description": "Users can set up dashboards for automated presentation mode, including configuring time intervals for auto-reload and dynamic display."
        },
        "manage_dashboard_access": {
          "name": "Manage Dashboard Access",
          "description": "Administrators can control and manage user and user group access privileges for viewing and customizing dashboards based on defined roles."
        },
        "assign_dashboard_responsibility": {
          "name": "Assign Dashboard Responsibility",
          "description": "Users can assign responsibility for a dashboard or specific widgets to individual users or teams."
        }
      }
    },
    "marketplace_(beta)": {
      "name": "Marketplace (Beta)",
      "description": "The Marketplace (Beta) module provides a collection of pre-built integrations to connect the Infraon platform with various third-party applications for synchronizing data, managing assets, and automating workflows.",
      "category": "unknown",
      "features": {
        "azure_active_directory_integration": {
          "name": "Azure Active Directory Integration",
          "description": "Syncs user and requester accounts from Azure Active Directory to Infraon, with support for field mapping.",
          "category": "integration",
          "entities": {
            "app_registration": {
              "name": "App Registration",
              "type": "resource",
              "description": "An application registered in the Azure portal to represent the Infraon integration, which holds configuration details."
            },
            "application_(client)_id": {
              "name": "Application (Client) ID",
              "type": "data",
              "description": "A unique identifier for the registered application, copied from Azure and used for authentication in Infraon."
            },
            "tenant_id": {
              "name": "Tenant ID",
              "type": "data",
              "description": "A unique identifier for the Azure Active Directory tenant, copied from Azure and used for authentication in Infraon."
            },
            "client_secret": {
              "name": "Client Secret",
              "type": "data",
              "description": "A secret key generated for the application in Azure, used as a password for authentication in Infraon."
            },
            "api_permissions": {
              "name": "API Permissions",
              "type": "configuration",
              "description": "Permissions granted to the registered app to access APIs, specifically 'User.Read.All' from Microsoft Graph."
            },
            "user/requester_account_synchronization": {
              "name": "User/Requester Account Synchronization",
              "type": "action",
              "description": "The core process of syncing user accounts from Azure Active Directory to Infraon, making them available as requesters."
            },
            "field_mapping": {
              "name": "Field Mapping",
              "type": "configuration",
              "description": "The process of mapping Azure user data fields to the corresponding requester, work, and address fields in Infraon."
            }
          }
        },
        "dell_integration": {
          "name": "Dell Integration",
          "description": "Provides a centralized platform to gather and manage information about Dell infrastructure, including hardware inventory, health, software, configuration, and warranty details.",
          "category": "integration",
          "entities": {
            "dell_infrastructure_information": {
              "name": "Dell Infrastructure Information",
              "type": "data",
              "description": "A comprehensive and centralized set of data about the Dell infrastructure, gathered and managed by the integration."
            },
            "hardware_inventory": {
              "name": "Hardware Inventory",
              "type": "data",
              "description": "Details of the hardware components of Dell devices that can be checked after integration."
            },
            "health_status": {
              "name": "Health Status",
              "type": "data",
              "description": "Health information of Dell devices that can be checked after integration."
            },
            "warranty_information": {
              "name": "Warranty Information",
              "type": "data",
              "description": "Warranty status and details for Dell devices that can be checked after integration."
            },
            "sync_now": {
              "name": "Sync Now",
              "type": "action",
              "description": "A user-initiated action within Infraon to synchronize data from the Dell infrastructure."
            }
          }
        },
        "google_workspace_integration": {
          "name": "Google Workspace Integration",
          "description": "Syncs data to allow users to view Infraon requester details directly within Google Workspace, streamlining workflows.",
          "category": "integration",
          "entities": {
            "google_account": {
              "name": "Google Account",
              "type": "resource",
              "description": "The user's Google account that is selected to authorize the integration between Infraon and Google Workspace."
            },
            "requester_info": {
              "name": "Requester Info",
              "type": "data",
              "description": "User details from Google Workspace that are synced and made visible as requester information directly in Infraon."
            },
            "oauth_consent_screen": {
              "name": "OAuth Consent Screen",
              "type": "configuration",
              "description": "A configuration page in the Google Cloud Console where permissions (scopes) for the app are managed."
            },
            "authorization_scopes": {
              "name": "Authorization Scopes",
              "type": "configuration",
              "description": "Specific permissions granted to Infraon to access Google Workspace data, such as 'admin.directory.user'."
            },
            "data_synchronization": {
              "name": "Data Synchronization",
              "type": "action",
              "description": "The process of syncing data between Google Workspace and Infraon, initiated by the 'Sync Now' action."
            }
          }
        },
        "jamf_integration": {
          "name": "JAMF Integration",
          "description": "Automatically imports Apple device data from JAMF for detailed inventory, tracking, and management of hardware, software, and asset lifecycle.",
          "category": "integration",
          "entities": {
            "apple_device_data": {
              "name": "Apple Device Data",
              "type": "data",
              "description": "Detailed inventory and tracking information for Apple devices, including hardware, software, and asset lifecycle data."
            },
            "jamf_credentials": {
              "name": "JAMF Credentials",
              "type": "configuration",
              "description": "The username and password for the JAMF account, required to configure and verify the integration."
            },
            "data_import": {
              "name": "Data Import",
              "type": "action",
              "description": "The automatic process of importing Apple device data from JAMF into Infraon, eliminating manual entry."
            },
            "sync_now": {
              "name": "Sync Now",
              "type": "action",
              "description": "A user-initiated action within Infraon to complete the setup and synchronize data from JAMF."
            }
          }
        },
        "servicenow_integration": {
          "name": "ServiceNow Integration",
          "description": "Automates workflows by allowing users to create new tickets and view the status of existing tickets in ServiceNow from within Infraon.",
          "category": "integration",
          "entities": {
            "servicenow_credentials": {
              "name": "ServiceNow Credentials",
              "type": "configuration",
              "description": "Credentials from the ServiceNow admin account, obtained from the Application Registry, to configure the integration."
            },
            "application_registry": {
              "name": "Application Registry",
              "type": "resource",
              "description": "A resource within ServiceNow where OAuth applications are registered to generate client credentials."
            },
            "ticket_creation": {
              "name": "Ticket Creation",
              "type": "action",
              "description": "An action that allows users to create a new ServiceNow ticket from within the Infraon platform."
            },
            "ticket_status_view": {
              "name": "Ticket Status View",
              "type": "action",
              "description": "An action that allows users to view the status of a ServiceNow ticket from within the Infraon platform."
            },
            "data_synchronization": {
              "name": "Data Synchronization",
              "type": "action",
              "description": "The process of syncing data between ServiceNow and Infraon, initiated by the 'Sync Now' action."
            }
          }
        },
        "slack_integration": {
          "name": "Slack Integration",
          "description": "Enables users to manage support tickets directly within the Slack workspace, including creating and updating tickets and adding notes.",
          "category": "integration",
          "entities": {
            "ticket_creation_(from_slack)": {
              "name": "Ticket Creation (from Slack)",
              "type": "action",
              "description": "Creating an Infraon ticket directly from the Slack interface using an emoji, slash command, or shortcut."
            },
            "ticket_update_(from_slack)": {
              "name": "Ticket Update (from Slack)",
              "type": "action",
              "description": "Updating an Infraon ticket and adding notes from within a dedicated Slack message thread."
            },
            "slash_command": {
              "name": "Slash Command",
              "type": "action",
              "description": "The '/infraon ticket' command used in Slack to invoke the ticket creation modal."
            },
            "ticket_emoji": {
              "name": "Ticket Emoji",
              "type": "action",
              "description": "An emoji used as a reaction to a Slack message to trigger the creation of an Infraon ticket."
            },
            "ticket_thread": {
              "name": "Ticket Thread",
              "type": "resource",
              "description": "A message thread in Slack where updates and notes for a specific Infraon ticket are managed."
            }
          }
        },
        "microsoft_teams_integration": {
          "name": "Microsoft Teams Integration",
          "description": "Integrates IT alerts and actions into Microsoft Teams channels, allowing users to create tickets and requests, view details, and receive real-time updates.",
          "category": "integration",
          "entities": {
            "azure_bot": {
              "name": "Azure Bot",
              "type": "resource",
              "description": "A bot resource created in the Azure portal that facilitates the integration with MS Teams."
            },
            "client_secret_id": {
              "name": "Client Secret ID",
              "type": "data",
              "description": "A secret key generated from the bot's app registration in Microsoft Entra ID, used for authentication."
            },
            "manifest_file": {
              "name": "Manifest File",
              "type": "resource",
              "description": "A file downloaded from Infraon and uploaded to MS Teams to install the custom integration app."
            },
            "ticket_creation_(from_teams)": {
              "name": "Ticket Creation (from Teams)",
              "type": "action",
              "description": "The ability for users to create Infraon tickets directly from within the MS Teams interface."
            },
            "request_creation_(from_teams)": {
              "name": "Request Creation (from Teams)",
              "type": "action",
              "description": "The ability for users to create Infraon requests directly from within the MS Teams interface."
            },
            "real-time_updates": {
              "name": "Real-time Updates",
              "type": "data",
              "description": "Real-time notifications about ticket status changes and comments delivered directly into MS Teams channels."
            }
          }
        },
        "whatsapp_integration": {
          "name": "WhatsApp Integration",
          "description": "Allows users to report issues and manage IT support via WhatsApp chat, including creating tickets, creating requests, viewing ticket details, and receiving status updates.",
          "category": "integration",
          "entities": {
            "whatsapp_business_app": {
              "name": "WhatsApp Business App",
              "type": "resource",
              "description": "An application created within the Meta for Developers portal to enable the use of the WhatsApp Business API."
            },
            "phone_number_id": {
              "name": "Phone Number ID",
              "type": "data",
              "description": "A unique identifier for the phone number associated with the WhatsApp Business Account, used in configuration."
            },
            "whatsapp_business_account_id": {
              "name": "WhatsApp Business Account ID",
              "type": "data",
              "description": "A unique identifier for the WhatsApp Business Account, used in configuration."
            },
            "permanent_access_token": {
              "name": "Permanent Access Token",
              "type": "data",
              "description": "A long-lived token generated for a System User in Meta Business Suite to authenticate API requests."
            },
            "webhook_url": {
              "name": "Webhook URL",
              "type": "configuration",
              "description": "The URL provided by Infraon and configured in Meta to receive incoming messages and events from WhatsApp."
            },
            "ticket_creation_(from_whatsapp)": {
              "name": "Ticket Creation (from WhatsApp)",
              "type": "action",
              "description": "The ability for users to create support tickets by sending a message to the integrated WhatsApp number."
            },
            "request_creation_(from_whatsapp)": {
              "name": "Request Creation (from WhatsApp)",
              "type": "action",
              "description": "The ability for users to create service requests by sending a message to the integrated WhatsApp number."
            }
          }
        },
        "ring_central_integration": {
          "name": "Ring Central Integration",
          "description": "Integrates a cloud-based communication system to connect requesters and technicians with calling features for faster ticket resolution.",
          "category": "integration",
          "entities": {
            "ring_central_app": {
              "name": "Ring Central App",
              "type": "resource",
              "description": "An application registered on the Ring Central developer portal to obtain API credentials and enable integration."
            },
            "api_server_url": {
              "name": "API Server URL",
              "type": "configuration",
              "description": "The base URL for the Ring Central API server, used in the Infraon configuration."
            },
            "client_id": {
              "name": "Client ID",
              "type": "data",
              "description": "The client identifier for the registered Ring Central app, used for authentication."
            },
            "client_secret": {
              "name": "Client Secret",
              "type": "data",
              "description": "The client secret for the registered Ring Central app, used for authentication."
            },
            "jwt_token": {
              "name": "JWT Token",
              "type": "data",
              "description": "A JSON Web Token generated from the Ring Central app credentials, used for server-to-server authentication."
            },
            "calling_features": {
              "name": "Calling Features",
              "type": "action",
              "description": "The ability to initiate calls between requesters and technicians through the cloud-based communication system."
            }
          }
        },
        "ldap_integration": {
          "name": "LDAP Integration",
          "description": "Streamlines user management by syncing end-users from an LDAP directory to the Infraon portal, with field mapping for requester data.",
          "category": "integration",
          "entities": {
            "ldap_server_configuration": {
              "name": "LDAP Server Configuration",
              "type": "configuration",
              "description": "A set of parameters to connect to the LDAP server, including URL/IP, Port, User Name, Password, and Base DN."
            },
            "base_dn": {
              "name": "Base DN",
              "type": "configuration",
              "description": "The Distinguished Name of the base entry in the LDAP directory from which to start user searches."
            },
            "user_management": {
              "name": "User Management",
              "type": "action",
              "description": "The core capability to streamline the addition of end-users from an LDAP directory into the Infraon portal."
            },
            "field_mapping": {
              "name": "Field Mapping",
              "type": "configuration",
              "description": "The process of mapping LDAP user attributes to the corresponding fields for a requester in Infraon."
            },
            "data_synchronization": {
              "name": "Data Synchronization",
              "type": "action",
              "description": "An action, triggered by 'Sync Now', to import requester data from the configured LDAP server into Infraon."
            }
          }
        },
        "jira_integration": {
          "name": "JIRA Integration",
          "description": "Establishes a two-way synchronization of IT assets with JIRA, allowing JIRA issues created for an asset to be viewed within the asset's details in Infraon.",
          "category": "integration",
          "entities": {
            "jira_api_token": {
              "name": "JIRA API Token",
              "type": "data",
              "description": "An API token generated from a JIRA account, used to authenticate the integration with Infraon."
            },
            "jira_site_name": {
              "name": "JIRA Site Name",
              "type": "configuration",
              "description": "The unique name or URL of the JIRA instance being integrated with Infraon."
            },
            "asset_synchronization": {
              "name": "Asset Synchronization",
              "type": "action",
              "description": "The two-way connection that automatically syncs IT, Fixed, or Consumable asset data from Infraon to JIRA."
            },
            "jira_custom_field": {
              "name": "JIRA Custom Field",
              "type": "resource",
              "description": "A custom field of type 'Assets objects' created in JIRA to link issues to specific assets synced from Infraon."
            },
            "jira_tickets": {
              "name": "JIRA Tickets",
              "type": "data",
              "description": "Issues created in JIRA that are linked to an asset and are visible within that asset's details in the Infraon portal."
            },
            "object_schemas": {
              "name": "Object Schemas",
              "type": "resource",
              "description": "The schema within JIRA Assets where the synchronized asset data from Infraon is stored and organized."
            }
          }
        }
      },
      "workflows": {
        "user_&_requester_synchronization": {
          "name": "User & Requester Synchronization",
          "description": "Configuring an external identity provider (like Azure AD, Google Workspace, or LDAP) and integrating it with Infraon to automatically synchronize user and requester accounts. This involves setup on the external platform, installing the app in the Infraon Marketplace, exchanging credentials, and mapping data fields."
        },
        "asset_&_inventory_data_synchronization": {
          "name": "Asset & Inventory Data Synchronization",
          "description": "Integrating with external systems (like Dell, JAMF, or JIRA) to import and synchronize asset and inventory data into Infraon. This provides a centralized view of hardware, software, and configuration details, and for JIRA, enables linking assets to tickets."
        },
        "external_it_service_management_(itsm)_integration": {
          "name": "External IT Service Management (ITSM) Integration",
          "description": "Connecting Infraon with external ITSM platforms like ServiceNow or JIRA. This workflow enables the creation, viewing, and management of tickets across both systems, allowing users in one platform to interact with tickets from the other."
        },
        "collaboration_platform_integration_for_ticketing": {
          "name": "Collaboration Platform Integration for Ticketing",
          "description": "Integrating Infraon with collaboration tools like Slack or Microsoft Teams to allow users to create, update, and manage IT support tickets directly within their chat workspace, including receiving real-time status updates."
        },
        "communication_channel_integration_for_it_support": {
          "name": "Communication Channel Integration for IT Support",
          "description": "Connecting Infraon with communication platforms like WhatsApp or Ring Central. This allows end-users to report issues and track tickets via chat (WhatsApp) or enables technicians to use enhanced calling features for faster ticket resolution (Ring Central)."
        },
        "configuring_an_external_application_for_integration": {
          "name": "Configuring an External Application for Integration",
          "description": "A general prerequisite workflow performed on an external platform (e.g., Azure, Google Cloud, ServiceNow, Meta) to register the Infraon application, configure necessary permissions, and generate security credentials (like Client IDs, Secrets, or API tokens) required for the integration."
        },
        "installing_and_configuring_a_marketplace_integration_in_infraon": {
          "name": "Installing and Configuring a Marketplace Integration in Infraon",
          "description": "The core process within Infraon for enabling an integration. This involves selecting an application from the Marketplace, installing it, providing credentials from the external service, verifying the connection, configuring settings like field mapping, and triggering data synchronization."
        }
      }
    },
    "network_diagram_(beta)": {
      "name": "Network Diagram (Beta)",
      "description": "The Network Diagram module is a drag-and-drop tool for creating, managing, and visualizing pictorial network diagrams, including device status representation.",
      "category": "unknown",
      "features": {
        "diagram_creation_tool": {
          "name": "Diagram Creation Tool",
          "description": "Functions as a tool for creating network diagrams, similar to MS Visio.",
          "category": "core",
          "entities": {
            "network_diagram_module": {
              "name": "Network Diagram Module",
              "type": "resource",
              "description": "The core software component that functions as a diagram creator tool."
            },
            "worksheet": {
              "name": "Worksheet",
              "type": "resource",
              "description": "The central area within the module used to create the Network Diagram."
            },
            "device": {
              "name": "Device",
              "type": "resource",
              "description": "A component that makes up a network, such as routers, hubs, firewalls."
            },
            "interface": {
              "name": "Interface",
              "type": "resource",
              "description": "A connection point or link between devices in a network diagram."
            },
            "server": {
              "name": "Server",
              "type": "resource",
              "description": "A specific type of device that can be arranged in the network diagram."
            },
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "The pictorial representation of a network created using the module."
            }
          }
        },
        "drag-and-drop_interface": {
          "name": "Drag-and-Drop Interface",
          "description": "Enables diagram creation by dragging and dropping icons.",
          "category": "core",
          "entities": {
            "icon": {
              "name": "Icon",
              "type": "resource",
              "description": "Visual representations of network components that can be dragged and dropped."
            },
            "asset": {
              "name": "Asset",
              "type": "resource",
              "description": "General term for network components that can be depicted using icons."
            },
            "drag-and-drop_action": {
              "name": "Drag-and-Drop Action",
              "type": "action",
              "description": "The user interaction of moving icons or assets onto the diagram canvas."
            }
          }
        },
        "icon_mapping": {
          "name": "Icon Mapping",
          "description": "Provides multiple options for mapping network devices and components to specific visual icons.",
          "category": "core",
          "entities": {
            "device": {
              "name": "Device",
              "type": "resource",
              "description": "A network component that needs to be associated with a specific icon."
            },
            "component": {
              "name": "Component",
              "type": "resource",
              "description": "A part of the network that can be mapped to an icon."
            },
            "icon": {
              "name": "Icon",
              "type": "resource",
              "description": "A visual representation to which devices and components can be mapped."
            },
            "mapping_option": {
              "name": "Mapping Option",
              "type": "configuration",
              "description": "The functionality that allows associating devices and components to specific icons."
            }
          }
        },
        "diagram_management_(crud)": {
          "name": "Diagram Management (CRUD)",
          "description": "Allows users to add, edit, and delete network diagrams.",
          "category": "core",
          "entities": {
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "The primary resource that can be created, viewed, edited, or deleted."
            },
            "add_network_diagram_action": {
              "name": "Add Network Diagram Action",
              "type": "action",
              "description": "The operation to create a new network diagram."
            },
            "edit_network_diagram_action": {
              "name": "Edit Network Diagram Action",
              "type": "action",
              "description": "The operation to modify an existing network diagram."
            },
            "delete_network_diagram_action": {
              "name": "Delete Network Diagram Action",
              "type": "action",
              "description": "The operation to remove an existing network diagram."
            },
            "view_network_diagram_action": {
              "name": "View Network Diagram Action",
              "type": "action",
              "description": "The operation to display an existing network diagram."
            }
          }
        },
        "diagram_cloning": {
          "name": "Diagram Cloning",
          "description": "Provides the ability to duplicate (clone) existing network diagrams.",
          "category": "core",
          "entities": {
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "An existing diagram that can be duplicated."
            },
            "clone_action": {
              "name": "Clone Action",
              "type": "action",
              "description": "The operation to create a copy of an existing network diagram."
            }
          }
        },
        "diagram_viewing": {
          "name": "Diagram Viewing",
          "description": "Users can view existing network diagrams from the dashboard.",
          "category": "core",
          "entities": {
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "The diagram that is being displayed for review."
            },
            "dashboard": {
              "name": "Dashboard",
              "type": "resource",
              "description": "The main interface where saved network diagrams are displayed and can be accessed for viewing."
            },
            "view_action": {
              "name": "View Action",
              "type": "action",
              "description": "The operation of displaying a network diagram."
            }
          }
        },
        "customizable_diagram_properties": {
          "name": "Customizable Diagram Properties",
          "description": "Allows defining properties for network diagrams such as Name, Description, and Creator.",
          "category": "core",
          "entities": {
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "The diagram whose overall properties can be defined or modified."
            },
            "diagram_name": {
              "name": "Diagram Name",
              "type": "data",
              "description": "A customizable property for identifying the network diagram."
            },
            "diagram_description": {
              "name": "Diagram Description",
              "type": "data",
              "description": "A customizable property providing details about the network diagram."
            },
            "diagram_creator": {
              "name": "Diagram Creator",
              "type": "data",
              "description": "A property indicating the user who created the network diagram."
            },
            "customization_action": {
              "name": "Customization Action",
              "type": "action",
              "description": "The act of modifying the properties of a network diagram."
            }
          }
        },
        "default_tools_and_shapes": {
          "name": "Default Tools and Shapes",
          "description": "Provides a set of default tools and shapes required to create a diagram.",
          "category": "core",
          "entities": {
            "default_tools": {
              "name": "Default Tools",
              "type": "resource",
              "description": "Pre-defined functions and utilities available for diagram creation."
            },
            "default_shapes": {
              "name": "Default Shapes",
              "type": "resource",
              "description": "Pre-defined geometric forms and symbols available for use in diagrams."
            },
            "developing_window": {
              "name": "Developing Window",
              "type": "resource",
              "description": "The interface where the default tools and shapes are presented for diagram creation."
            }
          }
        },
        "object_and_shape_library_(left_panel)": {
          "name": "Object and Shape Library (Left Panel)",
          "description": "A dedicated left panel containing objects and shapes for configuring nodes in the diagram.",
          "category": "core",
          "entities": {
            "object": {
              "name": "Object",
              "type": "resource",
              "description": "A general item or component that can be added to the network diagram."
            },
            "shape": {
              "name": "Shape",
              "type": "resource",
              "description": "A geometric form or symbol available for configuring nodes in the diagram."
            },
            "left_panel": {
              "name": "Left Panel",
              "type": "resource",
              "description": "The user interface component that contains the library of objects and shapes."
            },
            "node_configuration": {
              "name": "Node Configuration",
              "type": "configuration",
              "description": "The process of setting up or defining the properties of a node using objects and shapes."
            }
          }
        },
        "toolbar_with_editing_options": {
          "name": "Toolbar with Editing Options",
          "description": "A top panel toolbar offering common editing functions like zoom in/out and fill.",
          "category": "core",
          "entities": {
            "toolbar": {
              "name": "Toolbar",
              "type": "resource",
              "description": "A bar located at the top of the diagram creation interface containing various editing options."
            },
            "zoom_in_option": {
              "name": "Zoom In Option",
              "type": "action",
              "description": "An editing function to magnify the view of the diagram."
            },
            "zoom_out_option": {
              "name": "Zoom Out Option",
              "type": "action",
              "description": "An editing function to reduce the magnification of the diagram view."
            },
            "fill_option": {
              "name": "Fill Option",
              "type": "action",
              "description": "An editing function to apply a fill color or pattern to shapes."
            },
            "edit_option": {
              "name": "Edit Option",
              "type": "action",
              "description": "A general editing function available on the toolbar."
            }
          }
        },
        "extended_shape_properties_management_(right_panel)": {
          "name": "Extended Shape Properties Management (Right Panel)",
          "description": "A dedicated right panel for managing extended properties of shapes added in the Network Diagram.",
          "category": "core",
          "entities": {
            "shape": {
              "name": "Shape",
              "type": "resource",
              "description": "A visual element in the diagram whose extended properties can be managed."
            },
            "extended_properties": {
              "name": "Extended Properties",
              "type": "data",
              "description": "Additional attributes or settings associated with shapes in the diagram."
            },
            "right_panel": {
              "name": "Right Panel",
              "type": "resource",
              "description": "The user interface component used to manage the extended properties of shapes."
            },
            "manage_properties_action": {
              "name": "Manage Properties Action",
              "type": "action",
              "description": "The act of modifying or configuring the extended properties of shapes."
            }
          }
        },
        "device_label_and_property_customization": {
          "name": "Device Label and Property Customization",
          "description": "Allows customizing device labels and adding properties to devices via an 'Edit Data' option.",
          "category": "core",
          "entities": {
            "device": {
              "name": "Device",
              "type": "resource",
              "description": "A network component in the diagram whose label and properties can be customized."
            },
            "shape": {
              "name": "Shape",
              "type": "resource",
              "description": "The visual representation of a device in the diagram."
            },
            "device_label": {
              "name": "Device Label",
              "type": "data",
              "description": "The customizable text identifier for a device in the diagram."
            },
            "device_properties": {
              "name": "Device Properties",
              "type": "data",
              "description": "Customizable attributes or settings specific to a device."
            },
            "edit_data_option": {
              "name": "Edit Data Option",
              "type": "action",
              "description": "The menu option used to access the customization settings for device labels and properties."
            },
            "apply_action": {
              "name": "Apply Action",
              "type": "action",
              "description": "The action to save the customized device label and properties."
            }
          }
        },
        "node_and_event_options": {
          "name": "Node and Event Options",
          "description": "Provides context-sensitive options for nodes and events, accessible via right-click.",
          "category": "core",
          "entities": {
            "device": {
              "name": "Device",
              "type": "resource",
              "description": "A specific network component (node) in the diagram that can have associated options."
            },
            "node_options": {
              "name": "Node Options",
              "type": "configuration",
              "description": "Specific settings or actions related to a device (node) that appear upon right-click."
            },
            "event_options": {
              "name": "Event Options",
              "type": "configuration",
              "description": "Specific settings or actions related to events associated with a device (node)."
            },
            "edit_data_settings": {
              "name": "Edit Data Settings",
              "type": "configuration",
              "description": "The configuration that determines which Node and Event Options are available."
            },
            "right-click_action": {
              "name": "Right-click Action",
              "type": "action",
              "description": "The user interaction of right-clicking a device to reveal its associated options."
            }
          }
        },
        "diagram_saving": {
          "name": "Diagram Saving",
          "description": "Allows users to save created or modified network diagrams.",
          "category": "core",
          "entities": {
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "The diagram that needs to be stored for future access."
            },
            "save_action": {
              "name": "Save Action",
              "type": "action",
              "description": "The operation to persist the created or modified network diagram."
            },
            "save_window": {
              "name": "Save Window",
              "type": "resource",
              "description": "The dialog box that appears when saving a network diagram, prompting for details."
            },
            "save_details": {
              "name": "Save Details",
              "type": "data",
              "description": "Information required to save the diagram, such as name and description."
            },
            "file_menu": {
              "name": "File Menu",
              "type": "resource",
              "description": "The menu option (e.g., 'File -> Save') used to initiate the saving process."
            }
          }
        },
        "role-based_access_control_(rbac)_for_diagrams": {
          "name": "Role-Based Access Control (RBAC) for Diagrams",
          "description": "Access, add, edit, clone, and delete operations on network diagrams are controlled by administrator-granted privileges defined under Roles and Privileges.",
          "category": "extended",
          "entities": {
            "user": {
              "name": "User",
              "type": "resource",
              "description": "An individual who interacts with the Network Diagram module."
            },
            "administrator": {
              "name": "Administrator",
              "type": "resource",
              "description": "A user with privileges to grant or revoke access permissions for network diagrams."
            },
            "privilege": {
              "name": "Privilege",
              "type": "configuration",
              "description": "A specific permission (e.g., access, add, edit, clone, delete) granted to users for network diagrams."
            },
            "role": {
              "name": "Role",
              "type": "configuration",
              "description": "A collection of privileges defined for different user types."
            },
            "roles_and_privileges_section": {
              "name": "Roles and Privileges Section",
              "type": "resource",
              "description": "The system area where user roles and their associated privileges are defined."
            }
          }
        },
        "export_functionality": {
          "name": "Export Functionality",
          "description": "Supports exporting network diagrams in PDF and JPG file formats.",
          "category": "extended",
          "entities": {
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "The diagram that is to be converted and saved in an external file format."
            },
            "pdf_format": {
              "name": "PDF Format",
              "type": "data",
              "description": "A supported file format for exporting network diagrams."
            },
            "jpg_format": {
              "name": "JPG Format",
              "type": "data",
              "description": "A supported image file format for exporting network diagrams."
            },
            "export_action": {
              "name": "Export Action",
              "type": "action",
              "description": "The operation to generate a file of the network diagram in a specified format."
            },
            "export_view_button": {
              "name": "Export View Button",
              "type": "resource",
              "description": "The user interface element that initiates the export process."
            }
          }
        },
        "search_functionality": {
          "name": "Search Functionality",
          "description": "Enables searching for specific network diagrams.",
          "category": "extended",
          "entities": {
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "The resource that users can search for within the module."
            },
            "search_action": {
              "name": "Search Action",
              "type": "action",
              "description": "The operation of querying and retrieving specific network diagrams."
            },
            "search_field": {
              "name": "Search Field",
              "type": "resource",
              "description": "The input area where users type their search query."
            }
          }
        },
        "filtering_options": {
          "name": "Filtering Options",
          "description": "Allows filtering network diagrams based on fields (Creator, Description, Name) and conditions (in, not in, equal to, not equal to).",
          "category": "extended",
          "entities": {
            "network_diagram": {
              "name": "Network Diagram",
              "type": "resource",
              "description": "The resource that can be filtered based on specific criteria."
            },
            "filter_action": {
              "name": "Filter Action",
              "type": "action",
              "description": "The operation of applying criteria to narrow down the list of network diagrams."
            },
            "filter_field": {
              "name": "Filter Field",
              "type": "configuration",
              "description": "An attribute (e.g., Creator, Description, Name) used as a basis for filtering."
            },
            "filter_condition": {
              "name": "Filter Condition",
              "type": "configuration",
              "description": "A logical operator (e.g., in, not in, equal to, not equal to) applied to a filter field."
            },
            "drop-down_box": {
              "name": "Drop-down Box",
              "type": "resource",
              "description": "The user interface element used to select filter fields and conditions."
            }
          }
        },
        "insert_links/images": {
          "name": "Insert Links/Images",
          "description": "Allows inserting links or images into the network diagram.",
          "category": "extended",
          "entities": {
            "link": {
              "name": "Link",
              "type": "data",
              "description": "A URL or reference that can be embedded into the network diagram."
            },
            "image": {
              "name": "Image",
              "type": "data",
              "description": "A graphic file that can be inserted into the network diagram."
            },
            "plus_symbol": {
              "name": "Plus Symbol",
              "type": "resource",
              "description": "The user interface element (button) used to initiate the insertion of links or images."
            },
            "insert_action": {
              "name": "Insert Action",
              "type": "action",
              "description": "The operation of adding a link or an image to the network diagram."
            }
          }
        },
        "real-time_device_status_visualization": {
          "name": "Real-time Device Status Visualization",
          "description": "Displays device status (Up, Down, Unknown) directly on the diagram using color-coding (Green, Red, Gray).",
          "category": "integration",
          "entities": {
            "device": {
              "name": "Device",
              "type": "resource",
              "description": "A network component whose operational status is visually represented in the diagram."
            },
            "device_status": {
              "name": "Device Status",
              "type": "data",
              "description": "The current operational state of a device (e.g., 'Up', 'Down', 'Unknown')."
            },
            "status_color_(red)": {
              "name": "Status Color (Red)",
              "type": "configuration",
              "description": "A color configuration indicating that the device status is 'Down'."
            },
            "status_color_(green)": {
              "name": "Status Color (Green)",
              "type": "configuration",
              "description": "A color configuration indicating that the device status is 'Up'."
            },
            "status_color_(gray)": {
              "name": "Status Color (Gray)",
              "type": "configuration",
              "description": "A color configuration indicating that the device status is 'Unknown'."
            },
            "dashboard": {
              "name": "Dashboard",
              "type": "resource",
              "description": "The interface where the saved network diagram displays real-time device status."
            }
          }
        }
      },
      "workflows": {
        "create_network_diagram": {
          "name": "Create Network Diagram",
          "description": "Users can design and save new network diagrams from scratch using a drag-and-drop interface, various tools, and customizable properties."
        },
        "view_network_diagram": {
          "name": "View Network Diagram",
          "description": "Users can access and display existing network diagrams from the dashboard."
        },
        "edit_network_diagram": {
          "name": "Edit Network Diagram",
          "description": "Users can modify the components, properties, and layout of an existing network diagram."
        },
        "clone_network_diagram": {
          "name": "Clone Network Diagram",
          "description": "Users can create a duplicate copy of an existing network diagram."
        },
        "delete_network_diagram": {
          "name": "Delete Network Diagram",
          "description": "Users can remove existing network diagrams from the system."
        },
        "search_network_diagrams": {
          "name": "Search Network Diagrams",
          "description": "Users can find specific network diagrams by entering search terms."
        },
        "filter_network_diagrams": {
          "name": "Filter Network Diagrams",
          "description": "Users can narrow down the list of network diagrams based on specific criteria such as creator, description, or name."
        },
        "export_network_diagram": {
          "name": "Export Network Diagram",
          "description": "Users can save network diagrams in various formats, including PDF and JPG."
        },
        "display_device_status": {
          "name": "Display Device Status",
          "description": "The system automatically updates and displays the real-time operational status (Up, Down, Unknown) of devices within the network diagram using color coding."
        }
      }
    },
    "report": {
      "name": "Report",
      "description": "The Report module provides comprehensive, customizable reports and AI-driven insights for analyzing historical and real-time data to monitor performance, predict trends, and facilitate informed decision-making.",
      "category": "unknown",
      "features": {
        "report_customization": {
          "name": "Report Customization",
          "description": "Provides attractive and easily customizable reports, allowing users to tailor them to specific needs and organizational requirements.",
          "category": "core",
          "entities": {
            "user_preferences": {
              "name": "User Preferences",
              "type": "configuration",
              "description": "User-defined settings for report appearance and content."
            },
            "add_report_action": {
              "name": "Add Report Action",
              "type": "action",
              "description": "The process of creating a new report."
            },
            "view_report_action": {
              "name": "View Report Action",
              "type": "action",
              "description": "The process of displaying an existing report."
            },
            "edit_report_action": {
              "name": "Edit Report Action",
              "type": "action",
              "description": "The process of modifying an existing report."
            },
            "delete_report_action": {
              "name": "Delete Report Action",
              "type": "action",
              "description": "The process of removing an existing report."
            },
            "custom_reports": {
              "name": "Custom Reports",
              "type": "resource",
              "description": "Reports created or modified by users."
            },
            "requester_info_masking": {
              "name": "Requester Info Masking",
              "type": "configuration",
              "description": "A privacy setting to hide sensitive user information in reports."
            }
          }
        },
        "performance_and_fault_data_analysis": {
          "name": "Performance and Fault Data Analysis",
          "description": "Offers detailed analysis of performance and fault-related data collected by the system.",
          "category": "core",
          "entities": {
            "performance_data": {
              "name": "Performance Data",
              "type": "data",
              "description": "Information related to system operational efficiency and speed."
            },
            "fault_data": {
              "name": "Fault Data",
              "type": "data",
              "description": "Information related to system errors, failures, or issues."
            },
            "system_behavior": {
              "name": "System Behavior",
              "type": "data",
              "description": "The operational characteristics and patterns of a system."
            }
          }
        },
        "multiple_analysis_types": {
          "name": "Multiple Analysis Types",
          "description": "Supports trending, pattern, and summary analysis to understand past behavior.",
          "category": "core",
          "entities": {
            "trending_analysis": {
              "name": "Trending Analysis",
              "type": "action",
              "description": "Examination of data over time to identify patterns or directions."
            },
            "pattern_analysis": {
              "name": "Pattern Analysis",
              "type": "action",
              "description": "Identification of recurring sequences or structures within data."
            },
            "summary_analysis": {
              "name": "Summary Analysis",
              "type": "action",
              "description": "Condensing large datasets into key statistics or overviews."
            }
          }
        },
        "predictive_behavior_analysis": {
          "name": "Predictive Behavior Analysis",
          "description": "Utilizes historical data for trend and pattern analysis to help predict future system behavior.",
          "category": "extended",
          "entities": {
            "historical_data_(prediction)": {
              "name": "Historical Data (Prediction)",
              "type": "data",
              "description": "Past collected information used as input for forecasting."
            },
            "future_behavior": {
              "name": "Future Behavior",
              "type": "data",
              "description": "Anticipated operational characteristics or patterns of a system."
            },
            "ai/ml_technology": {
              "name": "AI/ML Technology",
              "type": "configuration",
              "description": "Artificial Intelligence and Machine Learning algorithms used for predictions."
            },
            "forecasted_metrics": {
              "name": "Forecasted Metrics",
              "type": "data",
              "description": "Performance indicators predicted by AI/ML models."
            },
            "predicted_threshold_breaches": {
              "name": "Predicted Threshold Breaches",
              "type": "data",
              "description": "Anticipated instances where performance metrics exceed predefined limits."
            }
          }
        },
        "historical_data_management": {
          "name": "Historical Data Management",
          "description": "Enables collecting, summarizing, and pruning historical data for long-term manageability.",
          "category": "core",
          "entities": {
            "historical_data_(management)": {
              "name": "Historical Data (Management)",
              "type": "data",
              "description": "Long-term collected information."
            },
            "data_collection": {
              "name": "Data Collection",
              "type": "action",
              "description": "The process of gathering raw data."
            },
            "data_summarization": {
              "name": "Data Summarization",
              "type": "action",
              "description": "The process of aggregating and condensing data."
            },
            "data_pruning": {
              "name": "Data Pruning",
              "type": "action",
              "description": "The process of removing old or irrelevant data to manage storage."
            },
            "long-term_data": {
              "name": "Long-term Data",
              "type": "data",
              "description": "Data retained and managed over extended periods."
            }
          }
        },
        "real-time_and_historical_reporting": {
          "name": "Real-time and Historical Reporting",
          "description": "Combines real-time and historical data to identify trends, predict system behavior, and support informed management decisions.",
          "category": "core",
          "entities": {
            "real-time_reporting": {
              "name": "Real-time Reporting",
              "type": "resource",
              "description": "Reports generated from live, continuously updated data."
            },
            "historical_reporting": {
              "name": "Historical Reporting",
              "type": "resource",
              "description": "Reports generated from past, archived data."
            }
          }
        },
        "granular_data_filtering": {
          "name": "Granular Data Filtering",
          "description": "Allows filtering asset details at a granular level using columns, timescale orders, and 'order by' options.",
          "category": "core",
          "entities": {
            "timescale_filter": {
              "name": "Timescale Filter",
              "type": "configuration",
              "description": "A parameter to narrow down data based on time intervals."
            },
            "data_fields_filter": {
              "name": "Data Fields Filter",
              "type": "configuration",
              "description": "Specific attributes or columns used to refine report data."
            },
            "columns_filter": {
              "name": "Columns Filter",
              "type": "configuration",
              "description": "Report columns used for filtering or ordering data."
            },
            "timescale_orders": {
              "name": "Timescale Orders",
              "type": "configuration",
              "description": "The sequence or arrangement of data based on time."
            },
            "order_by": {
              "name": "Order By",
              "type": "configuration",
              "description": "A general mechanism to sort report data based on selected criteria."
            },
            "filter_tab": {
              "name": "Filter Tab",
              "type": "configuration",
              "description": "A user interface section dedicated to applying data filters."
            }
          }
        },
        "report_export_capabilities": {
          "name": "Report Export Capabilities",
          "description": "Supports exporting reports and pre-configured auto-reports in various formats like PDF, Excel, and CSV.",
          "category": "core",
          "entities": {
            "pdf_format": {
              "name": "PDF Format",
              "type": "configuration",
              "description": "A portable document format for exporting reports."
            },
            "excel_format": {
              "name": "Excel Format",
              "type": "configuration",
              "description": "A spreadsheet format for exporting reports."
            },
            "csv_format": {
              "name": "CSV Format",
              "type": "configuration",
              "description": "A comma-separated values format for exporting reports."
            },
            "export_reports_action": {
              "name": "Export Reports Action",
              "type": "action",
              "description": "The process of saving reports in various file formats."
            },
            "download_report_action": {
              "name": "Download Report Action",
              "type": "action",
              "description": "The process of retrieving a generated report file."
            }
          }
        },
        "pre-configured_report_library": {
          "name": "Pre-configured Report Library",
          "description": "Offers a wide range of multiple pre-configured reports readily available for use.",
          "category": "core",
          "entities": {
            "default_reports": {
              "name": "Default Reports",
              "type": "resource",
              "description": "Standard, pre-built reports available in the system."
            },
            "pre-configured_auto-reports": {
              "name": "Pre-configured Auto-reports",
              "type": "resource",
              "description": "Automated reports that are pre-set with specific configurations."
            }
          }
        },
        "custom_report_creation_and_management": {
          "name": "Custom Report Creation and Management",
          "description": "Users can add new custom reports, and view, edit, or delete existing reports from the reports page.",
          "category": "core",
          "entities": {
            "add_new_report_action": {
              "name": "Add New Report Action",
              "type": "action",
              "description": "The function to initiate the creation of a new custom report."
            },
            "view_existing_report_action": {
              "name": "View Existing Report Action",
              "type": "action",
              "description": "The function to display a previously created or default report."
            },
            "edit_existing_report_action": {
              "name": "Edit Existing Report Action",
              "type": "action",
              "description": "The function to modify the settings or content of an existing report."
            },
            "delete_existing_report_action": {
              "name": "Delete Existing Report Action",
              "type": "action",
              "description": "The function to remove a report from the system."
            },
            "custom_reports_(creation)": {
              "name": "Custom Reports (Creation)",
              "type": "resource",
              "description": "Reports designed or modified by users to meet specific needs."
            },
            "add_report_page": {
              "name": "Add Report Page",
              "type": "configuration",
              "description": "The dedicated user interface for configuring and creating new reports."
            }
          }
        },
        "data_privacy_compliance_(requester_info_masking)": {
          "name": "Data Privacy Compliance (Requester Info Masking)",
          "description": "Admins can hide requester's name, contact, and email in reports to comply with data privacy regulations.",
          "category": "extended",
          "entities": {
            "requester_name": {
              "name": "Requester Name",
              "type": "data",
              "description": "The name of the person who initiated a request, subject to masking."
            },
            "requester_contact": {
              "name": "Requester Contact",
              "type": "data",
              "description": "Contact details of the requester, subject to masking."
            },
            "requester_email": {
              "name": "Requester Email",
              "type": "data",
              "description": "Email address of the requester, subject to masking."
            },
            "mask_toggle_button": {
              "name": "Mask Toggle Button",
              "type": "configuration",
              "description": "A UI control to enable obfuscation of requester information."
            },
            "unmask_toggle_button": {
              "name": "Unmask Toggle Button",
              "type": "configuration",
              "description": "A UI control to disable obfuscation and restore requester information."
            },
            "data_privacy_compliance": {
              "name": "Data Privacy Compliance",
              "type": "configuration",
              "description": "The adherence to regulations protecting sensitive personal information."
            }
          }
        },
        "report_configuration_options": {
          "name": "Report Configuration Options",
          "description": "Allows users to modify reports by adding statistical details, selecting columns, setting 'Show Top N' limits, and defining resolution duration.",
          "category": "core",
          "entities": {
            "configuration_tab": {
              "name": "Configuration Tab",
              "type": "configuration",
              "description": "A section within the report creation interface for setting up report parameters."
            },
            "statistics_configuration": {
              "name": "Statistics Configuration",
              "type": "configuration",
              "description": "An option to include specific statistical details in a report."
            },
            "columns_configuration": {
              "name": "Columns Configuration",
              "type": "configuration",
              "description": "An option to select or define columns for data display in a report."
            },
            "show_top_configuration": {
              "name": "Show Top Configuration",
              "type": "configuration",
              "description": "An option to limit the report results to a specified number of top entries."
            },
            "resolution_configuration": {
              "name": "Resolution Configuration",
              "type": "configuration",
              "description": "An option to define the time granularity (min, hour, day, month) for data in a report."
            }
          }
        },
        "report_filtering_options": {
          "name": "Report Filtering Options",
          "description": "Enables applying filters based on duration, asset tags, incident tags, and assignees to refine report data.",
          "category": "core",
          "entities": {
            "filter_tab": {
              "name": "Filter Tab",
              "type": "configuration",
              "description": "A section within the report creation interface for applying data filters."
            },
            "duration_filter": {
              "name": "Duration Filter",
              "type": "configuration",
              "description": "A filter to specify the time range for the report data."
            },
            "asset_tag_filter": {
              "name": "Asset Tag Filter",
              "type": "configuration",
              "description": "A filter to include data related to specific asset tags."
            },
            "incident_tags_filter": {
              "name": "Incident Tags Filter",
              "type": "configuration",
              "description": "A filter to include data related to specific incident tags."
            },
            "assignee_filter": {
              "name": "Assignee Filter",
              "type": "configuration",
              "description": "A filter to include data related to a specific assignee."
            }
          }
        },
        "availability_reports": {
          "name": "Availability Reports",
          "description": "Analyzes situations where problems occurred, viewable as data tables, line charts, area charts, or bar charts.",
          "category": "core",
          "entities": {
            "availability_report_type": {
              "name": "Availability Report Type",
              "type": "resource",
              "description": "A specific report category focusing on system or service uptime."
            },
            "login_hours_data": {
              "name": "Login Hours Data",
              "type": "data",
              "description": "Data representing the duration of user logins."
            },
            "shift_hours_data": {
              "name": "Shift Hours Data",
              "type": "data",
              "description": "Data representing the duration of operational shifts."
            },
            "availability_percentage_data": {
              "name": "Availability Percentage Data",
              "type": "data",
              "description": "Data indicating the percentage of time a system or service is available."
            },
            "data_table_visualization": {
              "name": "Data Table Visualization",
              "type": "configuration",
              "description": "A display format for report data in rows and columns."
            },
            "line_chart_visualization": {
              "name": "Line Chart Visualization",
              "type": "configuration",
              "description": "A graphical representation of data points connected by lines."
            },
            "area_chart_visualization": {
              "name": "Area Chart Visualization",
              "type": "configuration",
              "description": "A graphical representation similar to a line chart, with the area below the line filled."
            },
            "bar_chart_visualization": {
              "name": "Bar Chart Visualization",
              "type": "configuration",
              "description": "A graphical representation using rectangular bars to show data comparisons."
            }
          }
        },
        "node_summary_report": {
          "name": "Node Summary Report",
          "description": "Provides statistical information about nodes for selected time intervals.",
          "category": "core",
          "entities": {
            "node_summary_report_type": {
              "name": "Node Summary Report Type",
              "type": "resource",
              "description": "A specific report category providing aggregated information about network nodes."
            },
            "node_statistical_information": {
              "name": "Node Statistical Information",
              "type": "data",
              "description": "Aggregated data and metrics pertaining to a network node."
            },
            "total_words_coded_to_node": {
              "name": "Total Words Coded to Node",
              "type": "data",
              "description": "A specific metric showing data volume associated with a node."
            },
            "number_of_sources_coded_at_node": {
              "name": "Number of Sources Coded at Node",
              "type": "data",
              "description": "A specific metric showing the count of data sources linked to a node."
            },
            "number_of_users_coded_at_node": {
              "name": "Number of Users Coded at Node",
              "type": "data",
              "description": "A specific metric showing the count of users associated with a node."
            }
          }
        },
        "event_reports_(specific_&_summary)": {
          "name": "Event Reports (Specific & Summary)",
          "description": "Offers statistical information for specific events and comprehensive statistical data for all events.",
          "category": "core",
          "entities": {
            "event_report_type": {
              "name": "Event Report Type",
              "type": "resource",
              "description": "A specific report category detailing individual events."
            },
            "event_summary_report_type": {
              "name": "Event Summary Report Type",
              "type": "resource",
              "description": "A specific report category providing an overview of all events."
            },
            "event_statistical_information": {
              "name": "Event Statistical Information",
              "type": "data",
              "description": "Data and metrics related to specific events."
            },
            "all_events_statistical_data": {
              "name": "All Events Statistical Data",
              "type": "data",
              "description": "Comprehensive aggregated data for all recorded events."
            }
          }
        },
        "incident_reports_(specific_&_summary)": {
          "name": "Incident Reports (Specific & Summary)",
          "description": "Provides statistical information for specific incidents and comprehensive statistical data for all incidents.",
          "category": "core",
          "entities": {
            "incident_report_type": {
              "name": "Incident Report Type",
              "type": "resource",
              "description": "A specific report category detailing individual incidents."
            },
            "incident_summary_report_type": {
              "name": "Incident Summary Report Type",
              "type": "resource",
              "description": "A specific report category providing an overview of all incidents."
            },
            "incident_statistical_information": {
              "name": "Incident Statistical Information",
              "type": "data",
              "description": "Data and metrics related to specific incidents."
            },
            "all_incidents_statistical_data": {
              "name": "All Incidents Statistical Data",
              "type": "data",
              "description": "Comprehensive aggregated data for all recorded incidents."
            }
          }
        },
        "depreciation_report": {
          "name": "Depreciation Report",
          "description": "Generates reports for asset depreciation based on a selected financial year start date.",
          "category": "core",
          "entities": {
            "depreciation_report_type": {
              "name": "Depreciation Report Type",
              "type": "resource",
              "description": "A specific report category detailing the decline in asset value over time."
            },
            "asset_depreciation_information": {
              "name": "Asset Depreciation Information",
              "type": "data",
              "description": "Data showing the decrease in value of assets."
            },
            "financial_year_start_date": {
              "name": "Financial Year Start Date",
              "type": "configuration",
              "description": "A configuration parameter to define the beginning of the financial period for the report."
            }
          }
        },
        "location_report": {
          "name": "Location Report",
          "description": "Manages and tracks asset locations by exporting address book details.",
          "category": "core",
          "entities": {
            "location_report_type": {
              "name": "Location Report Type",
              "type": "resource",
              "description": "A specific report category providing details about asset geographical placement."
            },
            "asset_location_details": {
              "name": "Asset Location Details",
              "type": "data",
              "description": "Information regarding the physical whereabouts of assets."
            },
            "address_book_details": {
              "name": "Address Book Details",
              "type": "data",
              "description": "Data from the organizational address book used for location information."
            },
            "export_address_book_action": {
              "name": "Export Address Book Action",
              "type": "action",
              "description": "The process of extracting location data from the address book."
            },
            "import_location_details_action": {
              "name": "Import Location Details Action",
              "type": "action",
              "description": "The process of adding location data into the system."
            }
          }
        },
        "detailed_asset_report": {
          "name": "Detailed Asset Report",
          "description": "Provides comprehensive details on asset hardware, software, and activity logs.",
          "category": "core",
          "entities": {
            "detailed_asset_report_type": {
              "name": "Detailed Asset Report Type",
              "type": "resource",
              "description": "A specific report category offering comprehensive information about individual assets."
            },
            "asset_hardware_details": {
              "name": "Asset Hardware Details",
              "type": "data",
              "description": "Information about the physical components of an asset."
            },
            "asset_software_details": {
              "name": "Asset Software Details",
              "type": "data",
              "description": "Information about the software installed on an asset."
            },
            "asset_activity_log": {
              "name": "Asset Activity Log",
              "type": "data",
              "description": "A record of actions and events related to an asset."
            },
            "selected_tags_filter": {
              "name": "Selected Tags Filter",
              "type": "configuration",
              "description": "A filter to include assets based on specific tags."
            },
            "duration_filter_(detailed_asset_report)": {
              "name": "Duration Filter (Detailed Asset Report)",
              "type": "configuration",
              "description": "A filter to specify the time range for asset activity data."
            },
            "asset_name_data": {
              "name": "Asset Name Data",
              "type": "data",
              "description": "The identifier name of an asset."
            },
            "ip_address_data": {
              "name": "IP Address Data",
              "type": "data",
              "description": "The network address assigned to an asset."
            },
            "inventory_details_data": {
              "name": "Inventory Details Data",
              "type": "data",
              "description": "Comprehensive information about an asset's components and attributes."
            }
          }
        },
        "asset_ticket_report": {
          "name": "Asset Ticket Report",
          "description": "Segregates asset-related and ticket-related data, with functionalities like scheduling, saving, and previewing.",
          "category": "core",
          "entities": {
            "asset_ticket_report_type": {
              "name": "Asset Ticket Report Type",
              "type": "resource",
              "description": "A specific report category combining asset and ticket-related data."
            },
            "asset-related_data": {
              "name": "Asset-related Data",
              "type": "data",
              "description": "Information pertaining to assets within the context of tickets."
            },
            "ticket-related_data": {
              "name": "Ticket-related Data",
              "type": "data",
              "description": "Information pertaining to support tickets linked to assets."
            },
            "product_categories_filter": {
              "name": "Product Categories Filter",
              "type": "configuration",
              "description": "A filter to narrow down data based on specific product classifications."
            },
            "report_scheduling_action": {
              "name": "Report Scheduling Action",
              "type": "action",
              "description": "The ability to set up reports to run automatically at predefined intervals."
            },
            "report_saving_action": {
              "name": "Report Saving Action",
              "type": "action",
              "description": "The ability to store report configurations or generated reports for future use."
            },
            "report_previewing_action": {
              "name": "Report Previewing Action",
              "type": "action",
              "description": "The ability to view a report's output before final generation or saving."
            }
          }
        },
        "software_reports_suite": {
          "name": "Software Reports Suite",
          "description": "Includes reports for tracking installed vs. purchased software, detailed software information, and software by publisher.",
          "category": "core",
          "entities": {
            "installed_vs_purchased_report_type": {
              "name": "Installed vs Purchased Report Type",
              "type": "resource",
              "description": "A report comparing software licenses purchased against actual installations."
            },
            "software_detail_report_type": {
              "name": "Software Detail Report Type",
              "type": "resource",
              "description": "A report providing in-depth information about specific software."
            },
            "software_by_publisher_report_type": {
              "name": "Software by Publisher Report Type",
              "type": "resource",
              "description": "A report categorizing software based on its vendor or publisher."
            },
            "software_name_data": {
              "name": "Software Name Data",
              "type": "data",
              "description": "The official name of a software application."
            },
            "purchase_details_data": {
              "name": "Purchase Details Data",
              "type": "data",
              "description": "Information about software licenses, acquisition dates, and costs."
            },
            "installation_status_data": {
              "name": "Installation Status Data",
              "type": "data",
              "description": "Information indicating whether software is installed or not."
            },
            "compliance_metrics_data": {
              "name": "Compliance Metrics Data",
              "type": "data",
              "description": "Data measuring adherence to software licensing agreements."
            },
            "software_status_data_(discovered/managed)": {
              "name": "Software Status Data (Discovered/Managed)",
              "type": "data",
              "description": "Classification of software based on how it was identified or added."
            },
            "application_name_data": {
              "name": "Application Name Data",
              "type": "data",
              "description": "The name of a software application."
            },
            "vendor_data": {
              "name": "Vendor Data",
              "type": "data",
              "description": "The company or entity that developed or sells the software."
            },
            "help_link_data": {
              "name": "Help Link Data",
              "type": "data",
              "description": "A URL providing access to software-related help or documentation."
            },
            "asset_tag_filter_(software_report)": {
              "name": "Asset Tag Filter (Software Report)",
              "type": "configuration",
              "description": "A filter to include software data associated with specific asset tags."
            },
            "custom_criteria_filter_(software_report)": {
              "name": "Custom Criteria Filter (Software Report)",
              "type": "configuration",
              "description": "User-defined conditions for filtering software report data."
            }
          }
        },
        "itsm_ticket_summary_report": {
          "name": "ITSM Ticket Summary Report",
          "description": "Provides key metrics and statistics related to IT service desk tickets (incidents, service requests, changes, problems).",
          "category": "core",
          "entities": {
            "itsm_ticket_summary_report_type": {
              "name": "ITSM Ticket Summary Report Type",
              "type": "resource",
              "description": "A report providing an overview of key metrics for IT Service Management tickets."
            },
            "ticket_metrics": {
              "name": "Ticket Metrics",
              "type": "data",
              "description": "Key performance indicators related to IT service desk tickets."
            },
            "ticket_statistics": {
              "name": "Ticket Statistics",
              "type": "data",
              "description": "Numerical data and summaries related to IT service desk tickets."
            },
            "incidents_data_(itsm)": {
              "name": "Incidents Data (ITSM)",
              "type": "data",
              "description": "Information on unplanned interruptions to a service."
            },
            "service_requests_data": {
              "name": "Service Requests Data",
              "type": "data",
              "description": "Information on formal requests from users for something to be provided."
            },
            "changes_data": {
              "name": "Changes Data",
              "type": "data",
              "description": "Information on additions, modifications, or removals of anything that could affect IT services."
            },
            "problems_data": {
              "name": "Problems Data",
              "type": "data",
              "description": "Information on the unknown cause of one or more incidents."
            },
            "specified_timeframe_filter": {
              "name": "Specified Timeframe Filter",
              "type": "configuration",
              "description": "A filter to define the period for which ticket data is summarized."
            }
          }
        },
        "imacd_summary_report": {
          "name": "IMACD Summary Report",
          "description": "Offers a consolidated overview of installation, movement, addition, changes, and destroy processes.",
          "category": "core",
          "entities": {
            "imacd_summary_report_type": {
              "name": "IMACD Summary Report Type",
              "type": "resource",
              "description": "A report summarizing metrics for Installation, Movement, Addition, Change, and Destroy processes."
            },
            "installation_process_metrics": {
              "name": "Installation Process Metrics",
              "type": "data",
              "description": "Data related to the setup and deployment of new assets or services."
            },
            "movement_process_metrics": {
              "name": "Movement Process Metrics",
              "type": "data",
              "description": "Data related to the relocation of assets or services."
            },
            "addition_process_metrics": {
              "name": "Addition Process Metrics",
              "type": "data",
              "description": "Data related to the incorporation of new components or features."
            },
            "changes_process_metrics": {
              "name": "Changes Process Metrics",
              "type": "data",
              "description": "Data related to modifications made to existing assets or services."
            },
            "destroy_process_metrics": {
              "name": "Destroy Process Metrics",
              "type": "data",
              "description": "Data related to the decommissioning or disposal of assets or services."
            }
          }
        },
        "ai/ml-driven_forecast_and_prediction_reports": {
          "name": "AI/ML-driven Forecast and Prediction Reports",
          "description": "Leverages AI/ML to forecast resource utilization trends, summarize predictions, and display comparative graphs of past and predicted data.",
          "category": "extended",
          "entities": {
            "forecast_prediction_report_type": {
              "name": "Forecast Prediction Report Type",
              "type": "resource",
              "description": "A report leveraging AI/ML to predict future resource utilization."
            },
            "forecast_summary_report_type": {
              "name": "Forecast Summary Report Type",
              "type": "resource",
              "description": "A report summarizing AI/ML-driven resource utilization forecasts."
            },
            "forecast_report_(aiops)_type": {
              "name": "Forecast Report (AIOps) Type",
              "type": "resource",
              "description": "An AIOps report type displaying long-term trends based on forecasting models."
            },
            "forecast_trend_report_(aiops)_type": {
              "name": "Forecast Trend Report (AIOps) Type",
              "type": "resource",
              "description": "An AIOps report type analyzing historical data to project future trends."
            },
            "prediction_report_(aiops)_type": {
              "name": "Prediction Report (AIOps) Type",
              "type": "resource",
              "description": "An AIOps report type focusing on short-term anomaly detection and predicted values."
            },
            "ai/ml_models": {
              "name": "AI/ML Models",
              "type": "configuration",
              "description": "The underlying algorithms and systems used for generating forecasts and predictions."
            },
            "resource_utilization_trends": {
              "name": "Resource Utilization Trends",
              "type": "data",
              "description": "Patterns of how resources (CPU, memory, etc.) are consumed over time."
            },
            "predicted_data_categories": {
              "name": "Predicted Data Categories",
              "type": "data",
              "description": "Classifications of forecasted data based on utilization levels (e.g., underutilized, optimally utilized)."
            },
            "configured_thresholds": {
              "name": "Configured Thresholds",
              "type": "configuration",
              "description": "Predefined limits or values used to categorize or summarize predicted data."
            },
            "usage_trends_buckets": {
              "name": "Usage Trends Buckets",
              "type": "data",
              "description": "Groupings of forecasted data based on patterns of resource consumption."
            },
            "historical_time-series_data": {
              "name": "Historical Time-series Data",
              "type": "data",
              "description": "Sequential data points collected over time, used for trend analysis."
            },
            "minimum_forecast_value": {
              "name": "Minimum Forecast Value",
              "type": "data",
              "description": "The lowest predicted value in a forecast trend."
            },
            "maximum_forecast_value": {
              "name": "Maximum Forecast Value",
              "type": "data",
              "description": "The highest predicted value in a forecast trend."
            },
            "average_forecast_value": {
              "name": "Average Forecast Value",
              "type": "data",
              "description": "The mean predicted value in a forecast trend."
            },
            "current_performance_statistics": {
              "name": "Current Performance Statistics",
              "type": "data",
              "description": "Real-time or recent data on system performance."
            },
            "predicted_values": {
              "name": "Predicted Values",
              "type": "data",
              "description": "Future data points estimated by prediction models."
            },
            "adaptive_thresholds": {
              "name": "Adaptive Thresholds",
              "type": "configuration",
              "description": "Dynamically adjusted limits used for identifying anomalies."
            },
            "anomaly_detection_action": {
              "name": "Anomaly Detection Action",
              "type": "action",
              "description": "The process of identifying unusual patterns or deviations from expected behavior."
            }
          }
        },
        "capacity_planning_reports_(server,_device,_link)": {
          "name": "Capacity Planning Reports (Server, Device, Link)",
          "description": "Assesses resource utilization (CPU, memory, disk, interface) for servers, devices, and links, categorizing for proactive planning.",
          "category": "extended",
          "entities": {
            "server_capacity_planning_report_type": {
              "name": "Server Capacity Planning Report Type",
              "type": "resource",
              "description": "A report assessing resource utilization for servers to aid in future planning."
            },
            "device_capacity_planning_report_type": {
              "name": "Device Capacity Planning Report Type",
              "type": "resource",
              "description": "A report assessing resource utilization for devices to aid in future planning."
            },
            "link_capacity_planning_report_type": {
              "name": "Link Capacity Planning Report Type",
              "type": "resource",
              "description": "A report assessing utilization of network interfaces/links for future planning."
            },
            "monitoring_data": {
              "name": "Monitoring Data",
              "type": "data",
              "description": "Information collected from systems to observe their performance and resource usage."
            },
            "server_resource_utilization_data": {
              "name": "Server Resource Utilization Data",
              "type": "data",
              "description": "Data on how much CPU, memory, and disk space servers are consuming."
            },
            "device_resource_utilization_data": {
              "name": "Device Resource Utilization Data",
              "type": "data",
              "description": "Data on how much CPU, memory, and disk space devices are consuming."
            },
            "interface_utilization_data": {
              "name": "Interface Utilization Data",
              "type": "data",
              "description": "Data on the bandwidth usage of network interfaces."
            },
            "polling_data": {
              "name": "Polling Data",
              "type": "data",
              "description": "Information collected by regularly querying devices or systems."
            },
            "resource_utilization_categories": {
              "name": "Resource Utilization Categories",
              "type": "data",
              "description": "Classifications of resource usage (underutilized, optimally utilized, overutilized)."
            }
          }
        },
        "ticket_escalation_notification_report": {
          "name": "Ticket Escalation Notification Report",
          "description": "Generates statistical data on ticket notifications escalated, analyzing trends across various columns.",
          "category": "core",
          "entities": {
            "ticket_escalation_notification_report_type": {
              "name": "Ticket Escalation Notification Report Type",
              "type": "resource",
              "description": "A report providing statistics on ticket notifications that have been escalated."
            },
            "ticket_notification_statistical_data": {
              "name": "Ticket Notification Statistical Data",
              "type": "data",
              "description": "Aggregated data and metrics related to escalated ticket notifications."
            },
            "chosen_timeframe_filter": {
              "name": "Chosen Timeframe Filter",
              "type": "configuration",
              "description": "A filter to specify the period for which escalation data is reported."
            },
            "user_data_(escalation_report)": {
              "name": "User Data (Escalation Report)",
              "type": "data",
              "description": "Information about the user associated with an escalated ticket."
            },
            "requester_data_(escalation_report)": {
              "name": "Requester Data (Escalation Report)",
              "type": "data",
              "description": "Information about the requester associated with an escalated ticket."
            },
            "impacted_services_data": {
              "name": "Impacted Services Data",
              "type": "data",
              "description": "Information about services affected by an escalated ticket."
            }
          }
        },
        "nccm_reports_(configuration_download_&_jobs_account_audit)": {
          "name": "NCCM Reports (Configuration Download & Jobs Account Audit)",
          "description": "Provides detailed summaries of network device configuration download activities and audit information for user actions during job executions.",
          "category": "core",
          "entities": {
            "configuration_download_result_report_type": {
              "name": "Configuration Download Result Report Type",
              "type": "resource",
              "description": "A report summarizing the outcomes of network device configuration downloads."
            },
            "jobs_account_audit_report_type": {
              "name": "Jobs Account Audit Report Type",
              "type": "resource",
              "description": "A report auditing user actions during network configuration management job executions."
            },
            "configuration_download_activities_summary": {
              "name": "Configuration Download Activities Summary",
              "type": "data",
              "description": "An overview of all operations related to downloading device configurations."
            },
            "download_status_data_(success/failure)": {
              "name": "Download Status Data (Success/Failure)",
              "type": "data",
              "description": "Information indicating whether a configuration download was successful or not."
            },
            "device_details_data_(nccm)": {
              "name": "Device Details Data (NCCM)",
              "type": "data",
              "description": "Specific information about the network devices involved in NCCM operations."
            },
            "encountered_errors_data": {
              "name": "Encountered Errors Data",
              "type": "data",
              "description": "Details of any issues or failures during configuration downloads."
            },
            "user_actions_audit_information": {
              "name": "User Actions Audit Information",
              "type": "data",
              "description": "Records of actions performed by users during job executions."
            },
            "device_ip_address_data_(nccm)": {
              "name": "Device IP Address Data (NCCM)",
              "type": "data",
              "description": "The network address of devices involved in NCCM operations."
            },
            "account_information_data": {
              "name": "Account Information Data",
              "type": "data",
              "description": "Details of user accounts associated with NCCM jobs."
            },
            "connection_protocol_data": {
              "name": "Connection Protocol Data",
              "type": "data",
              "description": "The communication method used for NCCM operations (e.g., SSH, Telnet)."
            },
            "job_type_data": {
              "name": "Job Type Data",
              "type": "data",
              "description": "The classification or nature of the NCCM job (e.g., backup, restore)."
            },
            "failure_messages_data": {
              "name": "Failure Messages Data",
              "type": "data",
              "description": "Specific error messages indicating why a job failed."
            }
          }
        },
        "aiops_reports_module": {
          "name": "AIOps Reports Module",
          "description": "A dedicated interface for interpreting and acting on AI-generated performance insights, including forecasted metrics, capacity planning, and threshold breaches.",
          "category": "extended",
          "entities": {
            "aiops_reports_module_interface": {
              "name": "AIOps Reports Module Interface",
              "type": "resource",
              "description": "The main user interface for accessing AIOps-driven insights and reports."
            },
            "operational_trends_data": {
              "name": "Operational Trends Data",
              "type": "data",
              "description": "Patterns and directions observed in system operations over time."
            },
            "forecasted_metrics_data_(aiops)": {
              "name": "Forecasted Metrics Data (AIOps)",
              "type": "data",
              "description": "Key performance indicators predicted by AIOps models."
            },
            "capacity_planning_requirements_data": {
              "name": "Capacity Planning Requirements Data",
              "type": "data",
              "description": "Information on future resource needs identified by AIOps."
            },
            "predicted_threshold_breaches_data_(aiops)": {
              "name": "Predicted Threshold Breaches Data (AIOps)",
              "type": "data",
              "description": "Anticipated instances where performance metrics exceed predefined limits, identified by AIOps."
            },
            "report_category_selection_action": {
              "name": "Report Category Selection Action",
              "type": "action",
              "description": "The process of choosing a specific type of report from available categories."
            },
            "relevant_filters_(aiops)": {
              "name": "Relevant Filters (AIOps)",
              "type": "configuration",
              "description": "Configuration parameters used to narrow down data for AIOps reports."
            }
          }
        },
        "on-demand_adhoc_reports": {
          "name": "On-demand Adhoc Reports",
          "description": "Provides lightweight, temporary reports for quick verification of specific states or metrics without extensive configuration or persistence.",
          "category": "core",
          "entities": {
            "adhoc_reports_option": {
              "name": "Adhoc Reports Option",
              "type": "action",
              "description": "A user interface element to access quick, temporary reports."
            },
            "forecast_output_data": {
              "name": "Forecast Output Data",
              "type": "data",
              "description": "The results of a quick forecast generated on demand."
            },
            "prediction_output_data": {
              "name": "Prediction Output Data",
              "type": "data",
              "description": "The results of a quick prediction generated on demand."
            },
            "trends_data_(adhoc)": {
              "name": "Trends Data (Adhoc)",
              "type": "data",
              "description": "Observed patterns in data displayed in adhoc reports."
            },
            "anomalies_data_(adhoc)": {
              "name": "Anomalies Data (Adhoc)",
              "type": "data",
              "description": "Deviations from normal patterns displayed in adhoc reports."
            },
            "non-persistent_reports": {
              "name": "Non-persistent Reports",
              "type": "configuration",
              "description": "Reports that are not saved in the system by default after viewing."
            }
          }
        },
        "adhoc_report_types_(forecast_&_prediction)": {
          "name": "Adhoc Report Types (Forecast & Prediction)",
          "description": "Offers specific adhoc reports for long-term forecasting (180-day model) and short-term anomaly detection.",
          "category": "extended",
          "entities": {
            "adhoc_forecast_report_type": {
              "name": "Adhoc Forecast Report Type",
              "type": "resource",
              "description": "A quick report type focusing on long-term trends and future projections."
            },
            "adhoc_prediction_report_type": {
              "name": "Adhoc Prediction Report Type",
              "type": "resource",
              "description": "A quick report type focusing on short-term anomaly detection and predicted values."
            },
            "selected_metric_(adhoc)": {
              "name": "Selected Metric (Adhoc)",
              "type": "configuration",
              "description": "The specific performance indicator chosen for an adhoc report."
            },
            "selected_component_(adhoc)": {
              "name": "Selected Component (Adhoc)",
              "type": "configuration",
              "description": "The specific system part (e.g., CPU, port) chosen for an adhoc report."
            },
            "180-day_forecasting_model": {
              "name": "180-day Forecasting Model",
              "type": "configuration",
              "description": "A forecasting algorithm based on 180 days of historical data."
            },
            "recent_metric_history_data": {
              "name": "Recent Metric History Data",
              "type": "data",
              "description": "Recently collected data for a metric, used for short-term predictions."
            }
          }
        },
        "adhoc_report_input_parameters": {
          "name": "Adhoc Report Input Parameters",
          "description": "Allows users to define adhoc reports by selecting specific assets, resources, and performance statistics.",
          "category": "core",
          "entities": {
            "asset_input_(adhoc)": {
              "name": "Asset Input (Adhoc)",
              "type": "configuration",
              "description": "A parameter to select a specific asset for an adhoc report."
            },
            "resource_input_(adhoc)": {
              "name": "Resource Input (Adhoc)",
              "type": "configuration",
              "description": "A parameter to select a specific resource (e.g., port, CPU) for an adhoc report."
            },
            "statistics_input_(adhoc)": {
              "name": "Statistics Input (Adhoc)",
              "type": "configuration",
              "description": "A parameter to select a specific performance metric (e.g., CPU Utilization) for an adhoc report."
            },
            "view_report_action_(adhoc)": {
              "name": "View Report Action (Adhoc)",
              "type": "action",
              "description": "The action to generate and display an adhoc report based on selected parameters."
            }
          }
        },
        "adhoc_report_download": {
          "name": "Adhoc Report Download",
          "description": "Enables downloading generated adhoc reports for offline analysis or sharing.",
          "category": "core",
          "entities": {
            "download_adhoc_report_action": {
              "name": "Download Adhoc Report Action",
              "type": "action",
              "description": "The process of saving a generated adhoc report to a local device."
            },
            "offline_analysis_purpose": {
              "name": "Offline Analysis Purpose",
              "type": "action",
              "description": "The reason for downloading a report, enabling review without system access."
            },
            "sharing_purpose": {
              "name": "Sharing Purpose",
              "type": "action",
              "description": "The reason for downloading a report, enabling distribution to others."
            }
          }
        }
      },
      "workflows": {
        "viewing_and_analyzing_reports": {
          "name": "Viewing and Analyzing Reports",
          "description": "Users view and interpret various pre-configured or custom reports to gain insights into performance, faults, trends, and predictions for informed decision-making, utilizing both real-time and historical data."
        },
        "managing_reports": {
          "name": "Managing Reports",
          "description": "Users can list, add, view, edit, and delete existing report configurations from a centralized reports page."
        },
        "creating_custom_reports": {
          "name": "Creating Custom Reports",
          "description": "Users define new reports by selecting specific categories, configuring statistical details, columns, and applying granular filters based on duration, asset tags, and other relevant criteria."
        },
        "configuring_report_data_privacy": {
          "name": "Configuring Report Data Privacy",
          "description": "Administrators can enable or disable the masking (obfuscation) of sensitive requester information (name, contact, email) within reports to ensure data privacy compliance."
        },
        "generating_aiops-specific_reports": {
          "name": "Generating AIOps-Specific Reports",
          "description": "Users generate specialized reports leveraging AI/ML models for forecasting resource utilization, capacity planning, and predicting threshold breaches, including forecast, summary, and trend reports tailored for proactive monitoring and anomaly detection."
        },
        "generating_adhoc_reports": {
          "name": "Generating Adhoc Reports",
          "description": "Users quickly generate lightweight, on-demand forecast or prediction reports for specific assets, resources, and metrics without extensive configuration, primarily for immediate verification of trends or anomalies."
        },
        "exporting_reports": {
          "name": "Exporting Reports",
          "description": "Users can export generated reports, including pre-configured and auto-reports, into various formats such as PDF, Excel, or CSV for offline analysis and sharing."
        }
      }
    },
    "event_management": {
      "name": "Event Management",
      "description": "The Event Management module actively monitors IT infrastructure to detect, categorize, and manage events, leveraging AI for advanced detection, suppression, and correlation to facilitate timely action.",
      "category": "unknown",
      "features": {
        "event_detection_and_monitoring": {
          "name": "Event Detection and Monitoring",
          "description": "The core capability to detect and monitor all changes, activities, and anomalies across various infrastructure components (CI items, software licensing/performance, application performance, server performance) through both active and passive monitoring.",
          "category": "core",
          "entities": {
            "event": {
              "name": "Event",
              "type": "data",
              "description": "A detected change or activity within the infrastructure that may require attention."
            },
            "ci_items": {
              "name": "CI Items",
              "type": "resource",
              "description": "Configuration items such as laptops, desktops, software, applications, and servers that are monitored."
            },
            "infrastructure": {
              "name": "Infrastructure",
              "type": "resource",
              "description": "The overall IT environment where changes and activities are monitored."
            },
            "active_monitoring": {
              "name": "Active Monitoring",
              "type": "action",
              "description": "Proactive monitoring of the status and availability of infrastructure items."
            },
            "passive_monitoring": {
              "name": "Passive Monitoring",
              "type": "action",
              "description": "Detection and correlation of operational alerts based on configured thresholds and triggers."
            },
            "anomaly": {
              "name": "Anomaly",
              "type": "data",
              "description": "A deviation or change observed within the infrastructure that might indicate an issue."
            }
          }
        },
        "threshold-based_anomaly_identification": {
          "name": "Threshold-based Anomaly Identification",
          "description": "Utilizes configurable and built-in thresholds (basic, informational, major, performance, minor, critical) to identify, categorize, and report anomalies and threshold breaches.",
          "category": "core",
          "entities": {
            "threshold": {
              "name": "Threshold",
              "type": "configuration",
              "description": "Predefined limits or values used to categorize anomalies and detect breaches (e.g., minor, major, critical)."
            },
            "event_category": {
              "name": "Event Category",
              "type": "data",
              "description": "Classification of events based on their severity or type (e.g., basic, informational, major, performance)."
            },
            "monitoring_node": {
              "name": "Monitoring Node",
              "type": "resource",
              "description": "Specific points or devices within the infrastructure that are monitored."
            },
            "component": {
              "name": "Component",
              "type": "resource",
              "description": "Sub-elements or parts of monitoring nodes that are subject to threshold-based monitoring."
            }
          }
        },
        "notification_and_incident_generation": {
          "name": "Notification and Incident Generation",
          "description": "Automatically triggers notifications (e.g., emails, SMS) or converts events into incidents based on pre-configured triggers when anomalies or threshold breaches occur.",
          "category": "core",
          "entities": {
            "trigger": {
              "name": "Trigger",
              "type": "configuration",
              "description": "A configured rule that initiates an action (e.g., notification, incident creation) when specific conditions are met."
            },
            "notification": {
              "name": "Notification",
              "type": "data",
              "description": "An alert or message sent to users or systems when an event occurs or a trigger is activated."
            },
            "incident": {
              "name": "Incident",
              "type": "data",
              "description": "A formal record of an unplanned interruption to an IT service or a reduction in the quality of an IT service, often generated from an event."
            },
            "ticket": {
              "name": "Ticket",
              "type": "data",
              "description": "A record created for an incident, often used for tracking and resolution."
            }
          }
        },
        "event_listing_and_filtering": {
          "name": "Event Listing and Filtering",
          "description": "Provides a dedicated user interface to list all events with details (Issue, Date, Node, Resource, Event ID) and offers various default filters (Critical, Major, Minor, Acknowledged, Ticketed, Priority, Root, NCCM, date) for efficient management.",
          "category": "core",
          "entities": {
            "events_page": {
              "name": "Events Page",
              "type": "resource",
              "description": "A user interface displaying a list of all detected events."
            },
            "event_attributes": {
              "name": "Event Attributes",
              "type": "data",
              "description": "Data points associated with each event for display and identification (e.g., Issue, Date, Node, Resource, Event ID)."
            },
            "filter": {
              "name": "Filter",
              "type": "configuration",
              "description": "Criteria used to narrow down the list of events displayed (e.g., severity, status, source)."
            },
            "search_option": {
              "name": "Search Option",
              "type": "action",
              "description": "Functionality to find specific events based on keywords or criteria."
            }
          }
        },
        "event_management_actions": {
          "name": "Event Management Actions",
          "description": "Enables users to perform quick actions on events directly from the interface, including Analyze (view impact/details), Acknowledge (with comments), Diagnosis (Ping, SNMP Walk, Trace Route), Create Ticket, Clear, and view Activity Log.",
          "category": "core",
          "entities": {
            "analyse": {
              "name": "Analyse",
              "type": "action",
              "description": "An action to view detailed information about an event, including impact services, asset details, and statistics, to aid in analysis."
            },
            "acknowledge": {
              "name": "Acknowledge",
              "type": "action",
              "description": "An action to mark an event as being addressed, often with a comment, to inform other users."
            },
            "diagnosis": {
              "name": "Diagnosis",
              "type": "action",
              "description": "An action to perform active diagnostic tests (e.g., Ping, SNMP Walk, Trace Route) related to an event."
            },
            "create_ticket": {
              "name": "Create Ticket",
              "type": "action",
              "description": "An action to manually create an incident ticket from an event."
            },
            "clear": {
              "name": "Clear",
              "type": "action",
              "description": "An action to remove an event from the active list, moving it to a historical view."
            },
            "activity_log": {
              "name": "Activity Log",
              "type": "action",
              "description": "An action to view the historical record of an event, including all actions taken on it."
            },
            "quick_action_tool": {
              "name": "Quick Action Tool",
              "type": "resource",
              "description": "A user interface element providing immediate access to common actions for an event."
            }
          }
        },
        "event_data_export": {
          "name": "Event Data Export",
          "description": "Allows users to download event data for reporting or further analysis.",
          "category": "core",
          "entities": {
            "download_event_data": {
              "name": "Download Event Data",
              "type": "action",
              "description": "An action to export event data from the system."
            },
            "date_filter": {
              "name": "Date Filter",
              "type": "configuration",
              "description": "A configuration option to specify a date range for event data export."
            }
          }
        },
        "aiops_anomaly_event_detection": {
          "name": "AIOps Anomaly Event Detection",
          "description": "An advanced capability that uses a prediction model and machine learning to generate adaptive thresholds, detect deviations from expected behavior in real-time, and raise anomaly events, which can automatically generate tickets.",
          "category": "extended",
          "entities": {
            "aiops_configuration": {
              "name": "AIOps Configuration",
              "type": "configuration",
              "description": "Settings and parameters for the Artificial Intelligence for IT Operations module."
            },
            "prediction_model": {
              "name": "Prediction Model",
              "type": "configuration",
              "description": "A machine learning model that learns typical behavior from historical data to predict future states and identify anomalies."
            },
            "adaptive_threshold": {
              "name": "Adaptive Threshold",
              "type": "configuration",
              "description": "Dynamically adjusted thresholds generated by machine learning, based on historical data and expected behavior."
            },
            "live_polled_value": {
              "name": "Live Polled Value",
              "type": "data",
              "description": "Real-time data collected from monitored resources."
            },
            "historical_data": {
              "name": "Historical Data",
              "type": "data",
              "description": "Past performance data used by the prediction model for learning and establishing baselines."
            },
            "anomaly_event": {
              "name": "Anomaly Event",
              "type": "data",
              "description": "A specific type of event generated when the prediction model detects a deviation from expected behavior."
            },
            "model_learning": {
              "name": "Model Learning",
              "type": "action",
              "description": "The process where the prediction model analyzes historical data to understand typical metric behavior and compute thresholds."
            },
            "threshold_comparison": {
              "name": "Threshold Comparison",
              "type": "action",
              "description": "The process of continuously comparing live polled data against model-generated adaptive thresholds."
            },
            "anomaly_trigger": {
              "name": "Anomaly Trigger",
              "type": "action",
              "description": "The process of flagging an anomaly and raising an event when live polled values breach the adaptive upper or lower thresholds."
            }
          }
        },
        "event_suppression": {
          "name": "Event Suppression",
          "description": "A mechanism designed to reduce alert fatigue by suppressing known, expected, or repetitive events within specific time windows, preventing unnecessary notifications while still logging the events.",
          "category": "extended",
          "entities": {
            "suppressed_event": {
              "name": "Suppressed Event",
              "type": "data",
              "description": "An event that is logged but prevented from triggering notifications or tickets due to configured suppression rules."
            },
            "suppression_logic": {
              "name": "Suppression Logic",
              "type": "configuration",
              "description": "The rules or criteria (e.g., time-based, seasonal) used to identify and suppress events."
            },
            "time_window": {
              "name": "Time Window",
              "type": "configuration",
              "description": "A defined period during which certain events are suppressed."
            },
            "seasonal_event_suppression_toggle": {
              "name": "Seasonal Event Suppression Toggle",
              "type": "configuration",
              "description": "A configuration switch to enable or disable seasonal event suppression."
            },
            "advanced_resource_configuration_(arc)_module": {
              "name": "Advanced Resource Configuration (ARC) Module",
              "type": "resource",
              "description": "The module where advanced resource-specific configurations, including event suppression, are managed."
            }
          }
        },
        "event_association": {
          "name": "Event Association",
          "description": "An advanced feature that correlates multiple related events across systems to identify common causes or impact zones, group events meaningfully, detect root causes, and dynamically build logical topologies based on historical event patterns.",
          "category": "extended",
          "entities": {
            "associated_event": {
              "name": "Associated Event",
              "type": "data",
              "description": "Events that are grouped together based on learned correlation rules, indicating a common cause or impact."
            },
            "correlation_rule": {
              "name": "Correlation Rule",
              "type": "configuration",
              "description": "A rule defining relationships between events, learned through event association mining, to identify common causes."
            },
            "event_association_mining": {
              "name": "Event Association Mining",
              "type": "action",
              "description": "The process of analyzing historical event data to identify patterns and recurring relationships between events."
            },
            "event_history": {
              "name": "Event History",
              "type": "data",
              "description": "Historical event data used by AIOps to identify patterns and relationships for event association."
            },
            "confidence_(%)": {
              "name": "Confidence (%)",
              "type": "configuration",
              "description": "A configuration parameter indicating the statistical likelihood that one event is related to another within an association rule."
            },
            "support_value": {
              "name": "Support Value",
              "type": "configuration",
              "description": "A configuration parameter representing the minimum frequency a pattern must occur in observed data to be considered significant for association."
            },
            "statistic_(metric)": {
              "name": "Statistic (Metric)",
              "type": "configuration",
              "description": "The specific performance metric (e.g., CPU utilization, bandwidth) used as a basis for event association."
            },
            "parent-child_event_relationship": {
              "name": "Parent-Child Event Relationship",
              "type": "data",
              "description": "A hierarchical display of associated events, where one event is identified as the root cause (parent) and others as related impacts (children)."
            },
            "logical_topology": {
              "name": "Logical Topology",
              "type": "data",
              "description": "A dynamic representation of event flows and dependencies between systems, built based on learned event associations."
            }
          }
        }
      },
      "workflows": {
        "event_detection_and_categorization": {
          "name": "Event Detection and Categorization",
          "description": "The system continuously monitors infrastructure and CI items, detects changes or anomalies (e.g., threshold breaches), extracts necessary data, and categorizes these events (e.g., basic, informational, major, performance) based on configured thresholds."
        },
        "event_notification_and_incident_generation": {
          "name": "Event Notification and Incident Generation",
          "description": "Based on configured triggers, detected and categorized events can automatically generate notifications (e.g., alerts, emails, SMS) or be converted into incidents, ensuring timely awareness and action."
        },
        "event_management_and_user_actions": {
          "name": "Event Management and User Actions",
          "description": "Users (technicians, NOC) can view, filter, and manage events through a dedicated interface, performing actions such as analyzing details, acknowledging, diagnosing (Ping, SNMP Walk, Trace Route), creating tickets (incidents), clearing, or viewing historical activity."
        },
        "ai-powered_anomaly_detection": {
          "name": "AI-Powered Anomaly Detection",
          "description": "The system uses machine learning to learn normal behavior from historical data, establish adaptive thresholds, and automatically detect deviations (anomalies) in real-time polled values, raising events and potentially incidents for significant deviations without relying on static configurations."
        },
        "event_suppression": {
          "name": "Event Suppression",
          "description": "A mechanism to reduce alert fatigue by identifying and suppressing known, expected, or repetitive events (e.g., time-based or seasonal) from generating notifications or tickets, while still logging them for historical reference and improving signal-to-noise ratio."
        },
        "event_correlation_and_root_cause_analysis": {
          "name": "Event Correlation and Root Cause Analysis",
          "description": "The system analyzes historical event data to identify patterns and recurring relationships, grouping multiple related events into a single correlated event to help detect common causes, build logical topologies, and reduce alert volume."
        }
      }
    },
    "asset": {
      "name": "Asset",
      "description": "The Asset module provides a centralized CMDB to view, track, and manage the complete lifecycle of all organizational IT and non-IT assets, including their inventory, relationships, and performance.",
      "category": "unknown",
      "features": {
        "unified_asset_repository": {
          "name": "Unified Asset Repository",
          "description": "Allows administrators to view and manage all organizational assets, including both IT and non-IT assets, in a single, centralized place.",
          "category": "core",
          "entities": {
            "asset": {
              "name": "Asset",
              "type": "resource",
              "description": "A representation of any IT or non-IT item of value to the organization, managed within Infraon."
            },
            "it_asset": {
              "name": "IT Asset",
              "type": "resource",
              "description": "A physical asset or device used in business activities, managed by IT staff, typically having an IP address (e.g., Server, Router)."
            },
            "fixed_asset": {
              "name": "Fixed Asset",
              "type": "resource",
              "description": "A physical object or vehicle considered an asset to the organization, which can be converted to cash (e.g., vehicles, machinery)."
            },
            "consumable_asset": {
              "name": "Consumable Asset",
              "type": "resource",
              "description": "An asset that is used up over time and requires regular replacement, such as office supplies or printer toner."
            },
            "software_asset": {
              "name": "Software Asset",
              "type": "resource",
              "description": "Functional software within an organization, requiring license management and compliance tracking."
            },
            "asset_view": {
              "name": "Asset View",
              "type": "resource",
              "description": "The user interface for displaying and interacting with the list of assets, available in grid or card format."
            }
          }
        },
        "inventory_data_collection": {
          "name": "Inventory Data Collection",
          "description": "Collects and maintains detailed inventory information for IT assets, such as IP address, hostname, OS, CPU, memory, and hardware details.",
          "category": "core",
          "entities": {
            "inventory_information": {
              "name": "Inventory Information",
              "type": "data",
              "description": "A comprehensive set of details collected for each asset, including hardware, software, and network information."
            },
            "ip_address": {
              "name": "IP Address",
              "type": "data",
              "description": "The network address assigned to an IT asset."
            },
            "hostname": {
              "name": "Hostname",
              "type": "data",
              "description": "The human-readable name assigned to a device on a network."
            },
            "device_type": {
              "name": "Device Type",
              "type": "data",
              "description": "The classification of an asset, such as Server, Router, or Storage Device."
            },
            "vendor": {
              "name": "Vendor",
              "type": "data",
              "description": "The manufacturer or supplier of the asset."
            },
            "serial_number": {
              "name": "Serial Number",
              "type": "data",
              "description": "A unique identifier assigned by the manufacturer to an individual asset."
            },
            "operating_system_and_version": {
              "name": "Operating System and Version",
              "type": "data",
              "description": "The operating system and its version installed on an IT asset."
            },
            "cpu_information": {
              "name": "CPU Information",
              "type": "data",
              "description": "Details about the central processing unit, including speed, cores, and sockets."
            },
            "memory": {
              "name": "Memory",
              "type": "data",
              "description": "Information about the installed RAM in an asset."
            }
          }
        },
        "hierarchical_asset_categorization": {
          "name": "Hierarchical Asset Categorization",
          "description": "Organizes assets into a structured hierarchy (Type > Category > Sub-Category) for better management, supporting IT, Fixed, Consumable, and Software assets.",
          "category": "core",
          "entities": {
            "asset_type": {
              "name": "Asset Type",
              "type": "configuration",
              "description": "The broadest classification of assets, such as IT Assets, Fixed Assets, Consumables, and Software Assets."
            },
            "asset_category": {
              "name": "Asset Category",
              "type": "configuration",
              "description": "The primary, or 'parent', division of assets within a selected Asset Type (e.g., Laptops within IT Assets)."
            },
            "asset_sub-category": {
              "name": "Asset Sub-Category",
              "type": "configuration",
              "description": "A further, or 'child', level of asset division within a Category (e.g., Dell within Laptops)."
            },
            "add_category": {
              "name": "Add Category",
              "type": "action",
              "description": "The process of defining a new asset category or sub-category, including its properties and associated item types."
            }
          }
        },
        "multiple_asset_addition_methods": {
          "name": "Multiple Asset Addition Methods",
          "description": "Provides several ways to add assets: manually one by one, in bulk via CSV file import, or automatically through agent-based discovery.",
          "category": "core",
          "entities": {
            "single_asset_addition": {
              "name": "Single Asset Addition",
              "type": "action",
              "description": "The process of manually adding one asset at a time through a form in the user interface."
            },
            "bulk_asset_import_(csv)": {
              "name": "Bulk Asset Import (CSV)",
              "type": "action",
              "description": "The process of adding multiple assets at once by uploading a CSV file with asset details."
            },
            "agent-based_discovery": {
              "name": "Agent-based Discovery",
              "type": "action",
              "description": "An automated process that uses an agent to discover and add IT assets with an IP address to the inventory."
            }
          }
        },
        "asset_search_and_filtering": {
          "name": "Asset Search and Filtering",
          "description": "Offers robust search functionality and multi-field filters (e.g., by IP, serial number, type) to quickly locate specific assets.",
          "category": "core",
          "entities": {
            "asset_search": {
              "name": "Asset Search",
              "type": "action",
              "description": "A function to find a specific asset by typing its name, ID, hostname, or other attributes."
            },
            "filter": {
              "name": "Filter",
              "type": "action",
              "description": "A function to narrow down the list of assets based on specific fields (e.g., card type, device IP) and conditions."
            },
            "barcode/qr_code_search": {
              "name": "Barcode/QR Code Search",
              "type": "action",
              "description": "A method to find an asset by scanning its barcode or QR code using a device's camera or an external scanner."
            }
          }
        },
        "detailed_asset_activity_log": {
          "name": "Detailed Asset Activity Log",
          "description": "Meticulously tracks and records all changes made to an asset, providing a comprehensive audit trail of its history for monitoring and compliance.",
          "category": "core",
          "entities": {
            "activity_log": {
              "name": "Activity Log",
              "type": "data",
              "description": "A comprehensive historical record of all changes and modifications made to an asset, including who made the change and when."
            },
            "log_entry": {
              "name": "Log Entry",
              "type": "data",
              "description": "An individual record within the Activity Log, detailing a specific change to an asset property such as city, criticality, or credentials."
            },
            "export_activity_log": {
              "name": "Export Activity Log",
              "type": "action",
              "description": "The ability to download the asset activity log in various formats like CSV, Excel, or PDF for auditing and reporting."
            }
          }
        },
        "consumable_asset_management": {
          "name": "Consumable Asset Management",
          "description": "A dedicated module to track and manage consumable items, including quantity, re-order levels, cost, and stock distribution.",
          "category": "core",
          "entities": {
            "consumable_asset": {
              "name": "Consumable Asset",
              "type": "resource",
              "description": "A type of asset that is consumed over time and needs regular replenishment, such as printer ink or office supplies."
            },
            "total_quantity": {
              "name": "Total Quantity",
              "type": "data",
              "description": "The total available stock of a consumable asset."
            },
            "re-order_quantity": {
              "name": "Re-Order Quantity",
              "type": "configuration",
              "description": "The minimum quantity level that triggers a reorder to maintain stock availability."
            },
            "add_stock": {
              "name": "Add Stock",
              "type": "action",
              "description": "The action of increasing the inventory quantity of a consumable asset."
            },
            "distribute": {
              "name": "Distribute",
              "type": "action",
              "description": "The action of allocating a certain quantity of a consumable asset to a specific user or department."
            },
            "inventory_history": {
              "name": "Inventory History",
              "type": "data",
              "description": "A detailed record of stock movements for consumable assets, including additions, consumption, and location changes."
            }
          }
        },
        "software_license_management": {
          "name": "Software License Management",
          "description": "Manages software licenses by tracking usage (total, allocated, free), compliance status, and providing automated alerts for license expiry.",
          "category": "core",
          "entities": {
            "software_license": {
              "name": "Software License",
              "type": "resource",
              "description": "A legal document or record defining the usage rights, payment, and terms for a software asset."
            },
            "license_usage": {
              "name": "License Usage",
              "type": "data",
              "description": "Data tracking the allocation and availability of software licenses, often visualized in a pie chart or graph."
            },
            "license_expiry_notification": {
              "name": "License Expiry Notification",
              "type": "configuration",
              "description": "An automated alert system that notifies specified recipients when a software license is nearing its expiration date."
            },
            "bulk_license_import": {
              "name": "Bulk License Import",
              "type": "action",
              "description": "The ability to add up to 5000 software licenses at once by importing a CSV file."
            }
          }
        },
        "ci_relationship_management_(cmdb)": {
          "name": "CI Relationship Management (CMDB)",
          "description": "Allows users to define, manage, and visualize relationships and dependencies between assets (Configuration Items), users, locations, and departments.",
          "category": "core",
          "entities": {
            "configuration_item_(ci)": {
              "name": "Configuration Item (CI)",
              "type": "resource",
              "description": "Any component or asset that needs to be managed to deliver an IT Service, including its relationships with other CIs."
            },
            "ci_relationship": {
              "name": "CI Relationship",
              "type": "data",
              "description": "A defined connection between two Configuration Items that describes how they are dependent on or associated with each other (e.g., 'Connected to', 'Depends on')."
            },
            "ci_rule_configuration": {
              "name": "CI Rule Configuration",
              "type": "configuration",
              "description": "A set of customizable rules that automatically create or update CI relationships based on changes to assets, users, locations, or departments."
            },
            "relationship_type": {
              "name": "Relationship Type",
              "type": "configuration",
              "description": "The specific nature of the connection between two CIs, such as 'Hosts', 'Cools', or 'Impacted By'."
            }
          }
        },
        "asset_lifecycle_management": {
          "name": "Asset Lifecycle Management",
          "description": "Manages the complete lifecycle of assets (for both Endpoints and Network Devices) through systematic stages, from request and acquisition to retirement and disposal.",
          "category": "extended",
          "entities": {
            "asset_lifecycle": {
              "name": "Asset Lifecycle",
              "type": "resource",
              "description": "The sequence of systematic stages an asset progresses through from request to retirement."
            },
            "lifecycle_stage": {
              "name": "Lifecycle Stage",
              "type": "data",
              "description": "A distinct phase in an asset's lifecycle, such as Request, Acquisition, In-stock, Operation, Maintenance, or Retirement."
            },
            "lifecycle_action": {
              "name": "Lifecycle Action",
              "type": "action",
              "description": "A key task performed within a lifecycle stage, such as creating a request ticket, conducting a QA check, or assigning ownership."
            },
            "endpoint_asset_lifecycle": {
              "name": "Endpoint Asset Lifecycle",
              "type": "resource",
              "description": "The lifecycle model specifically for endpoint devices like laptops, desktops, and mobile devices."
            },
            "network_device_lifecycle": {
              "name": "Network Device Lifecycle",
              "type": "resource",
              "description": "The lifecycle model specifically for network hardware like routers, switches, and firewalls."
            }
          }
        },
        "customizable_asset_properties_and_fields": {
          "name": "Customizable Asset Properties and Fields",
          "description": "Allows administrators to define custom properties, create custom fields, set role-based permissions, and select unique identifiers for different asset categories.",
          "category": "extended",
          "entities": {
            "asset_property": {
              "name": "Asset Property",
              "type": "configuration",
              "description": "A specific attribute or piece of information that can be defined for an asset category, such as make, model, or EOL date."
            },
            "property_section": {
              "name": "Property Section",
              "type": "configuration",
              "description": "A logical grouping of asset properties, such as Common Properties, Procurement Properties, or Hardware Properties."
            },
            "custom_field": {
              "name": "Custom Field",
              "type": "configuration",
              "description": "A user-created property field that can be added to an asset category to store specific, non-standard information."
            },
            "unique_field": {
              "name": "Unique Field",
              "type": "configuration",
              "description": "A property field designated as a unique identifier for assets within a category, preventing duplicates."
            },
            "field-level_permission": {
              "name": "Field-level Permission",
              "type": "configuration",
              "description": "Role-based permissions that control who can view or edit specific asset property fields."
            }
          }
        },
        "bulk_actions_on_assets": {
          "name": "Bulk Actions on Assets",
          "description": "Enables performing actions on multiple selected assets at once, such as changing owner, status, location, or assigning tags.",
          "category": "extended",
          "entities": {
            "bulk_edit": {
              "name": "Bulk Edit",
              "type": "action",
              "description": "The process of modifying the details of multiple assets simultaneously by downloading, editing, and re-uploading a CSV file."
            },
            "bulk_owner_assignment": {
              "name": "Bulk Owner Assignment",
              "type": "action",
              "description": "The action of assigning a new owner to multiple selected assets at once."
            },
            "bulk_status_change": {
              "name": "Bulk Status Change",
              "type": "action",
              "description": "The action of changing the status (e.g., In-stock, Maintenance) of multiple selected assets simultaneously."
            },
            "bulk_deletion": {
              "name": "Bulk Deletion",
              "type": "action",
              "description": "The action of deleting multiple selected assets from the system at once."
            },
            "bulk_tag_assignment": {
              "name": "Bulk Tag Assignment",
              "type": "action",
              "description": "The action of assigning one or more tags to multiple selected assets at the same time."
            }
          }
        },
        "customizable_asset_workflows_(beta)": {
          "name": "Customizable Asset Workflows (Beta)",
          "description": "Provides the flexibility to edit and customize the stages and statuses of IT asset lifecycles to match specific organizational processes.",
          "category": "extended",
          "entities": {
            "asset_workflow": {
              "name": "Asset Workflow",
              "type": "configuration",
              "description": "A flexible, user-definable process that dictates the stages and statuses an IT asset can move through, similar to a ticket workflow."
            },
            "workflow_status": {
              "name": "Workflow Status",
              "type": "configuration",
              "description": "A user-defined status that an asset can have within a specific stage of its custom workflow."
            },
            "workflow_transition": {
              "name": "Workflow Transition",
              "type": "configuration",
              "description": "A rule that controls the movement of an asset from one status to another within the custom workflow."
            }
          }
        },
        "asset_depreciation_calculation": {
          "name": "Asset Depreciation Calculation",
          "description": "Automatically calculates asset depreciation using multiple methods to support financial management and reporting.",
          "category": "extended",
          "entities": {
            "depreciation_calculation": {
              "name": "Depreciation Calculation",
              "type": "action",
              "description": "The process of calculating the reduction in an asset's value over time."
            },
            "depreciation_method": {
              "name": "Depreciation Method",
              "type": "configuration",
              "description": "The specific method or formula used to calculate asset depreciation."
            },
            "depreciation_graph": {
              "name": "Depreciation Graph",
              "type": "data",
              "description": "A visual representation showing the calculated depreciation of an asset over its lifecycle."
            },
            "book_value": {
              "name": "Book Value",
              "type": "data",
              "description": "The net value of an asset, calculated as its original cost minus accumulated depreciation."
            }
          }
        },
        "real-time_asset_performance_monitoring": {
          "name": "Real-time Asset Performance Monitoring",
          "description": "Displays real-time performance metrics such as CPU utilization, memory usage, and system uptime directly on the asset details page.",
          "category": "extended",
          "entities": {
            "performance_metric": {
              "name": "Performance Metric",
              "type": "data",
              "description": "A specific measurement of an asset's performance, such as CPU utilization, memory usage, disk space, or system uptime."
            },
            "performance_graph": {
              "name": "Performance Graph",
              "type": "data",
              "description": "A graphical chart that displays real-time or historical performance metrics for an asset."
            },
            "health_summary": {
              "name": "Health Summary",
              "type": "data",
              "description": "A consolidated view of an asset's overall health status based on its performance metrics."
            }
          }
        },
        "user_access_auditing": {
          "name": "User Access Auditing",
          "description": "Audits and logs user login and logout activities on IT assets, providing a history to enhance security and monitor usage.",
          "category": "extended",
          "entities": {
            "login/logout_history": {
              "name": "Login/Logout History",
              "type": "data",
              "description": "A log of user login and logout events on an IT asset, used for security and access auditing."
            },
            "user_login/logout_cart": {
              "name": "User Login/Logout Cart",
              "type": "resource",
              "description": "A UI element on the asset details page that displays a summary of login and logout activity for the asset."
            },
            "date_filter": {
              "name": "Date Filter",
              "type": "action",
              "description": "A function that allows technicians to refine the login/logout history data for a specific time period."
            }
          }
        },
        "network_topology_visualization": {
          "name": "Network Topology Visualization",
          "description": "Generates and displays a graphical map of network connections and dependencies for a selected network device.",
          "category": "extended",
          "entities": {
            "topology_map": {
              "name": "Topology Map",
              "type": "data",
              "description": "A visual representation of network devices and their interconnections, showing the physical or logical layout of the network."
            },
            "node": {
              "name": "Node",
              "type": "resource",
              "description": "A representation of a network device (e.g., router, switch) within the topology map."
            },
            "edge": {
              "name": "Edge",
              "type": "data",
              "description": "A line or link in the topology map that represents the connection between two nodes."
            }
          }
        },
        "chassis/graphical_view": {
          "name": "Chassis/Graphical View",
          "description": "Provides a graphical representation of a network device, showing its shelves, slots, cards, and ports along with their status.",
          "category": "extended",
          "entities": {
            "chassis_view": {
              "name": "Chassis View",
              "type": "data",
              "description": "A graphical representation of a network device's physical chassis, showing its shelves, slots, cards, and ports."
            },
            "shelf": {
              "name": "Shelf",
              "type": "resource",
              "description": "A physical subdivision within a device chassis that holds slots for cards."
            },
            "slot": {
              "name": "Slot",
              "type": "resource",
              "description": "A physical bay within a shelf where a card can be installed."
            },
            "card": {
              "name": "Card",
              "type": "resource",
              "description": "A modular hardware component (e.g., line card, processing card) that fits into a slot."
            },
            "port": {
              "name": "Port",
              "type": "resource",
              "description": "A physical connection point on a card used for network connectivity."
            }
          }
        },
        "barcode/qr_code_scanning": {
          "name": "Barcode/QR Code Scanning",
          "description": "Enables searching for and identifying assets by scanning their barcode or QR code, often using a mobile device.",
          "category": "extended",
          "entities": {
            "scan_&_search_asset": {
              "name": "Scan & Search Asset",
              "type": "action",
              "description": "The function that initiates the device's camera or a scanner to read a barcode or QR code for asset identification."
            },
            "qr_code": {
              "name": "QR Code",
              "type": "resource",
              "description": "A two-dimensional barcode associated with an asset that can be scanned to quickly retrieve its information."
            },
            "barcode": {
              "name": "Barcode",
              "type": "resource",
              "description": "A one-dimensional barcode associated with an asset that can be scanned for identification."
            },
            "print_label": {
              "name": "Print Label",
              "type": "action",
              "description": "The function to generate and print a physical label for an asset, which can include a QR code, barcode, and other details."
            }
          }
        },
        "category-level_notifications": {
          "name": "Category-Level Notifications",
          "description": "Allows configuration of automated email notifications at the asset category level for events like warranty expiry, hardware changes, or discovery of blacklisted applications.",
          "category": "extended",
          "entities": {
            "category_notification": {
              "name": "Category Notification",
              "type": "configuration",
              "description": "A setting at the asset category level to enable or disable various automated email notifications."
            },
            "warranty/amc_expiry_notification": {
              "name": "Warranty/AMC Expiry Notification",
              "type": "configuration",
              "description": "An automated alert sent to the asset owner when the warranty or Annual Maintenance Contract is about to expire."
            },
            "asset_allocation_notification": {
              "name": "Asset Allocation Notification",
              "type": "configuration",
              "description": "An automated notification sent to an end-user when an asset is allocated to them, potentially requiring acceptance or denial."
            },
            "blacklisted_application_notification": {
              "name": "Blacklisted Application Notification",
              "type": "configuration",
              "description": "An automated alert sent to the asset owner when a blacklisted software application is discovered on the asset."
            },
            "hardware_change_notification": {
              "name": "Hardware Change Notification",
              "type": "configuration",
              "description": "An automated email alert sent to the asset owner to inform them of any detected hardware modifications."
            }
          }
        },
        "aiops_capacity_forecasting": {
          "name": "AIOps Capacity Forecasting",
          "description": "Uses machine learning on historical data to forecast future resource usage (e.g., CPU, memory) over a 180-day window for proactive capacity planning.",
          "category": "extended",
          "entities": {
            "forecast": {
              "name": "Forecast",
              "type": "data",
              "description": "A long-range projection of future resource usage trends (e.g., CPU, memory, throughput) based on historical performance data."
            },
            "forecast_model": {
              "name": "Forecast Model",
              "type": "resource",
              "description": "The machine learning model used for time-series forecasting, which is trained on historical data to predict future capacity needs."
            },
            "confidence_bands": {
              "name": "Confidence Bands",
              "type": "data",
              "description": "The upper and lower boundaries in a forecast graph that represent a statistical range of possible future values."
            },
            "test_forecast": {
              "name": "Test Forecast",
              "type": "action",
              "description": "A feature to generate a real-time forecast using customized settings to model unique scenarios like holidays or maintenance windows."
            },
            "change_point_scale": {
              "name": "Change Point Scale",
              "type": "configuration",
              "description": "A setting that adjusts the sensitivity of the forecast model to recent changes in data trends."
            }
          }
        },
        "aiops_adaptive_thresholds_for_anomaly_detection": {
          "name": "AIOps Adaptive Thresholds for Anomaly Detection",
          "description": "Automatically learns normal performance patterns and sets dynamic, time-based thresholds to accurately detect anomalies and reduce false alerts.",
          "category": "extended",
          "entities": {
            "adaptive_threshold": {
              "name": "Adaptive Threshold",
              "type": "data",
              "description": "A model-generated, dynamic limit for a performance metric that defines the range of normal behavior for a specific time, used for anomaly detection."
            },
            "prediction_model": {
              "name": "Prediction Model",
              "type": "resource",
              "description": "The short-term prediction model trained on the last 30 days of data to generate adaptive thresholds for real-time anomaly detection."
            },
            "anomaly": {
              "name": "Anomaly",
              "type": "data",
              "description": "A data point where the actual performance metric value falls outside the dynamically generated adaptive threshold bands."
            },
            "critical_upper_band": {
              "name": "Critical Upper Band",
              "type": "data",
              "description": "A more stringent upper threshold used to flag high-risk or critical-level anomalies."
            }
          }
        },
        "software_inventory_discovery": {
          "name": "Software Inventory Discovery",
          "description": "Automatically discovers and lists all software installed on managed devices via the Infraon inventory agent.",
          "category": "integration",
          "entities": {
            "discovered_software": {
              "name": "Discovered Software",
              "type": "resource",
              "description": "A software application identified on a managed device by the inventory agent and listed in the software inventory."
            },
            "software_blacklist/whitelist": {
              "name": "Software Blacklist/Whitelist",
              "type": "configuration",
              "description": "A list used to classify discovered software as either prohibited (blacklisted) or permitted (whitelisted) on managed assets."
            },
            "uninstall_software": {
              "name": "Uninstall Software",
              "type": "action",
              "description": "The capability to remotely uninstall a software application from a managed asset."
            }
          }
        },
        "cli_session_initiation": {
          "name": "CLI Session Initiation",
          "description": "Allows users to initiate secure SSH or Telnet sessions directly to IT assets from the UI for diagnostics and configuration, integrating with the NCCM module.",
          "category": "integration",
          "entities": {
            "cli_session": {
              "name": "CLI Session",
              "type": "resource",
              "description": "A secure Command Line Interface connection (SSH or TELNET) to a supported network device, initiated from the asset module."
            },
            "cli_session_request": {
              "name": "CLI Session Request",
              "type": "action",
              "description": "The process of requesting approval for a CLI session, which may be routed through a change management workflow."
            },
            "access_reason": {
              "name": "Access Reason",
              "type": "data",
              "description": "A justification provided by the user for needing to initiate a CLI session, used for auditing purposes."
            },
            "active_duration": {
              "name": "Active Duration",
              "type": "configuration",
              "description": "A setting that defines the time limit for how long a CLI session remains active after being approved or initiated."
            }
          }
        },
        "configuration_download_jobs": {
          "name": "Configuration Download Jobs",
          "description": "Integrates with the NCCM module to schedule and manage jobs that download device configurations, inventory, and operational data.",
          "category": "integration",
          "entities": {
            "download_job": {
              "name": "Download Job",
              "type": "resource",
              "description": "An automated task that downloads various data from a network device, such as configurations, inventory details, and operational data."
            },
            "configuration_profile": {
              "name": "Configuration Profile",
              "type": "configuration",
              "description": "A profile assigned to a device that specifies what data should be collected by a Download Job."
            },
            "configuration_details": {
              "name": "Configuration Details",
              "type": "data",
              "description": "The collection of current and historical device configurations (e.g., running, startup) downloaded by a job."
            },
            "configuration_comparison": {
              "name": "Configuration Comparison",
              "type": "action",
              "description": "The ability to compare different versions of a device's configuration, such as 'Baseline V/S Current Running'."
            }
          }
        },
        "associated_tickets_view": {
          "name": "Associated Tickets View",
          "description": "Displays a list of all open service tickets associated with a specific asset, linking asset management with the ITSM ticketing system.",
          "category": "integration",
          "entities": {
            "associated_ticket": {
              "name": "Associated Ticket",
              "type": "resource",
              "description": "An incident or service request ticket that has been created for and linked to a specific asset."
            },
            "ticket_list": {
              "name": "Ticket List",
              "type": "data",
              "description": "A view on the asset details page that lists all open tickets associated with that asset, showing details like Ticket ID, Status, and Requester."
            }
          }
        },
        "self-service_portal_integration": {
          "name": "Self-Service Portal Integration",
          "description": "Makes asset details available in the self-service portal, allowing end-users to view information about their assigned assets.",
          "category": "integration",
          "entities": {
            "self-service_portal": {
              "name": "Self-Service Portal",
              "type": "resource",
              "description": "A portal where end-users can view details of the assets assigned to them."
            },
            "asset_details_view_(portal)": {
              "name": "Asset Details View (Portal)",
              "type": "data",
              "description": "The specific set of asset details made available to end-users through the self-service portal."
            }
          }
        },
        "remote_desktop_(rdp)_scheduling": {
          "name": "Remote Desktop (RDP) Scheduling",
          "description": "Allows users to schedule and launch secure remote desktop sessions to manage Windows-based assets directly from the asset list.",
          "category": "integration",
          "entities": {
            "scheduled_rdp_session": {
              "name": "Scheduled RDP Session",
              "type": "resource",
              "description": "A planned Remote Desktop Protocol (RDP) session for a Windows-based asset, configured with a specific date, time, and duration."
            },
            "schedule_rdp": {
              "name": "Schedule RDP",
              "type": "action",
              "description": "The function that allows a user to configure and save a future RDP session for an asset."
            },
            "session_duration": {
              "name": "Session Duration",
              "type": "configuration",
              "description": "The length of time, in minutes, for which the scheduled RDP session will be active."
            }
          }
        }
      },
      "workflows": {
        "endpoint_asset_lifecycle_management": {
          "name": "Endpoint Asset Lifecycle Management",
          "description": "A systematic workflow that manages the entire lifecycle of endpoint devices like laptops and desktops. It covers stages from the initial user request, through acquisition, quality assurance, stocking, preparation, allocation, user acceptance, operation, maintenance, and finally to decommissioning and retirement."
        },
        "network_device_lifecycle_management": {
          "name": "Network Device Lifecycle Management",
          "description": "A comprehensive workflow for managing network hardware such as routers and switches. The process includes stages for request, procurement, quality assurance, stocking, configuration, integration into the network, active operation, maintenance, reinstallation, and eventual decommissioning and retirement."
        },
        "asset_onboarding_and_discovery": {
          "name": "Asset Onboarding and Discovery",
          "description": "This workflow covers the various methods for adding assets into the Infraon system. Assets can be added individually through a manual form, imported in bulk using a CSV file, or automatically discovered via an agent-based process for IT assets with an IP address."
        },
        "asset_categorization_and_configuration": {
          "name": "Asset Categorization and Configuration",
          "description": "A foundational administrative workflow for structuring asset data. It involves creating a hierarchy of asset types, categories, and sub-categories, and defining their specific properties, including mandatory fields, optional sections, custom fields, and role-based permissions."
        },
        "daily_asset_interaction_and_management": {
          "name": "Daily Asset Interaction and Management",
          "description": "Encompasses the routine tasks performed by users on the asset grid. This includes viewing, searching, and filtering for assets, as well as performing single or bulk actions like assigning owners, changing status, printing labels, exporting data, and managing tags."
        },
        "asset_maintenance_cycle": {
          "name": "Asset Maintenance Cycle",
          "description": "A specific process where an asset is formally designated for maintenance. Its status is changed to 'maintenance', work is scheduled and performed, and upon completion, the asset is returned to its previous operational state."
        },
        "remote_it_asset_administration": {
          "name": "Remote IT Asset Administration",
          "description": "A workflow for technicians to perform remote diagnostics and configuration on IT assets. This is achieved by initiating secure Command Line Interface (CLI) sessions (with an optional request-based approval process) or by scheduling Remote Desktop Protocol (RDP) sessions."
        },
        "consumable_asset_management": {
          "name": "Consumable Asset Management",
          "description": "A dedicated workflow for tracking and managing consumable items like printer toner or keyboards. It includes adding stock, setting re-order levels, distributing items to users or departments, and monitoring inventory levels, costs, and consumption history."
        },
        "software_and_license_management": {
          "name": "Software and License Management",
          "description": "This workflow involves viewing software discovered on assets, blacklisting or whitelisting applications, and managing software licenses. License management includes tracking allocation, usage against total available licenses, compliance, and setting up automated notifications for license expiry."
        },
        "aiops-driven_performance_analysis": {
          "name": "AIOps-driven Performance Analysis",
          "description": "A system workflow that uses machine learning for advanced monitoring. It consists of two main parts: long-term capacity forecasting to predict future resource needs (e.g., CPU, memory) and short-term anomaly detection using adaptive thresholds to identify unusual performance in real-time."
        },
        "configuration_item_(ci)_relationship_mapping": {
          "name": "Configuration Item (CI) Relationship Mapping",
          "description": "A workflow for establishing and visualizing the dependencies between assets (CIs) and other entities like users, departments, and locations. This involves defining upstream and downstream relationships to create a comprehensive map of the IT environment and understand service impacts."
        }
      }
    },
    "problem_management": {
      "name": "Problem Management",
      "description": "The Problem Management module identifies, analyzes, resolves, and prevents the recurrence of underlying IT issues to minimize their impact on the organization.",
      "category": "unknown",
      "features": {
        "problem_logging_access_control": {
          "name": "Problem Logging Access Control",
          "description": "Ensures only authorized technicians or users with required permissions can log new problems.",
          "category": "core",
          "entities": {
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "A user role with permissions to log problems."
            },
            "user_with_required_permissions": {
              "name": "User with required permissions",
              "type": "resource",
              "description": "Any user granted the necessary access rights to log a problem."
            },
            "permissions": {
              "name": "Permissions",
              "type": "configuration",
              "description": "Access rights or privileges required to perform actions like logging a problem."
            }
          }
        },
        "problem_source_tracking": {
          "name": "Problem Source Tracking",
          "description": "Allows recording the origin of a problem, such as Web portal, Mobile app, Email, On call, WhatsApp, or Chatbot.",
          "category": "core",
          "entities": {
            "problem_source": {
              "name": "Problem Source",
              "type": "data",
              "description": "The origin or channel through which a problem was reported."
            },
            "web_portal": {
              "name": "Web portal",
              "type": "configuration",
              "description": "A specific channel for reporting problems."
            },
            "mobile_app": {
              "name": "Mobile app",
              "type": "configuration",
              "description": "A specific channel for reporting problems."
            },
            "email": {
              "name": "Email",
              "type": "configuration",
              "description": "A specific channel for reporting problems."
            },
            "by_a_technician_on_call": {
              "name": "By a technician on call",
              "type": "configuration",
              "description": "A specific channel for reporting problems."
            },
            "whatsapp": {
              "name": "WhatsApp",
              "type": "configuration",
              "description": "A specific channel for reporting problems."
            },
            "chatbot": {
              "name": "Chatbot",
              "type": "configuration",
              "description": "A specific channel for reporting problems."
            }
          }
        },
        "ticket_association_&_creation": {
          "name": "Ticket Association & Creation",
          "description": "Enables linking problems to existing tickets and creating new tickets directly from a problem view for streamlined association.",
          "category": "integration",
          "entities": {
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "An incident or request that can be linked to a problem."
            },
            "ticket_id": {
              "name": "Ticket ID",
              "type": "data",
              "description": "A unique identifier for a ticket."
            },
            "internal_notes": {
              "name": "Internal Notes",
              "type": "data",
              "description": "Notes added during the process of associating a problem with tickets."
            },
            "problem_view_page": {
              "name": "Problem View Page",
              "type": "resource",
              "description": "The user interface where problems are displayed and from which tickets can be logged."
            },
            "log_a_ticket_(from_problem_view)": {
              "name": "Log a Ticket (from problem view)",
              "type": "action",
              "description": "The action of creating a new ticket directly from the problem's view page."
            },
            "link_to_tickets": {
              "name": "Link to Tickets",
              "type": "action",
              "description": "The action of associating one or more tickets with a problem."
            }
          }
        },
        "problem_classification_and_prioritization": {
          "name": "Problem Classification and Prioritization",
          "description": "Provides functionality to capture detailed problem information including type, description, category, sub-category, and assign priority (low, medium, high, critical).",
          "category": "core",
          "entities": {
            "problem_type": {
              "name": "Problem Type",
              "type": "configuration",
              "description": "A general classification for a problem."
            },
            "problem_category": {
              "name": "Problem Category",
              "type": "configuration",
              "description": "A broad grouping used for classifying problems."
            },
            "problem_sub-category": {
              "name": "Problem Sub-category",
              "type": "configuration",
              "description": "A more specific grouping within a problem category."
            },
            "problem_description": {
              "name": "Problem Description",
              "type": "data",
              "description": "Detailed textual information describing the problem."
            },
            "priority": {
              "name": "Priority",
              "type": "configuration",
              "description": "The level of urgency or importance assigned to a problem (e.g., low, medium, high, critical)."
            },
            "impact_service": {
              "name": "Impact Service",
              "type": "data",
              "description": "The specific service affected by the problem."
            }
          }
        },
        "root_cause_analysis_(rca)_tools": {
          "name": "Root Cause Analysis (RCA) Tools",
          "description": "Supports performing detailed Root Cause Analysis, allowing multiple analysis entries, and offering specific methods like 5-Whys, Chronological, and Kepner Tregoe.",
          "category": "core",
          "entities": {
            "root_cause_analysis_(rca)": {
              "name": "Root Cause Analysis (RCA)",
              "type": "action",
              "description": "The process of identifying the fundamental reason for an issue."
            },
            "5-whys_method": {
              "name": "5-Whys Method",
              "type": "configuration",
              "description": "An iterative interrogative technique used to explore the cause-and-effect relationships underlying a particular problem."
            },
            "chronological_analysis": {
              "name": "Chronological Analysis",
              "type": "configuration",
              "description": "A time-based approach to analyze events in the order of their occurrence to find the root cause."
            },
            "kepner_tregoe_method": {
              "name": "Kepner Tregoe Method",
              "type": "configuration",
              "description": "A structured problem-solving and decision-making methodology."
            },
            "analysis_details": {
              "name": "Analysis Details",
              "type": "data",
              "description": "Information recorded during the root cause analysis process."
            },
            "draft_analysis": {
              "name": "Draft Analysis",
              "type": "data",
              "description": "Analysis details that are saved temporarily and can be edited later."
            }
          }
        },
        "known_error_record_management": {
          "name": "Known Error Record Management",
          "description": "Facilitates the creation and documentation of Known Error Records (problems with documented root causes and workarounds) in a dedicated Known Error Database (KEDB).",
          "category": "extended",
          "entities": {
            "known_error": {
              "name": "Known Error",
              "type": "resource",
              "description": "A problem with a documented root cause and a workaround."
            },
            "known_error_database_(kedb)": {
              "name": "Known Error Database (KEDB)",
              "type": "resource",
              "description": "A repository for storing information about known errors."
            },
            "root_cause_(documented)": {
              "name": "Root Cause (documented)",
              "type": "data",
              "description": "The identified and recorded underlying reason for a problem."
            },
            "workaround_(documented)": {
              "name": "Workaround (documented)",
              "type": "data",
              "description": "The identified and recorded temporary solution for a problem."
            }
          }
        },
        "workaround_documentation": {
          "name": "Workaround Documentation",
          "description": "Allows technicians to create and document temporary solutions (workarounds) for problems to reduce immediate impact.",
          "category": "core",
          "entities": {
            "workaround": {
              "name": "Workaround",
              "type": "data",
              "description": "A temporary solution to a problem designed to reduce its impact."
            },
            "solution/workaround_section": {
              "name": "Solution/Workaround Section",
              "type": "resource",
              "description": "A dedicated area within the problem module for documenting solutions or workarounds."
            },
            "document_workaround": {
              "name": "Document Workaround",
              "type": "action",
              "description": "The action of recording a temporary solution for a problem."
            }
          }
        },
        "problem_escalation": {
          "name": "Problem Escalation",
          "description": "Enables escalating problems to higher-level technical teams (L2/L3) when specialized expertise is required.",
          "category": "core",
          "entities": {
            "l2/l3-level_technicians/engineers": {
              "name": "L2/L3-level Technicians/Engineers",
              "type": "resource",
              "description": "Higher-level support personnel with specialized expertise for problem resolution."
            },
            "escalate_problem": {
              "name": "Escalate Problem",
              "type": "action",
              "description": "The action of transferring a problem to a higher level of support or expertise."
            },
            "due_by_date": {
              "name": "Due By Date",
              "type": "data",
              "description": "A deadline for problem resolution, which if missed, can trigger escalation."
            }
          }
        },
        "automated_notifications": {
          "name": "Automated Notifications",
          "description": "Sends email notifications to keep technicians well-informed of problem proceedings and status changes.",
          "category": "extended",
          "entities": {
            "notification_emails": {
              "name": "Notification Emails",
              "type": "action",
              "description": "Automated email messages sent to inform stakeholders about problem proceedings or status changes."
            },
            "technicians": {
              "name": "Technicians",
              "type": "resource",
              "description": "Users who receive automated notifications."
            },
            "followers": {
              "name": "Followers",
              "type": "resource",
              "description": "Specific users configured to receive notifications about a problem."
            }
          }
        },
        "problem_resolution_management": {
          "name": "Problem Resolution Management",
          "description": "Manages the application and documentation of permanent fixes (solutions) for problems.",
          "category": "core",
          "entities": {
            "resolution": {
              "name": "Resolution",
              "type": "data",
              "description": "A permanent fix for a problem that prevents it from reoccurring."
            },
            "permanent_fix": {
              "name": "Permanent Fix",
              "type": "data",
              "description": "A definitive solution to a problem."
            },
            "solution/workaround_section": {
              "name": "Solution/Workaround Section",
              "type": "resource",
              "description": "The area where the permanent resolution can be documented."
            },
            "resolve_problem": {
              "name": "Resolve Problem",
              "type": "action",
              "description": "The action of applying a permanent fix to a problem."
            }
          }
        },
        "problem_review_and_closure": {
          "name": "Problem Review and Closure",
          "description": "Provides a process for reviewing the effectiveness of resolutions and formally closing problems once satisfied.",
          "category": "core",
          "entities": {
            "resolution_effectiveness": {
              "name": "Resolution Effectiveness",
              "type": "data",
              "description": "The quality and success of the applied problem resolution."
            },
            "review_resolution": {
              "name": "Review Resolution",
              "type": "action",
              "description": "The action of evaluating whether a resolution has effectively fixed the problem."
            },
            "close_problem": {
              "name": "Close Problem",
              "type": "action",
              "description": "The action of marking a problem as complete and no longer active."
            }
          }
        },
        "service_request_linking": {
          "name": "Service Request Linking",
          "description": "Enables linking problems to related service requests (part of future release).",
          "category": "integration",
          "entities": {
            "service_request": {
              "name": "Service Request",
              "type": "resource",
              "description": "A formal request for a service or information, which can be linked to a problem."
            },
            "link_service_request": {
              "name": "Link Service Request",
              "type": "action",
              "description": "The action of associating a service request with a problem."
            }
          }
        },
        "change_request_linking": {
          "name": "Change Request Linking",
          "description": "Allows linking problems to relevant change requests (part of future release).",
          "category": "integration",
          "entities": {
            "change_request": {
              "name": "Change Request",
              "type": "resource",
              "description": "A formal proposal for an alteration to an IT service or infrastructure, which can be linked to a problem."
            },
            "link_change_request": {
              "name": "Link Change Request",
              "type": "action",
              "description": "The action of associating a change request with a problem."
            }
          }
        },
        "change_request_initiation": {
          "name": "Change Request Initiation",
          "description": "Enables initiating a new change request directly from a problem.",
          "category": "integration",
          "entities": {
            "initiate_change_request": {
              "name": "Initiate Change Request",
              "type": "action",
              "description": "The action of creating a new change request directly from a problem."
            },
            "problem_status_(open,_in_progress,_on_hold)": {
              "name": "Problem Status (Open, In Progress, On Hold)",
              "type": "data",
              "description": "Specific states of a problem that allow for the initiation of a change request."
            }
          }
        },
        "knowledge_base_integration": {
          "name": "Knowledge Base Integration",
          "description": "Facilitates attaching Knowledge Base articles to problems and converting problem resolutions or Known Error records into KB articles.",
          "category": "integration",
          "entities": {
            "knowledge_base_(kb)": {
              "name": "Knowledge Base (KB)",
              "type": "resource",
              "description": "A centralized repository of information, including articles, workarounds, and resolutions."
            },
            "knowledge_base_article": {
              "name": "Knowledge Base Article",
              "type": "resource",
              "description": "A specific document or entry within the Knowledge Base."
            },
            "attach_kb": {
              "name": "Attach KB",
              "type": "action",
              "description": "The action of linking a Knowledge Base article to a problem."
            },
            "convert_problem_to_kb_article": {
              "name": "Convert Problem to KB Article",
              "type": "action",
              "description": "The action of transforming a problem's details into a Knowledge Base article."
            },
            "kedb_lookup": {
              "name": "KEDB Lookup",
              "type": "action",
              "description": "The action of searching the Known Error Database for related articles."
            },
            "problem_status_(resolved,_closed)": {
              "name": "Problem Status (Resolved, Closed)",
              "type": "data",
              "description": "Specific states of a problem that allow for its conversion into a KB article."
            }
          }
        },
        "problem_ownership_assignment": {
          "name": "Problem Ownership Assignment",
          "description": "Allows assigning and tracking the technician or team responsible for a problem.",
          "category": "core",
          "entities": {
            "problem_owner": {
              "name": "Problem Owner",
              "type": "resource",
              "description": "The individual or team responsible for managing a problem."
            },
            "assignee": {
              "name": "Assignee",
              "type": "resource",
              "description": "The specific technician assigned to work on a problem."
            },
            "assign_problem": {
              "name": "Assign Problem",
              "type": "action",
              "description": "The action of designating a technician or team to be responsible for a problem."
            },
            "self-assign_(take_it)": {
              "name": "Self-assign (Take it)",
              "type": "action",
              "description": "The action for a technician to assign a problem to themselves."
            }
          }
        },
        "problem_monitoring_and_tracking": {
          "name": "Problem Monitoring and Tracking",
          "description": "Provides capabilities to monitor and track the progress and status of problems throughout their lifecycle.",
          "category": "core",
          "entities": {
            "problem_lifecycle": {
              "name": "Problem Lifecycle",
              "type": "data",
              "description": "The sequence of stages a problem goes through from creation to closure."
            },
            "monitor_problem": {
              "name": "Monitor Problem",
              "type": "action",
              "description": "The action of observing the progress and status of a problem."
            },
            "track_problem": {
              "name": "Track Problem",
              "type": "action",
              "description": "The action of following the details and status changes of a problem."
            }
          }
        },
        "internal_communication_tools": {
          "name": "Internal Communication Tools",
          "description": "Includes features like internal notes and a commenting system for communication among technicians.",
          "category": "core",
          "entities": {
            "internal_note": {
              "name": "Internal Note",
              "type": "data",
              "description": "A private note shared among technicians regarding a problem."
            },
            "comment": {
              "name": "Comment",
              "type": "data",
              "description": "A general note or remark visible to users/technicians on a problem."
            },
            "add_internal_note": {
              "name": "Add Internal Note",
              "type": "action",
              "description": "The action of adding a private note for internal technician communication."
            },
            "add_comment": {
              "name": "Add Comment",
              "type": "action",
              "description": "The action of adding a general comment to a problem."
            }
          }
        },
        "problem_lifecycle_states_and_statuses": {
          "name": "Problem Lifecycle States and Statuses",
          "description": "Defines and manages the various stages and statuses a problem progresses through from creation to closure.",
          "category": "core",
          "entities": {
            "problem_state": {
              "name": "Problem State",
              "type": "configuration",
              "description": "A major phase in the problem's lifecycle (e.g., Open, In Progress, On-Hold, Resolved)."
            },
            "problem_status": {
              "name": "Problem Status",
              "type": "configuration",
              "description": "A specific condition or sub-state within a problem's lifecycle state (e.g., New, Investigation, Solved)."
            },
            "status_scenario": {
              "name": "Status Scenario",
              "type": "data",
              "description": "A description of the conditions or events that lead to a particular status."
            }
          }
        },
        "customizable_problem_statuses": {
          "name": "Customizable Problem Statuses",
          "description": "Allows configuration of custom problem statuses via the 'Workflow' module to suit specific requirements.",
          "category": "extended",
          "entities": {
            "custom_status": {
              "name": "Custom Status",
              "type": "configuration",
              "description": "User-defined problem statuses that can be configured to suit specific requirements."
            },
            "workflow_module": {
              "name": "Workflow Module",
              "type": "resource",
              "description": "The module used for configuring customized statuses and workflows."
            },
            "configure_statuses": {
              "name": "Configure Statuses",
              "type": "action",
              "description": "The action of setting up or modifying custom problem statuses."
            }
          }
        },
        "problem_to_kb_conversion": {
          "name": "Problem to KB Conversion",
          "description": "Enables converting resolved problems directly into Knowledge Base articles for efficient knowledge management.",
          "category": "integration",
          "entities": {
            "problem_(resolved/closed)": {
              "name": "Problem (Resolved/Closed)",
              "type": "resource",
              "description": "A problem that has reached a resolved or closed state, making it eligible for conversion."
            },
            "knowledge_base_article": {
              "name": "Knowledge Base Article",
              "type": "resource",
              "description": "The resulting article created from a converted problem."
            },
            "kb_icon": {
              "name": "KB Icon",
              "type": "resource",
              "description": "A user interface element that appears post-resolution, indicating the option to convert to KB."
            },
            "convert_problem_to_kb": {
              "name": "Convert Problem to KB",
              "type": "action",
              "description": "The action of transforming a resolved or closed problem into a Knowledge Base article."
            }
          }
        },
        "multiple_problem_list_views": {
          "name": "Multiple Problem List Views",
          "description": "Offers different ways to view problems, including a Panel View (summary card) and a Grid View (tabular form).",
          "category": "extended",
          "entities": {
            "panel_view": {
              "name": "Panel View",
              "type": "configuration",
              "description": "A display mode for problems that shows details as summary cards."
            },
            "grid_view": {
              "name": "Grid View",
              "type": "configuration",
              "description": "A display mode for problems that shows details in a tabular format."
            },
            "problem_page": {
              "name": "Problem Page",
              "type": "resource",
              "description": "The main user interface that lists all problems."
            }
          }
        },
        "problem_summary_card": {
          "name": "Problem Summary Card",
          "description": "Displays a concise summary of problem details with quick actions in the Panel View.",
          "category": "extended",
          "entities": {
            "summary_card": {
              "name": "Summary Card",
              "type": "resource",
              "description": "A condensed display of key problem details in the Panel View."
            },
            "problem_id": {
              "name": "Problem ID",
              "type": "data",
              "description": "The unique identifier for the problem displayed on the card."
            },
            "requester": {
              "name": "Requester",
              "type": "data",
              "description": "The name of the requester displayed on the card."
            },
            "team": {
              "name": "Team",
              "type": "data",
              "description": "The team assigned to the problem, displayed on the card."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The current status of the problem, displayed on the card."
            },
            "priority": {
              "name": "Priority",
              "type": "data",
              "description": "The priority of the problem, displayed on the card."
            },
            "service": {
              "name": "Service",
              "type": "data",
              "description": "The impacted service, displayed on the card."
            },
            "resolve_(button/option)": {
              "name": "Resolve (button/option)",
              "type": "action",
              "description": "An action available on the summary card to resolve the problem."
            },
            "actions_(icons)": {
              "name": "Actions (icons)",
              "type": "action",
              "description": "Quick action icons available on the summary card for various operations."
            },
            "configure_summary_card": {
              "name": "Configure Summary Card",
              "type": "action",
              "description": "The action of customizing which details are displayed on the summary card."
            }
          }
        },
        "in-line_status_and_priority_editing": {
          "name": "In-line Status and Priority Editing",
          "description": "Allows technicians to quickly change problem status and priority directly from the list views or summary card.",
          "category": "core",
          "entities": {
            "status_(editable)": {
              "name": "Status (editable)",
              "type": "data",
              "description": "The problem's current status, which can be changed directly from the display."
            },
            "priority_(editable)": {
              "name": "Priority (editable)",
              "type": "data",
              "description": "The problem's priority, which can be changed directly from the display."
            },
            "quick_edit": {
              "name": "Quick Edit",
              "type": "action",
              "description": "A feature allowing rapid modification of certain problem fields directly from the list view."
            },
            "urgency": {
              "name": "Urgency",
              "type": "data",
              "description": "An editable field indicating the speed required for resolution."
            },
            "severity": {
              "name": "Severity",
              "type": "data",
              "description": "An editable field indicating the degree of impact of the problem."
            },
            "impact_service": {
              "name": "Impact Service",
              "type": "data",
              "description": "An editable field indicating the service affected by the problem."
            },
            "assignee": {
              "name": "Assignee",
              "type": "data",
              "description": "An editable field indicating the technician assigned to the problem."
            }
          }
        },
        "aging_metrics_display": {
          "name": "Aging Metrics Display",
          "description": "Shows metrics indicating how long a problem has been open or in a particular state, enhancing data visibility.",
          "category": "extended",
          "entities": {
            "aging_metrics": {
              "name": "Aging Metrics",
              "type": "data",
              "description": "Data indicating the duration a problem has been open or in a particular state."
            },
            "resolution_time": {
              "name": "Resolution Time",
              "type": "data",
              "description": "The duration taken from problem creation to its resolution."
            },
            "aging_clock": {
              "name": "Aging Clock",
              "type": "resource",
              "description": "An internal mechanism that tracks the time elapsed for a problem."
            },
            "resolve_action": {
              "name": "Resolve Action",
              "type": "action",
              "description": "The action of resolving a problem, which stops the aging clock."
            },
            "close_action": {
              "name": "Close Action",
              "type": "action",
              "description": "The action of closing a problem, which stops the aging clock."
            },
            "aging_reports": {
              "name": "Aging Reports",
              "type": "resource",
              "description": "Reports providing detailed information on problem resolution times and aging."
            }
          }
        },
        "detailed_problem_view": {
          "name": "Detailed Problem View",
          "description": "Provides a comprehensive screen to view all problem details, including communication history, email actions, notes, analysis, and work logs.",
          "category": "core",
          "entities": {
            "problem_id_(clickable)": {
              "name": "Problem ID (clickable)",
              "type": "resource",
              "description": "A clickable identifier that navigates to the detailed view of a problem."
            },
            "problem_details_page": {
              "name": "Problem Details Page",
              "type": "resource",
              "description": "A comprehensive user interface displaying all information related to a specific problem."
            },
            "detailed_edit": {
              "name": "Detailed Edit",
              "type": "action",
              "description": "The action or button to access a comprehensive interface for editing all problem details."
            }
          }
        },
        "auto-generated_problem_id": {
          "name": "Auto-generated Problem ID",
          "description": "Automatically assigns a unique identifier to each new problem upon creation.",
          "category": "core",
          "entities": {
            "problem_id": {
              "name": "Problem ID",
              "type": "data",
              "description": "A unique identifier for a problem that is automatically created upon problem logging."
            },
            "auto-generation": {
              "name": "Auto-generation",
              "type": "action",
              "description": "The automated process of creating a unique identifier for a problem."
            }
          }
        },
        "configurable_user_interface": {
          "name": "Configurable User Interface",
          "description": "Allows customization of displayed details in the summary card and columns in Grid View to suit user preferences.",
          "category": "extended",
          "entities": {
            "configure_icon": {
              "name": "Configure Icon",
              "type": "resource",
              "description": "A user interface element that allows customization of displayed details."
            },
            "user_interface_(ui)": {
              "name": "User Interface (UI)",
              "type": "configuration",
              "description": "The visual layout and interactive elements of the Problem Management module."
            },
            "customize_details": {
              "name": "Customize Details",
              "type": "action",
              "description": "The action of modifying which information is displayed on the screen."
            }
          }
        },
        "multiple_analysis_entries_with_drafts": {
          "name": "Multiple Analysis Entries with Drafts",
          "description": "Supports adding and saving multiple analysis details as drafts during the investigation phase, which can be viewed/edited anytime.",
          "category": "core",
          "entities": {
            "analysis_entry": {
              "name": "Analysis Entry",
              "type": "data",
              "description": "A record of an investigation step or finding during root cause analysis."
            },
            "draft_analysis": {
              "name": "Draft Analysis",
              "type": "data",
              "description": "An analysis entry that is saved temporarily and can be viewed or edited at any time."
            },
            "add_analysis": {
              "name": "Add Analysis",
              "type": "action",
              "description": "The action of adding a new analysis entry to a problem."
            },
            "save_as_draft": {
              "name": "Save as Draft",
              "type": "action",
              "description": "The action of saving an analysis entry temporarily without finalizing it."
            }
          }
        },
        "problem_history_tracking": {
          "name": "Problem History Tracking",
          "description": "Maintains a complete audit trail of all changes and events related to a problem from its creation.",
          "category": "core",
          "entities": {
            "problem_history": {
              "name": "Problem History",
              "type": "data",
              "description": "A chronological record of all changes, updates, and events related to a problem from its creation."
            },
            "view_history": {
              "name": "View History",
              "type": "action",
              "description": "The action of accessing and reviewing the historical record of a problem."
            }
          }
        },
        "requester_interaction_history_display": {
          "name": "Requester Interaction History Display",
          "description": "Shows past interactions and problems associated with a specific requester.",
          "category": "extended",
          "entities": {
            "requester_interaction_history": {
              "name": "Requester Interaction History",
              "type": "data",
              "description": "A record of past problems or communications initiated by a specific requester."
            },
            "view_interaction_history": {
              "name": "View Interaction History",
              "type": "action",
              "description": "The action of accessing and reviewing a requester's past interactions."
            }
          }
        },
        "attachment_management": {
          "name": "Attachment Management",
          "description": "Enables attaching and viewing files relevant to a problem.",
          "category": "core",
          "entities": {
            "attachment": {
              "name": "Attachment",
              "type": "data",
              "description": "Files or documents (e.g., emails, screenshots) linked to a problem."
            },
            "add_attachment": {
              "name": "Add Attachment",
              "type": "action",
              "description": "The action of uploading and linking a file to a problem."
            },
            "view_attachments": {
              "name": "View Attachments",
              "type": "action",
              "description": "The action of accessing and reviewing files linked to a problem."
            }
          }
        },
        "problem_quick_edit": {
          "name": "Problem Quick Edit",
          "description": "Provides quick editing options for key problem attributes like status, priority, urgency, severity, impact service, and assignee.",
          "category": "core",
          "entities": {
            "quick_edit_interface": {
              "name": "Quick Edit Interface",
              "type": "resource",
              "description": "A streamlined user interface for rapidly modifying specific problem fields."
            },
            "edit_status": {
              "name": "Edit Status",
              "type": "action",
              "description": "The action of quickly changing the problem's status."
            },
            "edit_priority": {
              "name": "Edit Priority",
              "type": "action",
              "description": "The action of quickly changing the problem's priority."
            },
            "edit_urgency": {
              "name": "Edit Urgency",
              "type": "action",
              "description": "The action of quickly changing the problem's urgency."
            },
            "edit_severity": {
              "name": "Edit Severity",
              "type": "action",
              "description": "The action of quickly changing the problem's severity."
            },
            "edit_impact_service": {
              "name": "Edit Impact Service",
              "type": "action",
              "description": "The action of quickly changing the problem's impacted service."
            },
            "edit_assignee": {
              "name": "Edit Assignee",
              "type": "action",
              "description": "The action of quickly changing the problem's assignee."
            }
          }
        },
        "detailed_problem_editing": {
          "name": "Detailed Problem Editing",
          "description": "Allows comprehensive modification of all problem details.",
          "category": "core",
          "entities": {
            "detailed_edit_interface": {
              "name": "Detailed Edit Interface",
              "type": "resource",
              "description": "A comprehensive user interface for modifying all aspects and details of a problem."
            },
            "edit_problem_details": {
              "name": "Edit Problem Details",
              "type": "action",
              "description": "The action of performing a comprehensive modification of a problem's information."
            }
          }
        },
        "problem_deletion": {
          "name": "Problem Deletion",
          "description": "Provides the option to delete problems (an irreversible action).",
          "category": "extended",
          "entities": {
            "delete_problem": {
              "name": "Delete Problem",
              "type": "action",
              "description": "The action of permanently removing a problem record from the system."
            },
            "irreversible_action": {
              "name": "Irreversible Action",
              "type": "configuration",
              "description": "A characteristic indicating that a performed action cannot be undone."
            }
          }
        },
        "problem_copying": {
          "name": "Problem Copying",
          "description": "Enables duplicating an existing problem's details to create a new one.",
          "category": "extended",
          "entities": {
            "copy_problem": {
              "name": "Copy Problem",
              "type": "action",
              "description": "The action of duplicating the details of an existing problem to create a new one."
            },
            "new_problem_(from_copy)": {
              "name": "New Problem (from copy)",
              "type": "resource",
              "description": "A problem record created by copying the details of another existing problem."
            }
          }
        },
        "problem_aging_reports": {
          "name": "Problem Aging Reports",
          "description": "Generates detailed reports based on problem resolution time and resolved status.",
          "category": "extended",
          "entities": {
            "aging_report": {
              "name": "Aging Report",
              "type": "resource",
              "description": "A report detailing the duration problems have been open or in specific states."
            },
            "resolved_status": {
              "name": "Resolved Status",
              "type": "data",
              "description": "A specific status used as a basis for generating aging reports."
            }
          }
        },
        "problem_filtering": {
          "name": "Problem Filtering",
          "description": "Offers various filters to narrow down the list of problems for easier management.",
          "category": "extended",
          "entities": {
            "problem_filter": {
              "name": "Problem Filter",
              "type": "configuration",
              "description": "Criteria used to narrow down and display a subset of problems."
            },
            "expand_icon": {
              "name": "Expand Icon",
              "type": "resource",
              "description": "A user interface element used to reveal or hide problem filter options."
            },
            "view_filters": {
              "name": "View Filters",
              "type": "action",
              "description": "The action of accessing and displaying the available problem filter options."
            }
          }
        },
        "problem_search": {
          "name": "Problem Search",
          "description": "Provides a search bar to find specific problems by ID, assignee, or other criteria.",
          "category": "extended",
          "entities": {
            "search_bar": {
              "name": "Search Bar",
              "type": "resource",
              "description": "A user interface element for entering keywords or identifiers to find specific problems."
            },
            "search_query": {
              "name": "Search Query",
              "type": "data",
              "description": "The text or criteria entered into the search bar (e.g., Problem ID, assignee name)."
            },
            "search_problem": {
              "name": "Search Problem",
              "type": "action",
              "description": "The action of finding specific problems based on entered criteria."
            }
          }
        },
        "date-based_problem_filtering": {
          "name": "Date-based Problem Filtering",
          "description": "Allows filtering problems by specific dates or date ranges.",
          "category": "extended",
          "entities": {
            "calendar_(filter)": {
              "name": "Calendar (filter)",
              "type": "resource",
              "description": "A user interface element for selecting specific dates or date ranges to filter problems."
            },
            "date_filter": {
              "name": "Date Filter",
              "type": "configuration",
              "description": "Criteria used to filter problems based on a specific day, date, or date range."
            },
            "filter_by_date": {
              "name": "Filter by Date",
              "type": "action",
              "description": "The action of applying a date-based filter to the problem list."
            }
          }
        },
        "problem_tagging": {
          "name": "Problem Tagging",
          "description": "Supports grouping problems using predefined tags for better organization.",
          "category": "extended",
          "entities": {
            "tag": {
              "name": "Tag",
              "type": "configuration",
              "description": "A label or keyword used to group or categorize problems."
            },
            "tag_management_module": {
              "name": "Tag Management Module",
              "type": "resource",
              "description": "The module where problem tags can be predefined and managed."
            },
            "apply_tag": {
              "name": "Apply Tag",
              "type": "action",
              "description": "The action of assigning a tag to one or more problems."
            },
            "predefined_tags": {
              "name": "Predefined Tags",
              "type": "configuration",
              "description": "Tags that have been set up in advance within the system."
            }
          }
        },
        "bulk_problem_assignment": {
          "name": "Bulk Problem Assignment",
          "description": "Enables assigning multiple problems to a group simultaneously.",
          "category": "extended",
          "entities": {
            "problem_group": {
              "name": "Problem Group",
              "type": "resource",
              "description": "A collection of problems that can be assigned together."
            },
            "assign_to_group_(bulk)": {
              "name": "Assign to Group (Bulk)",
              "type": "action",
              "description": "The action of assigning multiple selected problems to a group simultaneously."
            }
          }
        },
        "bulk_problem_deletion": {
          "name": "Bulk Problem Deletion",
          "description": "Allows deleting multiple problems at once.",
          "category": "extended",
          "entities": {
            "delete_problems_(bulk)": {
              "name": "Delete Problems (Bulk)",
              "type": "action",
              "description": "The action of deleting multiple selected problems simultaneously."
            }
          }
        },
        "auto-reload_pause": {
          "name": "Auto-reload Pause",
          "description": "Provides an option to pause the automatic refreshing of problem lists.",
          "category": "extended",
          "entities": {
            "auto-reload": {
              "name": "Auto-reload",
              "type": "configuration",
              "description": "The automatic refreshing of the problem list or display."
            },
            "pause_auto-reload": {
              "name": "Pause Auto-reload",
              "type": "action",
              "description": "The action of temporarily stopping the automatic refreshing of the problem list."
            }
          }
        },
        "new_requester_creation": {
          "name": "New Requester Creation",
          "description": "Allows adding new requesters directly from the problem creation interface.",
          "category": "extended",
          "entities": {
            "new_requester": {
              "name": "New Requester",
              "type": "resource",
              "description": "A user being added to the system as a requester of problems."
            },
            "add_new_requester_button": {
              "name": "Add New Requester Button",
              "type": "resource",
              "description": "A user interface element to initiate the process of adding a new requester."
            },
            "requester_module": {
              "name": "Requester Module",
              "type": "resource",
              "description": "The system module dedicated to managing requester information."
            },
            "create_new_requester": {
              "name": "Create New Requester",
              "type": "action",
              "description": "The action of adding a new user as a requester in the system."
            }
          }
        },
        "reporter_specification": {
          "name": "Reporter Specification",
          "description": "Enables specifying a reporter who logged the problem on behalf of the requester.",
          "category": "extended",
          "entities": {
            "reporter": {
              "name": "Reporter",
              "type": "resource",
              "description": "The user who actually reports the problem, potentially on behalf of a requester."
            },
            "reporter_name": {
              "name": "Reporter Name",
              "type": "data",
              "description": "The name of the individual reporting the problem."
            },
            "reporter_email_address": {
              "name": "Reporter Email Address",
              "type": "data",
              "description": "The email address of the individual reporting the problem."
            },
            "specify_reporter": {
              "name": "Specify Reporter",
              "type": "action",
              "description": "The action of entering details for the person reporting the problem."
            }
          }
        },
        "impact_service_selection": {
          "name": "Impact Service Selection",
          "description": "Allows identifying and selecting the service impacted by the problem.",
          "category": "core",
          "entities": {
            "impacted_service": {
              "name": "Impacted Service",
              "type": "data",
              "description": "The specific service that is affected by the problem."
            },
            "select_impacted_service": {
              "name": "Select Impacted Service",
              "type": "action",
              "description": "The action of choosing the service that is affected by the problem."
            }
          }
        },
        "follower_management": {
          "name": "Follower Management",
          "description": "Enables adding users who will receive notifications about problem status changes.",
          "category": "extended",
          "entities": {
            "follower": {
              "name": "Follower",
              "type": "resource",
              "description": "A user who receives notifications about changes or updates to a problem."
            },
            "add_follower": {
              "name": "Add Follower",
              "type": "action",
              "description": "The action of adding a user to the list of individuals who will receive problem notifications."
            },
            "self-follow": {
              "name": "Self-follow",
              "type": "action",
              "description": "The action for a user to add themselves as a follower to a problem."
            }
          }
        },
        "problem_due_date_setting": {
          "name": "Problem Due Date Setting",
          "description": "Allows setting a target date by which a technician aims to resolve the problem.",
          "category": "core",
          "entities": {
            "due_date": {
              "name": "Due Date",
              "type": "data",
              "description": "The target date by which a technician aims to resolve the problem."
            },
            "manager": {
              "name": "Manager",
              "type": "resource",
              "description": "A user role with the privilege to extend the due date of a problem."
            },
            "set_due_date": {
              "name": "Set Due Date",
              "type": "action",
              "description": "The action of assigning a target resolution date to a problem."
            },
            "extend_due_date": {
              "name": "Extend Due Date",
              "type": "action",
              "description": "The action of changing the due date to a later time, typically requiring specific privileges."
            }
          }
        },
        "symptom_description_field": {
          "name": "Symptom Description Field",
          "description": "Provides a dedicated field for detailed description of problem symptoms.",
          "category": "core",
          "entities": {
            "symptom_description_field": {
              "name": "Symptom Description Field",
              "type": "resource",
              "description": "A text input area for detailing the observable indicators or symptoms of an issue."
            },
            "problem_symptoms": {
              "name": "Problem Symptoms",
              "type": "data",
              "description": "The observable signs or indicators of an underlying problem."
            },
            "describe_symptoms": {
              "name": "Describe Symptoms",
              "type": "action",
              "description": "The action of entering detailed information about the problem's symptoms."
            }
          }
        },
        "kedb_lookup_for_related_articles": {
          "name": "KEDB Lookup for Related Articles",
          "description": "Automatically displays relevant Knowledge Base articles from the KEDB when a problem title is entered, suggesting existing resolutions or workarounds.",
          "category": "integration",
          "entities": {
            "problem_title": {
              "name": "Problem Title",
              "type": "data",
              "description": "The subject or name of the problem used as a query for searching the KEDB."
            },
            "known_error_database_(kedb)": {
              "name": "Known Error Database (KEDB)",
              "type": "resource",
              "description": "The database searched for existing knowledge articles relevant to the problem."
            },
            "related_knowledge_base_articles": {
              "name": "Related Knowledge Base Articles",
              "type": "resource",
              "description": "Articles found in the KEDB that are relevant to the current problem."
            },
            "resolution_(from_kedb)": {
              "name": "Resolution (from KEDB)",
              "type": "data",
              "description": "A permanent fix found in the KEDB that can be applied to the problem."
            },
            "workaround_(from_kedb)": {
              "name": "Workaround (from KEDB)",
              "type": "data",
              "description": "A temporary solution found in the KEDB that can be applied to the problem."
            },
            "kedb_lookup": {
              "name": "KEDB Lookup",
              "type": "action",
              "description": "The action of searching the Known Error Database for relevant information."
            }
          }
        },
        "associated_ticket_closure_on_workaround": {
          "name": "Associated Ticket Closure on Workaround",
          "description": "Automatically closes associated tickets once a workaround for the problem is provided.",
          "category": "integration",
          "entities": {
            "workaround_(provided)": {
              "name": "Workaround (provided)",
              "type": "data",
              "description": "A temporary solution that has been implemented, enabling the closure of associated tickets."
            },
            "associated_tickets": {
              "name": "Associated Tickets",
              "type": "resource",
              "description": "Tickets that are linked to a problem and can be closed once a workaround is provided."
            },
            "close_associated_tickets": {
              "name": "Close Associated Tickets",
              "type": "action",
              "description": "The action of closing tickets that are linked to a problem after a workaround has been provided."
            }
          }
        }
      },
      "workflows": {
        "problem_creation/logging": {
          "name": "Problem Creation/Logging",
          "description": "The process by which technicians or authorized users log a new problem, including specifying its source, requester, and initial details."
        },
        "problem_detection": {
          "name": "Problem Detection",
          "description": "The identification of potential problems, either through recurring incidents (multiple tickets for the same issue) or new, unknown issues."
        },
        "problem_classification_&_prioritization": {
          "name": "Problem Classification & Prioritization",
          "description": "The process of categorizing a problem (type, description, category, sub-category) and assigning its priority."
        },
        "problem_investigation_&_diagnosis_(rca)": {
          "name": "Problem Investigation & Diagnosis (RCA)",
          "description": "The systematic process of performing detailed root cause analysis using various methods (e.g., 5-Whys, Chronological, Kepner Tregoe)."
        },
        "known_error_record_management": {
          "name": "Known Error Record Management",
          "description": "The workflow for documenting problems with identified root causes and workarounds in a Known Error Database (KEDB)."
        },
        "workaround_management": {
          "name": "Workaround Management",
          "description": "The process of creating, documenting, and applying temporary solutions to mitigate the impact of a problem."
        },
        "problem_escalation_&_notification": {
          "name": "Problem Escalation & Notification",
          "description": "The workflow for escalating problems requiring higher expertise levels (e.g., L2/L3 technicians) and sending notifications to relevant stakeholders."
        },
        "problem_resolution": {
          "name": "Problem Resolution",
          "description": "The process of implementing a permanent fix for a problem."
        },
        "problem_review_&_closure": {
          "name": "Problem Review & Closure",
          "description": "The final steps of verifying the effectiveness of a resolution and formally closing the problem record."
        },
        "problem-ticket_association": {
          "name": "Problem-Ticket Association",
          "description": "The process of linking problems to one or more related incident tickets."
        },
        "problem-request_association": {
          "name": "Problem-Request Association",
          "description": "The process of linking problems to service requests."
        },
        "problem-change_management_integration": {
          "name": "Problem-Change Management Integration",
          "description": "The workflow for initiating a change request from a problem or linking problems to existing change requests."
        },
        "problem-knowledge_base_integration": {
          "name": "Problem-Knowledge Base Integration",
          "description": "The process of utilizing knowledge base articles for problem diagnosis/resolution and converting resolved problems into new knowledge base articles."
        },
        "problem_viewing_&_navigation": {
          "name": "Problem Viewing & Navigation",
          "description": "The workflow for browsing, searching, filtering, and accessing detailed information about problems within the module (e.g., Panel View, Grid View, Problem ID drill-down)."
        },
        "problem_editing_&_updating": {
          "name": "Problem Editing & Updating",
          "description": "The process of modifying existing problem details, including quick edits and detailed updates."
        },
        "problem_assignment": {
          "name": "Problem Assignment",
          "description": "The workflow for assigning problems to specific technicians or teams."
        },
        "problem_status_management": {
          "name": "Problem Status Management",
          "description": "The process of updating and tracking the state and status transitions of a problem throughout its lifecycle."
        },
        "problem_record_management": {
          "name": "Problem Record Management",
          "description": "The workflows for administrative actions on problem records, such as deleting or copying problems."
        },
        "problem_display_configuration": {
          "name": "Problem Display Configuration",
          "description": "The process of customizing the information displayed in problem views (e.g., summary card, columns)."
        }
      }
    },
    "change_management": {
      "name": "Change Management",
      "description": "The Change Management module in Infraon systematically manages the entire lifecycle of IT changes, from detection to closure, to minimize risks and disruptions to services and operations.",
      "category": "unknown",
      "features": {
        "change_request_logging": {
          "name": "Change Request Logging",
          "description": "Enables users and technicians with appropriate permissions to log new change requests, which can originate from customer requests, tickets, requests, or problems.",
          "category": "core",
          "entities": {
            "change_request": {
              "name": "Change Request",
              "type": "data",
              "description": "The primary data entity representing a request for change, which is logged in the system."
            },
            "technician": {
              "name": "Technician",
              "type": "resource",
              "description": "A user role with permissions to log a change request."
            },
            "user": {
              "name": "User",
              "type": "resource",
              "description": "A general term for an individual with the necessary permissions to log a change."
            },
            "permissions": {
              "name": "Permissions",
              "type": "configuration",
              "description": "Access rights required for logging a change."
            },
            "ticket": {
              "name": "Ticket",
              "type": "data",
              "description": "An existing record (e.g., incident or service request) from which a change request may arise."
            },
            "request": {
              "name": "Request",
              "type": "data",
              "description": "A formal ask or demand from which a change request may arise."
            },
            "problem": {
              "name": "Problem",
              "type": "data",
              "description": "An underlying cause of one or more incidents, from which a change request may arise."
            },
            "customer": {
              "name": "Customer",
              "type": "resource",
              "description": "An individual or entity initiating a request for change."
            }
          }
        },
        "change_lifecycle_management": {
          "name": "Change Lifecycle Management",
          "description": "Manages the entire lifecycle of a change request, encompassing detection, recording, planning, analysis, approvals, implementation, review, and closure.",
          "category": "core",
          "entities": {
            "change_request": {
              "name": "Change Request",
              "type": "data",
              "description": "The central item whose entire lifecycle, from initiation to closure, is managed."
            },
            "change_detection": {
              "name": "Change Detection",
              "type": "action",
              "description": "The initial step in the change management lifecycle where a need for change is identified."
            },
            "change_recording": {
              "name": "Change Recording",
              "type": "action",
              "description": "The step in the lifecycle where the identified change is formally logged in the system."
            },
            "planning": {
              "name": "Planning",
              "type": "action",
              "description": "A lifecycle step involving the detailed preparation and strategizing for a change."
            },
            "analysis": {
              "name": "Analysis",
              "type": "action",
              "description": "A lifecycle step where risks and impacts of a change are thoroughly examined."
            },
            "change_approvals": {
              "name": "Change Approvals",
              "type": "action",
              "description": "A lifecycle step involving the formal review and authorization of a change plan."
            },
            "change_implementation": {
              "name": "Change Implementation",
              "type": "action",
              "description": "A lifecycle step where the approved change is put into effect."
            },
            "review": {
              "name": "Review",
              "type": "action",
              "description": "A lifecycle step involving post-implementation assessment to confirm success and objectives met."
            },
            "closure": {
              "name": "Closure",
              "type": "action",
              "description": "The final step in the change management lifecycle, marking the completion of the change process."
            },
            "state": {
              "name": "State",
              "type": "data",
              "description": "A major phase or stage that a change request progresses through (e.g., Open, In Progress, Close)."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "A specific condition or sub-state within a major lifecycle state (e.g., New, Planning, Implementation, Closed)."
            }
          }
        },
        "detailed_planning_tab": {
          "name": "Detailed Planning Tab",
          "description": "Provides a dedicated section for comprehensive planning, including fields for Rollout Plan, Rollback Plan, Impact analysis (Business, Location, Department, Group, User), Planned Start Date, and Planned End Date.",
          "category": "core",
          "entities": {
            "planning_tab": {
              "name": "Planning Tab",
              "type": "resource",
              "description": "A user interface component within the Change module dedicated to entering and managing planning details."
            },
            "rollout_plan": {
              "name": "Rollout Plan",
              "type": "data",
              "description": "A detailed, step-by-step description of how the change will be implemented."
            },
            "rollback_plan": {
              "name": "Rollback Plan",
              "type": "data",
              "description": "A verified, step-by-step plan for reverting a change if implementation is unsuccessful."
            },
            "impact": {
              "name": "Impact",
              "type": "data",
              "description": "Anticipated effects of the change on various organizational dimensions (e.g., Business, Location, Department, Group, User)."
            },
            "planned_start_date": {
              "name": "Planned Start Date",
              "type": "data",
              "description": "The intended date for the commencement of change implementation."
            },
            "planned_end_date": {
              "name": "Planned End Date",
              "type": "data",
              "description": "The intended date for the completion of change implementation."
            }
          }
        },
        "risk_analysis_and_management": {
          "name": "Risk Analysis and Management",
          "description": "Facilitates detailed analysis of potential risks and impacts, allowing users to record risk details (Name, Type, Mitigation Plan, Description).",
          "category": "core",
          "entities": {
            "risk": {
              "name": "Risk",
              "type": "data",
              "description": "A potential negative outcome or threat associated with a change."
            },
            "risk_analysis": {
              "name": "Risk Analysis",
              "type": "action",
              "description": "The process of identifying, assessing, and understanding the potential risks and impacts of a change."
            },
            "risk_tab": {
              "name": "Risk Tab",
              "type": "resource",
              "description": "A user interface component within the Change module for entering and managing risk details."
            },
            "risk_type": {
              "name": "Risk Type",
              "type": "data",
              "description": "A classification of the nature of a risk (e.g., Business, Financial, Technical, Others)."
            },
            "mitigation_plan": {
              "name": "Mitigation Plan",
              "type": "data",
              "description": "A strategy or set of actions designed to prepare for or lessen the effects of identified risks."
            },
            "risk_level": {
              "name": "Risk Level",
              "type": "data",
              "description": "An assessment of the severity or likelihood of a risk."
            }
          }
        },
        "task_management_within_change": {
          "name": "Task Management within Change",
          "description": "Enables the creation, assignment, and tracking of tasks associated with a change request (Title, Description, Status, Priority, Assignee, Due By).",
          "category": "core",
          "entities": {
            "task": {
              "name": "Task",
              "type": "data",
              "description": "A specific, actionable piece of work that is part of the overall change implementation."
            },
            "tasks_tab": {
              "name": "Tasks Tab",
              "type": "resource",
              "description": "A user interface component within the Change module for managing individual tasks related to a change."
            },
            "task_title": {
              "name": "Task Title",
              "type": "data",
              "description": "A brief name or summary for a specific task."
            },
            "task_description": {
              "name": "Task Description",
              "type": "data",
              "description": "Detailed information about what a task entails."
            },
            "task_status": {
              "name": "Task Status",
              "type": "data",
              "description": "The current state of a task (e.g., To-Do, On Going, Blocked, Done, Canceled)."
            },
            "task_priority": {
              "name": "Task Priority",
              "type": "data",
              "description": "The level of importance assigned to a task."
            },
            "assignee": {
              "name": "Assignee",
              "type": "resource",
              "description": "The user or individual responsible for completing a specific task."
            },
            "task_due_by": {
              "name": "Task Due By",
              "type": "data",
              "description": "The expected date by which a task should be completed."
            },
            "workspace_task_app": {
              "name": "Workspace Task App",
              "type": "resource",
              "description": "An application or module providing enhanced task management capabilities within the system."
            }
          }
        },
        "approval_workflow": {
          "name": "Approval Workflow",
          "description": "Supports the formal review and approval or rejection process for change plans, typically involving a Change Advisory Board (CAB).",
          "category": "core",
          "entities": {
            "change_advisory_board_(cab)": {
              "name": "Change Advisory Board (CAB)",
              "type": "resource",
              "description": "A group of stakeholders responsible for reviewing, assessing, and approving or rejecting change requests."
            },
            "approval": {
              "name": "Approval",
              "type": "action",
              "description": "The formal act of authorizing or consenting to a change plan."
            },
            "rejection": {
              "name": "Rejection",
              "type": "action",
              "description": "The formal act of denying a change plan."
            },
            "change_plan": {
              "name": "Change Plan",
              "type": "data",
              "description": "The detailed proposal for a change that requires review and approval."
            },
            "management": {
              "name": "Management",
              "type": "resource",
              "description": "High-level personnel or a governing body whose approval may be required for certain types of changes (e.g., Major Changes)."
            }
          }
        },
        "change_implementation_coordination": {
          "name": "Change Implementation Coordination",
          "description": "Assists in coordinating the implementation of approved changes, ensuring alignment between different involved teams.",
          "category": "core",
          "entities": {
            "change_manager": {
              "name": "Change Manager",
              "type": "resource",
              "description": "A role responsible for overseeing the implementation of changes and coordinating efforts among different teams."
            },
            "implementation_plan": {
              "name": "Implementation Plan",
              "type": "data",
              "description": "The detailed strategy and steps guiding the execution of a change."
            },
            "teams": {
              "name": "Teams",
              "type": "resource",
              "description": "Groups of individuals involved in the execution and coordination of a change implementation."
            },
            "change_implementer": {
              "name": "Change Implementer",
              "type": "resource",
              "description": "The specific user or individual responsible for carrying out the technical implementation of a change."
            }
          }
        },
        "post-implementation_review": {
          "name": "Post-Implementation Review",
          "description": "Allows for conducting and tracking reviews after change implementation to confirm success and, if necessary, activate rollback plans.",
          "category": "core",
          "entities": {
            "post-implementation_review": {
              "name": "Post-Implementation Review",
              "type": "action",
              "description": "A formal process conducted after a change is implemented to evaluate its success, impact, and whether objectives were met."
            },
            "rollback_plan": {
              "name": "Rollback Plan",
              "type": "data",
              "description": "A contingency plan activated if the change implementation is deemed unsuccessful during the review."
            },
            "objectives": {
              "name": "Objectives",
              "type": "data",
              "description": "The goals or desired outcomes that the change was intended to achieve."
            }
          }
        },
        "change_closure": {
          "name": "Change Closure",
          "description": "Facilitates the final step of the change process, allowing changes to be closed with comments regarding success, timeliness, and other relevant details.",
          "category": "core",
          "entities": {
            "closing_comments": {
              "name": "Closing Comments",
              "type": "data",
              "description": "Remarks or notes recorded when a change is closed, summarizing its outcome and performance."
            },
            "change_status_(closed)": {
              "name": "Change Status (Closed)",
              "type": "data",
              "description": "The final state indicating that a change has completed its lifecycle and is formally closed."
            }
          }
        },
        "change_ownership_assignment": {
          "name": "Change Ownership Assignment",
          "description": "Enables the assignment of key roles such as Change Manager and Change Implementer to specific change requests.",
          "category": "core",
          "entities": {
            "change_manager": {
              "name": "Change Manager",
              "type": "resource",
              "description": "The assigned individual (often a high-level manager or domain expert) who oversees and is responsible for a change request."
            },
            "change_implementer": {
              "name": "Change Implementer",
              "type": "resource",
              "description": "The assigned user responsible for the technical execution and implementation of the change."
            },
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The user who initiated or requested the change."
            }
          }
        },
        "change_monitoring_and_tracking": {
          "name": "Change Monitoring and Tracking",
          "description": "Provides continuous visibility into the progress and status of changes throughout their entire lifecycle.",
          "category": "core",
          "entities": {
            "change_id": {
              "name": "Change ID",
              "type": "data",
              "description": "A unique identifier automatically generated for each change request, used for tracking."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The current condition or progress of a change, used for monitoring its lifecycle."
            },
            "history": {
              "name": "History",
              "type": "data",
              "description": "A chronological record of all events, updates, and changes made to a change request."
            },
            "state": {
              "name": "State",
              "type": "data",
              "description": "The major phase of a change's lifecycle, indicating its overall progress."
            }
          }
        },
        "change_communication": {
          "name": "Change Communication",
          "description": "Supports communication throughout the change lifecycle, including a follower notification system for status updates.",
          "category": "core",
          "entities": {
            "followers": {
              "name": "Followers",
              "type": "resource",
              "description": "Users who are subscribed to receive notifications and updates regarding a specific change request."
            },
            "notifications": {
              "name": "Notifications",
              "type": "action",
              "description": "Automated alerts or messages sent to relevant stakeholders about change status updates or events."
            },
            "email": {
              "name": "Email",
              "type": "resource",
              "description": "A communication channel used for sending automated notifications."
            }
          }
        },
        "lifecycle_states_and_statuses": {
          "name": "Lifecycle States and Statuses",
          "description": "Utilizes predefined states (Open, In Progress, On Hold, Close) and detailed statuses (New, Planning, Analysis, Implementation, Deployment, Verification, Pending, Closed, Cancel) to accurately track change progress.",
          "category": "core",
          "entities": {
            "state": {
              "name": "State",
              "type": "data",
              "description": "A high-level phase in the change lifecycle (e.g., Open, In Progress, On Hold, Close)."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "A detailed condition within a state, indicating specific progress or outcome (e.g., New, Planning, Implementation, Closed, Cancel)."
            },
            "status_scenario": {
              "name": "Status Scenario",
              "type": "data",
              "description": "A description explaining the context or conditions under which a particular status is applied."
            }
          }
        },
        "support_for_change_types": {
          "name": "Support for Change Types",
          "description": "Categorizes and manages different types of changes, including Standard, Minor, and Major, each potentially having distinct approval processes.",
          "category": "core",
          "entities": {
            "change_type": {
              "name": "Change Type",
              "type": "data",
              "description": "A classification category for changes, indicating their nature, risk, and approval requirements."
            },
            "standard_change": {
              "name": "Standard Change",
              "type": "data",
              "description": "A frequently occurring, low-risk change with a pre-defined and approved process (template)."
            },
            "minor_change": {
              "name": "Minor Change",
              "type": "data",
              "description": "A low-impact, low-risk change that occurs occasionally and requires CAB approval."
            },
            "major_change": {
              "name": "Major Change",
              "type": "data",
              "description": "A high-risk, high-impact change requiring in-depth analysis and approval from CAB and management."
            },
            "emergency_change": {
              "name": "Emergency Change",
              "type": "data",
              "description": "An unexpected, urgent change implemented to restore normal functioning quickly (not yet implemented in this release)."
            },
            "template": {
              "name": "Template",
              "type": "configuration",
              "description": "A pre-defined, documented, and approved process for handling standard changes."
            }
          }
        },
        "multiple_view_options": {
          "name": "Multiple View Options",
          "description": "Offers different ways to view change requests, including a Panel View (summary card) and a Grid View (tabular format).",
          "category": "core",
          "entities": {
            "panel_view": {
              "name": "Panel View",
              "type": "resource",
              "description": "A display option for change requests, showing details as summary cards."
            },
            "grid_view": {
              "name": "Grid View",
              "type": "resource",
              "description": "A display option for change requests, showing details in a tabular format."
            },
            "change_page": {
              "name": "Change Page",
              "type": "resource",
              "description": "The main user interface where all change requests are listed and viewed."
            }
          }
        },
        "detailed_change_information_display": {
          "name": "Detailed Change Information Display",
          "description": "Presents comprehensive details for each change, such as Change ID, Subject, Reason for Change, Type, Status, Impact Service, Priority, Risk, Requester, Change Manager, and Implementer.",
          "category": "core",
          "entities": {
            "summary_card": {
              "name": "Summary Card",
              "type": "resource",
              "description": "A compact display element in Panel View showing a brief summary of a change."
            },
            "change_id": {
              "name": "Change ID",
              "type": "data",
              "description": "A unique identifier for the change, displayed in both views."
            },
            "requester": {
              "name": "Requester",
              "type": "data",
              "description": "The name of the user who requested the change, displayed in both views."
            },
            "change_manager": {
              "name": "Change Manager",
              "type": "data",
              "description": "The name of the manager overseeing the change request, displayed in both views."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The current status of the change, displayed in both views."
            },
            "priority": {
              "name": "Priority",
              "type": "data",
              "description": "The importance level of the change, displayed in both views."
            },
            "service": {
              "name": "Service",
              "type": "data",
              "description": "The service category related to the change, displayed in Panel View."
            },
            "subject": {
              "name": "Subject",
              "type": "data",
              "description": "A summary line or title of the change, displayed in Grid View."
            },
            "reason_for_change": {
              "name": "Reason for Change",
              "type": "data",
              "description": "The explanation detailing why the change was requested, displayed in Grid View."
            },
            "change_type": {
              "name": "Change Type",
              "type": "data",
              "description": "The classification of the change (e.g., Standard, Major, Minor), displayed in Grid View."
            },
            "impact_service": {
              "name": "Impact Service",
              "type": "data",
              "description": "The service category that the change could potentially impact, displayed in Grid View."
            },
            "risk": {
              "name": "Risk",
              "type": "data",
              "description": "The assessed risk level of the change, displayed in Grid View."
            },
            "change_implementer": {
              "name": "Change Implementer",
              "type": "data",
              "description": "The name of the user responsible for implementing the change, displayed in Grid View."
            },
            "actions": {
              "name": "Actions",
              "type": "action",
              "description": "Quick action icons available for working on the change, displayed in both views."
            }
          }
        },
        "quick_action_bar": {
          "name": "Quick Action Bar",
          "description": "Provides a floating bar with quick action icons for common operations directly on change request entries.",
          "category": "core",
          "entities": {
            "quick_action_bar": {
              "name": "Quick Action Bar",
              "type": "resource",
              "description": "A user interface element containing icons for performing rapid actions on a change request."
            },
            "quick_edit": {
              "name": "Quick Edit",
              "type": "action",
              "description": "An action to perform rapid modifications to key change details."
            },
            "edit": {
              "name": "Edit",
              "type": "action",
              "description": "An action to access a detailed form for editing all change information."
            },
            "delete": {
              "name": "Delete",
              "type": "action",
              "description": "An action to permanently remove a change request."
            },
            "task_(icon)": {
              "name": "Task (icon)",
              "type": "action",
              "description": "An icon representing the action to view or manage tasks associated with the change."
            },
            "risk_(icon)": {
              "name": "Risk (icon)",
              "type": "action",
              "description": "An icon representing the action to view or manage risks associated with the change."
            },
            "add_ticket_(icon)": {
              "name": "Add Ticket (icon)",
              "type": "action",
              "description": "An icon representing the action to create a new ticket related to the change."
            }
          }
        },
        "change_request_creation_form": {
          "name": "Change Request Creation Form",
          "description": "A structured form with various input fields for submitting new change requests, including subject, description, due date, priority, and risk level.",
          "category": "core",
          "entities": {
            "new_change_button": {
              "name": "New Change Button",
              "type": "resource",
              "description": "A user interface element that initiates the process of creating a new change request."
            },
            "requester_(field)": {
              "name": "Requester (field)",
              "type": "data",
              "description": "An input field for specifying the user who requested the change."
            },
            "reported_by_(field)": {
              "name": "Reported by (field)",
              "type": "data",
              "description": "An input field for specifying the user who is logging the change on behalf of the requester."
            },
            "change_manager_(field)": {
              "name": "Change Manager (field)",
              "type": "data",
              "description": "An input field for selecting the manager overseeing the change."
            },
            "change_implementer_(field)": {
              "name": "Change Implementer (field)",
              "type": "data",
              "description": "An input field for selecting the user responsible for implementing the change."
            },
            "impact_service_(field)": {
              "name": "Impact Service (field)",
              "type": "data",
              "description": "An input field for selecting the service category potentially impacted by the change."
            },
            "service_classification_(field)": {
              "name": "Service Classification (field)",
              "type": "data",
              "description": "An input field for selecting a specific classification within an impacted service."
            },
            "followers_(field)": {
              "name": "Followers (field)",
              "type": "data",
              "description": "An input field for adding users who should be notified of change updates."
            },
            "tags_(field)": {
              "name": "Tags (field)",
              "type": "data",
              "description": "An input field for applying predefined tags to categorize the change."
            },
            "subject_(field)": {
              "name": "Subject (field)",
              "type": "data",
              "description": "An input field for entering a concise summary or title for the change."
            },
            "description_(field)": {
              "name": "Description (field)",
              "type": "data",
              "description": "An input field for providing a brief explanation of the change."
            },
            "due_by_(field)": {
              "name": "Due By (field)",
              "type": "data",
              "description": "An input field for specifying the target completion date for the change."
            },
            "priority_(field)": {
              "name": "Priority (field)",
              "type": "data",
              "description": "An input field for selecting the urgency or importance level of the change."
            },
            "risk_(field)": {
              "name": "Risk (field)",
              "type": "data",
              "description": "An input field for selecting the assessed risk level of the change."
            },
            "change_type_(field)": {
              "name": "Change Type (field)",
              "type": "data",
              "description": "An input field for selecting the classification of the change (e.g., Standard, Major, Minor)."
            },
            "reason_for_change_(field)": {
              "name": "Reason for Change (field)",
              "type": "data",
              "description": "An input field for detailing the justification behind the change request."
            },
            "add_attachments_(action)": {
              "name": "Add attachments (action)",
              "type": "action",
              "description": "An action to upload and associate files (e.g., emails, screenshots) with the change request."
            },
            "rollout_(field)": {
              "name": "Rollout (field)",
              "type": "data",
              "description": "An input field for detailing the plan for implementing the change."
            },
            "rollback_(field)": {
              "name": "Rollback (field)",
              "type": "data",
              "description": "An input field for detailing the plan for reverting the change if necessary."
            },
            "submit_as_new_(button)": {
              "name": "Submit as New (button)",
              "type": "action",
              "description": "A button to finalize and submit the new change request."
            }
          }
        },
        "attachment_management": {
          "name": "Attachment Management",
          "description": "Allows users to add, view, and manage attachments associated with change requests.",
          "category": "core",
          "entities": {
            "attachment": {
              "name": "Attachment",
              "type": "data",
              "description": "Files (e.g., documents, images, emails) that can be associated with a change request."
            },
            "attachment_tab": {
              "name": "Attachment Tab",
              "type": "resource",
              "description": "A user interface component for viewing and managing all files linked to a change."
            },
            "emails": {
              "name": "Emails",
              "type": "data",
              "description": "A type of attachment that can be linked to a change request."
            },
            "screenshots": {
              "name": "Screenshots",
              "type": "data",
              "description": "A type of visual attachment that can be linked to a change request."
            }
          }
        },
        "change_history_tracking": {
          "name": "Change History Tracking",
          "description": "Maintains a chronological record of all actions, updates, and status changes for each change request.",
          "category": "core",
          "entities": {
            "history_tab": {
              "name": "History Tab",
              "type": "resource",
              "description": "A user interface component that displays a chronological record of all modifications and events related to a change request."
            },
            "change_history": {
              "name": "Change History",
              "type": "data",
              "description": "The comprehensive log of all past actions, status changes, and updates performed on a change request."
            }
          }
        },
        "commenting_system": {
          "name": "Commenting System",
          "description": "Enables users and technicians to add and view comments on change requests for collaborative communication.",
          "category": "core",
          "entities": {
            "comment": {
              "name": "Comment",
              "type": "data",
              "description": "Textual remarks or notes that users/technicians can add to a change request."
            },
            "comment_section": {
              "name": "Comment Section",
              "type": "resource",
              "description": "A user interface area where comments on a change can be viewed and added."
            }
          }
        },
        "change_source_tracking": {
          "name": "Change Source Tracking",
          "description": "Records the origin or source from which a change request was initiated (e.g., email, web, phone).",
          "category": "core",
          "entities": {
            "change_source": {
              "name": "Change Source",
              "type": "data",
              "description": "The origin or channel through which a change request was initiated (e.g., email, web, phone, ticket)."
            },
            "email": {
              "name": "Email",
              "type": "data",
              "description": "A source channel for change requests."
            },
            "web": {
              "name": "Web",
              "type": "data",
              "description": "A source channel for change requests, typically through a web portal."
            },
            "phone": {
              "name": "Phone",
              "type": "data",
              "description": "A source channel for change requests, typically via a phone call."
            },
            "ticket": {
              "name": "Ticket",
              "type": "data",
              "description": "A source for change requests, originating from an existing ticket."
            },
            "request": {
              "name": "Request",
              "type": "data",
              "description": "A source for change requests, originating from a service request."
            },
            "problem": {
              "name": "Problem",
              "type": "data",
              "description": "A source for change requests, originating from a problem record."
            }
          }
        },
        "configurable_display_options": {
          "name": "Configurable Display Options",
          "description": "Allows users to customize the details displayed on summary cards and select columns in the grid view to suit their requirements.",
          "category": "extended",
          "entities": {
            "configure_icon": {
              "name": "Configure Icon",
              "type": "resource",
              "description": "A user interface element that allows access to customization settings for display options."
            },
            "summary_card_configuration": {
              "name": "Summary Card Configuration",
              "type": "configuration",
              "description": "Settings that allow users to customize the details displayed on summary cards in Panel View."
            },
            "column_selection_configuration": {
              "name": "Column Selection Configuration",
              "type": "configuration",
              "description": "Settings that allow users to customize which columns are displayed in Grid View."
            }
          }
        },
        "customizable_statuses": {
          "name": "Customizable Statuses",
          "description": "Enables the configuration of custom statuses for change requests through the 'Workflow' module.",
          "category": "extended",
          "entities": {
            "customized_statuses": {
              "name": "Customized Statuses",
              "type": "configuration",
              "description": "User-defined or configurable status options for change requests, tailored to specific organizational requirements."
            },
            "workflow_module": {
              "name": "Workflow Module",
              "type": "resource",
              "description": "The module within the system where customized statuses can be configured."
            }
          }
        },
        "change_templates": {
          "name": "Change Templates",
          "description": "Supports the use of default and custom templates for planning and specific change types, facilitating data integration and automation.",
          "category": "extended",
          "entities": {
            "template": {
              "name": "Template",
              "type": "configuration",
              "description": "A pre-defined structure, process, or set of details that can be applied to new change requests for consistency and efficiency."
            },
            "default_templates": {
              "name": "Default Templates",
              "type": "configuration",
              "description": "Pre-built templates provided by the system for common change scenarios."
            },
            "custom_templates": {
              "name": "Custom Templates",
              "type": "configuration",
              "description": "Templates created and configured by users to suit specific organizational needs."
            }
          }
        },
        "automated_notifications": {
          "name": "Automated Notifications",
          "description": "Provides configurable templates for sending custom mail notifications related to change updates.",
          "category": "extended",
          "entities": {
            "notifications": {
              "name": "Notifications",
              "type": "action",
              "description": "Automated messages or alerts sent to inform users about changes, updates, or events related to change requests."
            },
            "notification_templates": {
              "name": "Notification Templates",
              "type": "configuration",
              "description": "Configurable templates that define the content and format of automated notifications."
            },
            "mail_notifications": {
              "name": "Mail Notifications",
              "type": "action",
              "description": "Automated notifications delivered via email."
            },
            "followers": {
              "name": "Followers",
              "type": "resource",
              "description": "Users who are designated recipients of automated notifications for specific change requests."
            },
            "asset": {
              "name": "Asset",
              "type": "data",
              "description": "A hardware item or component that can trigger automated change notifications."
            }
          }
        },
        "quick_edit_functionality": {
          "name": "Quick Edit Functionality",
          "description": "Allows for rapid modification of key change attributes such as change manager, status, priority, urgency, severity, impact service, and assignee.",
          "category": "extended",
          "entities": {
            "quick_edit_action": {
              "name": "Quick Edit Action",
              "type": "action",
              "description": "A rapid action allowing users to modify specific key fields of a change request directly from the view."
            },
            "change_manager_(field)": {
              "name": "Change Manager (field)",
              "type": "data",
              "description": "A field that can be quickly edited to change the assigned change manager."
            },
            "status_(field)": {
              "name": "Status (field)",
              "type": "data",
              "description": "A field that can be quickly edited to update the current status of the change."
            },
            "priority_(field)": {
              "name": "Priority (field)",
              "type": "data",
              "description": "A field that can be quickly edited to adjust the priority level of the change."
            },
            "urgency_(field)": {
              "name": "Urgency (field)",
              "type": "data",
              "description": "A field that can be quickly edited to modify the urgency of the change."
            },
            "severity_(field)": {
              "name": "Severity (field)",
              "type": "data",
              "description": "A field that can be quickly edited to modify the severity of the change."
            },
            "impact_service_(field)": {
              "name": "Impact Service (field)",
              "type": "data",
              "description": "A field that can be quickly edited to change the service category impacted by the change."
            },
            "assignee_(field)": {
              "name": "Assignee (field)",
              "type": "data",
              "description": "A field that can be quickly edited to change the user assigned to the change."
            }
          }
        },
        "bulk_actions": {
          "name": "Bulk Actions",
          "description": "Enables performing actions like assigning or deleting multiple change requests simultaneously.",
          "category": "extended",
          "entities": {
            "bulk_assignment": {
              "name": "Bulk Assignment",
              "type": "action",
              "description": "An action allowing multiple change requests to be assigned to a team simultaneously."
            },
            "bulk_delete": {
              "name": "Bulk Delete",
              "type": "action",
              "description": "An action allowing multiple change requests to be deleted simultaneously."
            },
            "change_request_(multiple)": {
              "name": "Change Request (multiple)",
              "type": "data",
              "description": "Multiple instances of change requests that can be selected for simultaneous actions."
            },
            "team": {
              "name": "Team",
              "type": "resource",
              "description": "A group of users to whom multiple change requests can be assigned."
            }
          }
        },
        "filtering_and_search": {
          "name": "Filtering and Search",
          "description": "Offers various options to filter and search for specific change requests using criteria like Change ID, assignee, or date ranges.",
          "category": "extended",
          "entities": {
            "change_filters": {
              "name": "Change Filters",
              "type": "configuration",
              "description": "Criteria or options used to narrow down the list of displayed change requests."
            },
            "search_bar": {
              "name": "Search Bar",
              "type": "resource",
              "description": "A user interface element for entering keywords or identifiers to find specific change requests."
            },
            "calendar_filter": {
              "name": "Calendar Filter",
              "type": "resource",
              "description": "A user interface element allowing filtering of change requests by specific dates or date ranges."
            },
            "change_id": {
              "name": "Change ID",
              "type": "data",
              "description": "A unique identifier that can be used as a search criterion."
            },
            "assignee": {
              "name": "Assignee",
              "type": "data",
              "description": "The user assigned to a change, which can be used as a search criterion."
            },
            "tag": {
              "name": "Tag",
              "type": "data",
              "description": "A keyword or label used for grouping and filtering change requests."
            }
          }
        },
        "aging_metrics": {
          "name": "Aging Metrics",
          "description": "Displays metrics to track the resolution time of changes, visible in the Grid View.",
          "category": "extended",
          "entities": {
            "aging_metric": {
              "name": "Aging Metric",
              "type": "data",
              "description": "A measurement indicating the duration a change request has been in a particular state or open."
            },
            "resolution_time": {
              "name": "Resolution Time",
              "type": "data",
              "description": "The duration taken to resolve a change request, tracked by the aging clock."
            },
            "aging_reports": {
              "name": "Aging Reports",
              "type": "data",
              "description": "Reports that provide detailed insights into the aging of change requests."
            }
          }
        },
        "knowledge_base_integration": {
          "name": "Knowledge Base Integration",
          "description": "Allows for the easy conversion of resolved changes into Knowledge Base articles for efficient knowledge management.",
          "category": "integration",
          "entities": {
            "knowledge_base_(kb)": {
              "name": "Knowledge Base (KB)",
              "type": "resource",
              "description": "A centralized repository for storing and managing knowledge articles."
            },
            "knowledge_article": {
              "name": "Knowledge Article",
              "type": "data",
              "description": "A piece of documented information, often created from resolved changes, stored in the Knowledge Base."
            },
            "kb_icon": {
              "name": "KB Icon",
              "type": "resource",
              "description": "A user interface icon that appears post-resolution, enabling the conversion of a change into a knowledge article."
            }
          }
        },
        "ticket_creation_from_change": {
          "name": "Ticket Creation from Change",
          "description": "Enables users to raise a new ticket directly from a change request if any issues arise during its implementation.",
          "category": "integration",
          "entities": {
            "ticket": {
              "name": "Ticket",
              "type": "data",
              "description": "A record of an issue or request that can be raised if problems occur during change implementation."
            },
            "add_ticket_action": {
              "name": "Add Ticket Action",
              "type": "action",
              "description": "The action or functionality to create a new ticket directly from a change request."
            }
          }
        },
        "requester_management": {
          "name": "Requester Management",
          "description": "Integrates with requester management, allowing users to search for existing requesters or add new ones during change creation.",
          "category": "integration",
          "entities": {
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The user who initiates a change request, whose details can be managed within the system."
            },
            "add_a_new_requester_button": {
              "name": "Add a New Requester Button",
              "type": "resource",
              "description": "A user interface element to add details for a new requester not yet in the system."
            },
            "requester_module": {
              "name": "Requester Module",
              "type": "resource",
              "description": "A dedicated module within the system for managing requester information and details."
            }
          }
        },
        "workspace_task_app_integration": {
          "name": "Workspace Task App Integration",
          "description": "Provides a seamless experience with the Task Common Module for enhanced task management within the application.",
          "category": "integration",
          "entities": {
            "workspace_task_app": {
              "name": "Workspace Task App",
              "type": "resource",
              "description": "An integrated application providing enhanced task management capabilities within the overall system."
            },
            "task_common_module": {
              "name": "Task Common Module",
              "type": "resource",
              "description": "The underlying module that provides the core functionalities for task management, integrated with the Workspace Task App."
            }
          }
        },
        "requester_interaction_history": {
          "name": "Requester Interaction History",
          "description": "Displays a list of past interactions (e.g., changes, tickets) associated with a specific requester.",
          "category": "integration",
          "entities": {
            "requester_interaction_history": {
              "name": "Requester Interaction History",
              "type": "data",
              "description": "A record of all past change requests or other interactions initiated by a specific requester."
            },
            "interaction_tab": {
              "name": "Interaction Tab",
              "type": "resource",
              "description": "A user interface component displaying the history of change requests created by a specific requester."
            },
            "change_id": {
              "name": "Change ID",
              "type": "data",
              "description": "The unique identifier used to view the detailed information of past interactions."
            }
          }
        }
      },
      "workflows": {
        "change_request_submission": {
          "name": "Change Request Submission",
          "description": "The process by which a user or system identifies a need for change (e.g., from a customer request, ticket, or problem) and formally logs it into the Change Management module, providing initial details."
        },
        "change_request_lifecycle_management": {
          "name": "Change Request Lifecycle Management",
          "description": "The comprehensive, end-to-end process of managing a change request from its initial recording through planning, analysis, approval, implementation, post-implementation review, and final closure."
        },
        "change_planning_and_analysis": {
          "name": "Change Planning and Analysis",
          "description": "The workflow involving the detailed planning of a change, including defining rollout and rollback strategies, assessing potential impacts on the organization or services, outlining associated tasks, and identifying and mitigating risks."
        },
        "change_approval_process": {
          "name": "Change Approval Process",
          "description": "The structured process where the Change Advisory Board (CAB) reviews the change plan, discusses impacts, benefits, and implementation details, and makes an informed decision to approve or reject the change request."
        },
        "change_implementation_and_verification": {
          "name": "Change Implementation and Verification",
          "description": "The workflow for executing the approved change plan, coordinating resources and teams involved, and subsequently conducting a post-implementation review to confirm success, achieve objectives, and activate rollback if the implementation is unsuccessful."
        },
        "change_request_monitoring_and_administration": {
          "name": "Change Request Monitoring and Administration",
          "description": "The activities involved in viewing, searching, filtering, editing, assigning, tracking status, and generally overseeing the details and progress of change requests within the system."
        },
        "knowledge_management_integration_for_changes": {
          "name": "Knowledge Management Integration for Changes",
          "description": "The process of converting successfully resolved change requests into knowledge base articles to build an organizational knowledge repository and ensure efficient knowledge management."
        }
      }
    },
    "nccm": {
      "name": "NCCM",
      "description": "The NCCM module enables network administrators to efficiently manage remote IT networks and IP-enabled security devices from a centralized location.",
      "category": "unknown",
      "features": {
        "centralized_management": {
          "name": "Centralized Management",
          "description": "Enables network administrators to efficiently manage remote IT networks and IP-enabled security devices from a centralized location.",
          "category": "core",
          "entities": {
            "network_administrators": {
              "name": "Network administrators",
              "type": "resource",
              "description": "Users responsible for managing networks."
            },
            "remote_it_networks": {
              "name": "Remote IT networks",
              "type": "resource",
              "description": "Network infrastructure managed remotely."
            },
            "ip-enabled_security_devices": {
              "name": "IP-enabled security devices",
              "type": "resource",
              "description": "Security hardware managed remotely."
            },
            "centralized_location": {
              "name": "Centralized location",
              "type": "resource",
              "description": "A single point of control for management."
            }
          }
        },
        "network_configuration_and_change_management": {
          "name": "Network Configuration and Change Management",
          "description": "Provides tools and content to effectively manage network configurations and changes.",
          "category": "core",
          "entities": {
            "network_configurations": {
              "name": "Network configurations",
              "type": "configuration",
              "description": "Settings and parameters of network devices."
            },
            "change_management_content": {
              "name": "Change management content",
              "type": "data",
              "description": "Documentation or guidelines for managing network changes."
            }
          }
        },
        "download_job_management": {
          "name": "Download Job Management",
          "description": "Allows users to access detailed content and effectively manage network jobs, specifically related to configuration downloads.",
          "category": "core",
          "entities": {
            "download_job": {
              "name": "Download Job",
              "type": "action",
              "description": "A specific task or process for downloading configurations."
            },
            "network_jobs": {
              "name": "Network jobs",
              "type": "action",
              "description": "Broader term for tasks related to network operations."
            },
            "download_job_content": {
              "name": "Download Job content",
              "type": "data",
              "description": "Information or documentation about download jobs."
            }
          }
        },
        "calendar_view": {
          "name": "Calendar View",
          "description": "Provides a summary of daily NCCM activity, including processed successful, failed, completed, and total configurations.",
          "category": "core",
          "entities": {
            "daily_activity": {
              "name": "Daily activity",
              "type": "data",
              "description": "Summary of operations performed each day."
            },
            "processed_successful_configurations": {
              "name": "Processed successful configurations",
              "type": "data",
              "description": "Count of configurations successfully processed."
            },
            "failed_configurations": {
              "name": "Failed configurations",
              "type": "data",
              "description": "Count of configurations that failed processing."
            },
            "completed_configurations": {
              "name": "Completed configurations",
              "type": "data",
              "description": "Count of configurations that reached a completed state."
            },
            "total_configurations": {
              "name": "Total configurations",
              "type": "data",
              "description": "Overall count of configurations managed."
            },
            "nccm_activity": {
              "name": "NCCM activity",
              "type": "data",
              "description": "Operations and events within the NCCM module."
            }
          }
        },
        "privilege-based_access_control": {
          "name": "Privilege-Based Access Control",
          "description": "Controls user access, viewing, adding, editing, deleting, executing, and exporting functionalities within the module based on administrator-defined roles and privileges.",
          "category": "extended",
          "entities": {
            "user": {
              "name": "User",
              "type": "resource",
              "description": "An individual interacting with the system."
            },
            "administrator": {
              "name": "Administrator",
              "type": "resource",
              "description": "A user with elevated permissions to manage privileges."
            },
            "privileges": {
              "name": "Privileges",
              "type": "configuration",
              "description": "Specific permissions granted to users or roles."
            },
            "roles": {
              "name": "Roles",
              "type": "configuration",
              "description": "Predefined sets of privileges assigned to users."
            },
            "access": {
              "name": "Access",
              "type": "action",
              "description": "The ability to use a feature."
            },
            "view": {
              "name": "View",
              "type": "action",
              "description": "The ability to display information."
            },
            "add": {
              "name": "Add",
              "type": "action",
              "description": "The ability to create new entries."
            },
            "edit": {
              "name": "Edit",
              "type": "action",
              "description": "The ability to modify existing entries."
            },
            "delete": {
              "name": "Delete",
              "type": "action",
              "description": "The ability to remove entries."
            },
            "execute": {
              "name": "Execute",
              "type": "action",
              "description": "The ability to run a process or job."
            },
            "export": {
              "name": "Export",
              "type": "action",
              "description": "The ability to extract data from the system."
            }
          }
        },
        "calendar_view_navigation": {
          "name": "Calendar View Navigation",
          "description": "Allows users to navigate to previous or next months/years within the Calendar View to review historical data.",
          "category": "extended",
          "entities": {
            "current_month": {
              "name": "Current month",
              "type": "data",
              "description": "The default time period displayed in the calendar view."
            },
            "arrow_keys": {
              "name": "Arrow keys",
              "type": "resource",
              "description": "User interface elements for navigating time periods."
            },
            "previous_months(s)/year(s)": {
              "name": "Previous months(s)/year(s)",
              "type": "data",
              "description": "Past time periods accessible via navigation."
            },
            "next_month\u2019s_data": {
              "name": "Next month\u2019s data",
              "type": "data",
              "description": "Future time periods accessible via navigation."
            }
          }
        },
        "completed_device_count_display": {
          "name": "Completed Device Count Display",
          "description": "Displays the count of completed devices enabled for the day's download within the Calendar View.",
          "category": "extended",
          "entities": {
            "completed_device_count": {
              "name": "Completed device count",
              "type": "data",
              "description": "A numerical summary of devices with completed downloads for the day."
            },
            "day's_download": {
              "name": "Day's download",
              "type": "data",
              "description": "The specific daily period for which the count is relevant."
            }
          }
        },
        "total_node_count_display": {
          "name": "Total Node Count Display",
          "description": "Displays the total count of nodes added to the NCCM tool to date within the Calendar View.",
          "category": "extended",
          "entities": {
            "total_node_count": {
              "name": "Total node count",
              "type": "data",
              "description": "The cumulative number of nodes added to the NCCM tool."
            },
            "nccm_tool": {
              "name": "NCCM tool",
              "type": "resource",
              "description": "The software system managing network configurations."
            }
          }
        },
        "download_success_count_display": {
          "name": "Download Success Count Display",
          "description": "Displays the count of successful configuration download devices for the day within the Calendar View.",
          "category": "extended",
          "entities": {
            "count_of_successful_configuration_download_devices": {
              "name": "Count of successful configuration download devices",
              "type": "data",
              "description": "A numerical summary of devices where configuration downloads succeeded for the day."
            },
            "day": {
              "name": "Day",
              "type": "data",
              "description": "The specific daily period for which the count is relevant."
            }
          }
        },
        "download_fail_count_display": {
          "name": "Download Fail Count Display",
          "description": "Displays the count of failed configuration download devices for the day within the Calendar View.",
          "category": "extended",
          "entities": {
            "count_of_failed_configuration_download_devices": {
              "name": "Count of failed configuration download devices",
              "type": "data",
              "description": "A numerical summary of devices where configuration downloads failed for the day."
            },
            "day": {
              "name": "Day",
              "type": "data",
              "description": "The specific daily period for which the count is relevant."
            }
          }
        },
        "new_node_count_display": {
          "name": "New Node Count Display",
          "description": "Displays the count of new devices added for the day within the Calendar View.",
          "category": "extended",
          "entities": {
            "count_of_new_devices": {
              "name": "Count of new devices",
              "type": "data",
              "description": "A numerical summary of devices newly added for the day."
            },
            "day": {
              "name": "Day",
              "type": "data",
              "description": "The specific daily period for which the count is relevant."
            }
          }
        },
        "vulnerable_device_count_display": {
          "name": "Vulnerable Device Count Display",
          "description": "Displays the count of vulnerable devices identified for the day within the Calendar View.",
          "category": "extended",
          "entities": {
            "count_of_the_day's_vulnerable_devices": {
              "name": "Count of the day's vulnerable devices",
              "type": "data",
              "description": "A numerical summary of devices identified as vulnerable for the day."
            },
            "day": {
              "name": "Day",
              "type": "data",
              "description": "The specific daily period for which the count is relevant."
            }
          }
        },
        "download_job_status_drill-down": {
          "name": "Download Job Status Drill-down",
          "description": "Allows users to view the detailed status of daily download jobs by clicking on the 'Complete Count' in the Calendar View.",
          "category": "extended",
          "entities": {
            "complete_count": {
              "name": "Complete count",
              "type": "data",
              "description": "The clickable display element representing completed downloads."
            },
            "status_of_the_download_job": {
              "name": "Status of the download job",
              "type": "data",
              "description": "Detailed information about the state of a download job."
            },
            "day": {
              "name": "Day",
              "type": "data",
              "description": "The specific daily period for which the status is relevant."
            }
          }
        },
        "download_result_page_drill-down": {
          "name": "Download Result Page Drill-down",
          "description": "Allows users to view detailed download results (success/fail) by clicking on the respective counts in the Calendar View.",
          "category": "extended",
          "entities": {
            "success/fail_count": {
              "name": "Success/Fail count",
              "type": "data",
              "description": "The clickable display element representing successful or failed downloads."
            },
            "download_result_page": {
              "name": "Download result page",
              "type": "resource",
              "description": "A dedicated page displaying detailed outcomes of download jobs."
            }
          }
        },
        "vulnerable_list_page_drill-down": {
          "name": "Vulnerable List Page Drill-down",
          "description": "Allows users to view a list of vulnerable devices by clicking on the 'Vulnerable Count' in the Calendar View.",
          "category": "extended",
          "entities": {
            "vulnerable_count": {
              "name": "Vulnerable count",
              "type": "data",
              "description": "The clickable display element representing vulnerable devices."
            },
            "vulnerable_list_page": {
              "name": "Vulnerable list page",
              "type": "resource",
              "description": "A dedicated page listing all identified vulnerable devices."
            }
          }
        },
        "new_device_list_page_drill-down": {
          "name": "New Device List Page Drill-down",
          "description": "Allows users to view a list of newly added devices by clicking on the 'New Node' count in the Calendar View.",
          "category": "extended",
          "entities": {
            "new_node": {
              "name": "New node",
              "type": "data",
              "description": "The clickable display element representing newly added devices."
            },
            "newly_added_device_list_page": {
              "name": "Newly added device list page",
              "type": "resource",
              "description": "A dedicated page listing all devices added recently."
            }
          }
        }
      },
      "workflows": {
        "network_configuration_management": {
          "name": "Network Configuration Management",
          "description": "The overarching process for network administrators to effectively manage network configurations and changes for remote IT networks and IP-enabled security devices."
        },
        "configuration_download_job_management": {
          "name": "Configuration Download Job Management",
          "description": "The workflow for accessing, managing, and monitoring specific jobs related to downloading configurations from network devices."
        },
        "device_onboarding_and_management": {
          "name": "Device Onboarding and Management",
          "description": "The process of adding new network devices (nodes) to the NCCM tool and managing their presence within the system."
        },
        "vulnerability_detection_and_reporting": {
          "name": "Vulnerability Detection and Reporting",
          "description": "The workflow for identifying and reporting on vulnerable network devices within the managed infrastructure."
        },
        "nccm_activity_monitoring_and_reporting": {
          "name": "NCCM Activity Monitoring and Reporting",
          "description": "The process of viewing and analyzing daily NCCM activities, including the status of configuration downloads (successful, failed, completed), new device additions, and vulnerable device counts through a centralized calendar view and detailed reports."
        }
      }
    },
    "infraon_configuration": {
      "name": "Infraon Configuration",
      "description": "The Infraon Configuration module is a central hub for managing all foundational settings required for the platform's efficient operation, covering user and service management, IT operations, automation, and system notifications.",
      "category": "unknown",
      "features": {
        "general_settings": {
          "name": "General Settings",
          "description": "A collection of core configurations including Business Hours for SLA management, Tag Management for grouping items, and a complete Audit Log for tracking user actions.",
          "category": "core",
          "entities": {
            "general_settings_module": {
              "name": "General Settings Module",
              "type": "configuration",
              "description": "A central module for configuring core operational parameters like business hours, tags, and audit logs."
            }
          }
        },
        "business_hours_configuration": {
          "name": "Business Hours Configuration",
          "description": "Configure organizational working hours, holidays, and break times to accurately manage Service Level Agreements (SLAs) and work allocation.",
          "category": "core",
          "entities": {
            "business_hour_profile": {
              "name": "Business Hour Profile",
              "type": "configuration",
              "description": "A configuration defining the working days, hours, and timezone for a team or organization to manage SLAs."
            },
            "exclude_hours": {
              "name": "Exclude Hours",
              "type": "configuration",
              "description": "A setting within a Business Hour Profile to specify non-working periods like lunch breaks or weekends."
            },
            "yearly_holiday_list": {
              "name": "Yearly Holiday List",
              "type": "configuration",
              "description": "A list of regional holidays that are excluded from SLA calculations."
            }
          }
        },
        "tag_management": {
          "name": "Tag Management",
          "description": "Create and manage keywords (tags) to group and categorize various items across the platform, including assets, users, services, and tickets, for easier filtering and assignment.",
          "category": "core",
          "entities": {
            "tag": {
              "name": "Tag",
              "type": "resource",
              "description": "A simplified keyword used to group and identify items or users, such as assets, incidents, or services."
            },
            "tag_type": {
              "name": "Tag Type",
              "type": "configuration",
              "description": "A classification that defines the category a tag applies to, such as 'Assets', 'Users', or 'Services'."
            },
            "tag_assignment": {
              "name": "Tag Assignment",
              "type": "action",
              "description": "The action of applying tags to various items like assets, resources, or owners through single or bulk methods."
            }
          }
        },
        "audit_log": {
          "name": "Audit Log",
          "description": "Provides a comprehensive, administrator-accessible log of all user and system actions performed within Infraon, including the action, user, IP address, and timestamp.",
          "category": "core",
          "entities": {
            "audit_record": {
              "name": "Audit Record",
              "type": "data",
              "description": "A log entry that records a user's action, IP address, and the timestamp of the activity."
            }
          }
        },
        "api_registration": {
          "name": "API Registration",
          "description": "Register and configure third-party REST APIs to enable secure data exchange between Infraon and other applications, supporting various authentication methods.",
          "category": "integration",
          "entities": {
            "api_registration": {
              "name": "API Registration",
              "type": "configuration",
              "description": "A configuration for integrating third-party APIs, specifying details like Base URL, content type, and authentication."
            },
            "api_authentication_type": {
              "name": "API Authentication Type",
              "type": "configuration",
              "description": "The authorization method for an API, such as API Key, Basic Auth, or Custom Auth."
            },
            "api_resource": {
              "name": "API Resource",
              "type": "resource",
              "description": "Data objects like Requests, Sites, Technicians, and Assets that can be accessed via the API."
            }
          }
        },
        "user_management": {
          "name": "User Management",
          "description": "A suite of features to manage system users and requesters, including invitations, role assignments, team/department grouping, and leave tracking.",
          "category": "core",
          "entities": {
            "user": {
              "name": "User",
              "type": "resource",
              "description": "An individual with access to Infraon, assigned a specific role and privileges."
            },
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "An internal or external end-user account for raising requests through the self-service portal."
            }
          }
        },
        "roles_&_privileges_management": {
          "name": "Roles & Privileges Management",
          "description": "Define user roles with granular, module-specific permissions (e.g., view, add, edit, delete) to enforce access control across the platform.",
          "category": "core",
          "entities": {
            "role": {
              "name": "Role",
              "type": "configuration",
              "description": "A definition of a user's function (e.g., Administrator, Tech Support Operator) that determines their access level."
            },
            "privilege": {
              "name": "Privilege",
              "type": "configuration",
              "description": "A specific permission (e.g., view, add, edit, delete) granted to a role for a particular module."
            },
            "privacy_settings": {
              "name": "Privacy Settings",
              "type": "configuration",
              "description": "A configuration to control the visibility of a requester's contact information, email, and name for technicians."
            }
          }
        },
        "team_&_department_management": {
          "name": "Team & Department Management",
          "description": "Organize users into logical groups such as departments and teams (e.g., Approval, Technical, Service Desk) for streamlined workflow and automated task assignment.",
          "category": "core",
          "entities": {
            "team": {
              "name": "Team",
              "type": "resource",
              "description": "A group of users, often with similar skills, created for collaboration and task assignment."
            },
            "department": {
              "name": "Department",
              "type": "resource",
              "description": "A logical grouping of users that reflects the organization's structure, led by a Department Head and Prime User."
            },
            "shift_configuration": {
              "name": "Shift Configuration",
              "type": "configuration",
              "description": "A schedule defining working hours and assignments for hourly technicians or agents."
            }
          }
        },
        "password_policy_configuration": {
          "name": "Password Policy Configuration",
          "description": "Create and apply multiple, role-specific password policies with detailed complexity requirements to enhance system security and meet compliance standards.",
          "category": "core",
          "entities": {
            "password_policy": {
              "name": "Password Policy",
              "type": "configuration",
              "description": "A set of rules governing password complexity, length, history, and expiration to enhance security."
            }
          }
        },
        "leave_management": {
          "name": "Leave Management",
          "description": "Configure leave types and allow users to view their leave balance and apply for time off, which is then routed for approval.",
          "category": "extended",
          "entities": {
            "leave_category": {
              "name": "Leave Category",
              "type": "configuration",
              "description": "A type of leave available within the organization, configured by an administrator."
            },
            "leave_request": {
              "name": "Leave Request",
              "type": "resource",
              "description": "An application submitted by a user for a leave of absence, which is subject to approval."
            },
            "leave_balance": {
              "name": "Leave Balance",
              "type": "data",
              "description": "A record showing a user's available versus taken leave days for each category."
            }
          }
        },
        "service_management_(catalogue_configuration)": {
          "name": "Service Management (Catalogue Configuration)",
          "description": "Define and manage a dual-catalogue system: a technical-facing Service Catalogue for backend components and a user-facing Business Catalogue for the self-service portal.",
          "category": "core",
          "entities": {
            "service_catalogue": {
              "name": "Service Catalogue",
              "type": "configuration",
              "description": "The backend repository where administrators define and manage all IT and non-IT services and products."
            },
            "business_catalogue": {
              "name": "Business Catalogue",
              "type": "resource",
              "description": "The user-facing self-service portal where end-users can browse and request available services and products."
            },
            "service": {
              "name": "Service",
              "type": "resource",
              "description": "A specific product or service offered to users, such as 'Laptop Setup' or 'HR Letter Request'."
            },
            "service_template": {
              "name": "Service Template",
              "type": "configuration",
              "description": "A pre-configured form that simplifies the process of raising a request for a specific service."
            }
          }
        },
        "notification_gateway_configuration": {
          "name": "Notification Gateway Configuration",
          "description": "Configure external communication channels by setting up SMTP for email notifications and SMS gateways for text message alerts.",
          "category": "integration",
          "entities": {
            "smtp_configuration": {
              "name": "SMTP Configuration",
              "type": "configuration",
              "description": "Settings for the outgoing email server (SMTP) used to send email notifications from Infraon."
            },
            "sms_gateway_configuration": {
              "name": "SMS Gateway Configuration",
              "type": "configuration",
              "description": "Settings for a third-party SMS service provider to enable sending SMS notifications from Infraon."
            }
          }
        },
        "notification_trigger_configuration": {
          "name": "Notification Trigger Configuration",
          "description": "Create rules based on system alerts or event correlations to automatically trigger actions, such as sending notifications or creating tickets.",
          "category": "extended",
          "entities": {
            "trigger": {
              "name": "Trigger",
              "type": "configuration",
              "description": "A set of conditions that, when met, initiates a predefined action such as sending a notification or creating a ticket."
            },
            "trigger_action": {
              "name": "Trigger Action",
              "type": "action",
              "description": "The operation performed when a trigger's conditions are met, like sending an email, SMS, or creating a ticket."
            },
            "macro": {
              "name": "Macro",
              "type": "data",
              "description": "A placeholder used in notification templates to dynamically insert information like an asset's IP address or hostname."
            }
          }
        },
        "messenger_audit": {
          "name": "Messenger Audit",
          "description": "View and manage a centralized log of all inbound and outbound communications sent through configured channels like email, SMS, and Slack.",
          "category": "core",
          "entities": {
            "notification_log": {
              "name": "Notification Log",
              "type": "data",
              "description": "A complete audit trail of all notifications (Email, Slack, SMS, etc.) sent from and received within Infraon."
            }
          }
        },
        "workflow_automation": {
          "name": "Workflow Automation",
          "description": "Design and implement automated, multi-step process flows for modules like Incidents using a visual, drag-and-drop interface with states, conditions, and actions.",
          "category": "extended",
          "entities": {
            "workflow": {
              "name": "Workflow",
              "type": "configuration",
              "description": "A visual, drag-and-drop flowchart that automates a multi-step process for modules like Incident or Request."
            },
            "workflow_state": {
              "name": "Workflow State",
              "type": "configuration",
              "description": "A specific stage within a workflow, such as 'Open', 'In Progress', 'Approval', or 'Closed'."
            },
            "workflow_action": {
              "name": "Workflow Action",
              "type": "action",
              "description": "An operation performed within a workflow state, like 'Send Email', 'Set Value', or 'Transfer State'."
            },
            "build_form": {
              "name": "Build Form",
              "type": "configuration",
              "description": "A customizable form with custom fields that can be added to the incident, request, or change forms associated with a workflow."
            }
          }
        },
        "mail-to-ticket_automation_(mail_automator)": {
          "name": "Mail-to-Ticket Automation (Mail Automator)",
          "description": "Configure IMAP email accounts and forwarding rules to automatically convert incoming emails into tickets within Infraon.",
          "category": "integration",
          "entities": {
            "imap_configuration": {
              "name": "IMAP Configuration",
              "type": "configuration",
              "description": "Settings for an incoming mail server that allow Infraon to read emails and automatically convert them into tickets."
            },
            "email_forwarding_rule": {
              "name": "Email Forwarding Rule",
              "type": "configuration",
              "description": "A rule configured in an external email client (e.g., Gmail, Outlook) to forward messages to the Infraon helpdesk address."
            }
          }
        },
        "business_rules_for_auto-assignment": {
          "name": "Business Rules for Auto-Assignment",
          "description": "Define automated ticket assignment rules using methods like Round Robin or Load Balancing, based on criteria such as impacted services or requester tags.",
          "category": "extended",
          "entities": {
            "business_rule": {
              "name": "Business Rule",
              "type": "configuration",
              "description": "A rule that automates ticket assignment to a specific team or technician based on criteria like impacted service or requester tag."
            },
            "assignment_method": {
              "name": "Assignment Method",
              "type": "configuration",
              "description": "The logic used for auto-assignment, such as 'Round Robin' for sequential distribution or 'Load Balancer' for workload-based distribution."
            }
          }
        },
        "ticket_escalation_management": {
          "name": "Ticket Escalation Management",
          "description": "Configure automated escalation paths for support tickets, defining rules for moving tickets to higher support tiers based on priority or time elapsed.",
          "category": "extended",
          "entities": {
            "escalation_rule": {
              "name": "Escalation Rule",
              "type": "configuration",
              "description": "A configuration that automatically escalates a ticket to a higher support level if it is not resolved within a specified time."
            }
          }
        },
        "customer_feedback_templates": {
          "name": "Customer Feedback Templates",
          "description": "Create and manage customizable survey templates to automatically collect customer feedback after a ticket is resolved.",
          "category": "extended",
          "entities": {
            "feedback_template": {
              "name": "Feedback Template",
              "type": "configuration",
              "description": "A customizable survey template sent to requesters after ticket resolution to collect feedback on service quality."
            },
            "customer_feedback": {
              "name": "Customer Feedback",
              "type": "data",
              "description": "The ratings and comments submitted by a requester through a feedback survey."
            }
          }
        },
        "agent_management": {
          "name": "Agent Management",
          "description": "Install, deploy (via Active Directory), and manage monitoring agents and data collectors for Windows, macOS, and Linux devices to enable discovery and data collection.",
          "category": "core",
          "entities": {
            "inventory_agent": {
              "name": "Inventory Agent",
              "type": "resource",
              "description": "A software component installed on Windows, Mac, or Linux devices to collect and report inventory data to Infraon."
            },
            "data_collector_agent": {
              "name": "Data Collector Agent",
              "type": "resource",
              "description": "A pre-configured agent used for agentless discovery and monitoring of other devices on the network."
            },
            "agent_api_token": {
              "name": "Agent API Token",
              "type": "configuration",
              "description": "A unique organization key used to authenticate and register agents with the Infraon platform."
            }
          }
        },
        "ai_bot_assistance": {
          "name": "AI Bot Assistance",
          "description": "Create or customize pre-built AI bots for various departments (e.g., HR, IT, Finance) to provide instant answers to common user queries.",
          "category": "extended",
          "entities": {
            "ai_bot": {
              "name": "AI Bot",
              "type": "resource",
              "description": "An AI-powered assistant that provides real-time answers to queries based on a library of knowledge documents."
            },
            "bot_topic": {
              "name": "Bot Topic",
              "type": "resource",
              "description": "A knowledge document (e.g., PDF, TXT) uploaded to train an AI bot on a specific subject area."
            }
          }
        },
        "organization_management": {
          "name": "Organization Management",
          "description": "Manage foundational organizational data, including branch locations in the Address Book and platform license details.",
          "category": "core",
          "entities": {
            "address_book": {
              "name": "Address Book",
              "type": "resource",
              "description": "A repository for storing and managing location information for the organization's branches and vendors."
            },
            "license_details": {
              "name": "License Details",
              "type": "data",
              "description": "Information regarding the Infraon software license, including version, user/asset limits, and expiry date."
            }
          }
        },
        "asynchronous_task_manager": {
          "name": "Asynchronous Task Manager",
          "description": "Monitor and manage background jobs and asynchronous tasks running on the Celery framework within the platform.",
          "category": "extended",
          "entities": {
            "asynchronous_task": {
              "name": "Asynchronous Task",
              "type": "resource",
              "description": "A background job, built on the Celery framework, that operates independently of the main application flow."
            },
            "celery_worker": {
              "name": "Celery Worker",
              "type": "resource",
              "description": "A process responsible for executing asynchronous tasks from the job queue."
            }
          }
        },
        "it_operations": {
          "name": "IT Operations",
          "description": "A comprehensive suite of modules for discovering, monitoring, and managing IT infrastructure, including device credentials, discovery, thresholds, and network configuration.",
          "category": "core",
          "entities": {
            "it_operations_module": {
              "name": "IT Operations Module",
              "type": "configuration",
              "description": "A comprehensive module for managing device discovery, credentials, thresholds, and other operational tasks."
            }
          }
        },
        "device_credential_management": {
          "name": "Device Credential Management",
          "description": "Securely configure, store, and manage access credentials for various protocols (SNMP, WMI, SSH, HTTP) required for device discovery and monitoring.",
          "category": "core",
          "entities": {
            "device_credential_profile": {
              "name": "Device Credential Profile",
              "type": "configuration",
              "description": "A stored set of login credentials for a specific protocol (e.g., SNMP, WMI, SSH, HTTP) used for device discovery and monitoring."
            }
          }
        },
        "device_discovery": {
          "name": "Device Discovery",
          "description": "Discover and onboard IT assets using multiple methods, including automatic network scans, scheduled discovery for Windows/Linux servers, VMware environments, and CSV imports.",
          "category": "core",
          "entities": {
            "discovery_profile": {
              "name": "Discovery Profile",
              "type": "configuration",
              "description": "A saved configuration for a discovery job, specifying the IP range, credentials, discovery options, and schedule."
            },
            "discovery_job": {
              "name": "Discovery Job",
              "type": "action",
              "description": "The process of scanning the network to identify and inventory devices based on a discovery profile."
            },
            "discovery_schedule": {
              "name": "Discovery Schedule",
              "type": "configuration",
              "description": "The configured timing for a discovery job, which can be set to run immediately, daily, weekly, or at other intervals."
            }
          }
        },
        "threshold_configuration": {
          "name": "Threshold Configuration",
          "description": "Define static, adaptive, and range-based thresholds for performance metrics to automatically generate alerts when predefined limits are breached.",
          "category": "core",
          "entities": {
            "threshold": {
              "name": "Threshold",
              "type": "configuration",
              "description": "A rule defining performance limits for a monitored metric (e.g., CPU utilization), which triggers an alarm when breached."
            },
            "range_threshold": {
              "name": "Range Threshold",
              "type": "configuration",
              "description": "A dynamic, model-generated threshold with upper and lower bounds based on historical data for anomaly detection."
            },
            "adaptive_threshold": {
              "name": "Adaptive Threshold",
              "type": "configuration",
              "description": "A model-generated threshold that adapts based on deviation factors, poll points, and historical patterns."
            }
          }
        },
        "advanced_resource_configuration_(aiops)": {
          "name": "Advanced Resource Configuration (AIOps)",
          "description": "Configure advanced settings for IT resources, including AIOps features for predictive anomaly detection, long-term forecasting, and seasonal event suppression.",
          "category": "extended",
          "entities": {
            "aiops_configuration": {
              "name": "AIOps Configuration",
              "type": "configuration",
              "description": "Settings for AI-driven features like prediction, forecasting, and event association to enhance operational intelligence."
            },
            "prediction_model": {
              "name": "Prediction Model",
              "type": "configuration",
              "description": "An AIOps model that provides short-term anomaly detection by analyzing historical performance metrics."
            },
            "forecast_model": {
              "name": "Forecast Model",
              "type": "configuration",
              "description": "An AIOps model used for long-term capacity planning by projecting future resource needs."
            },
            "event_association_mining": {
              "name": "Event Association Mining",
              "type": "configuration",
              "description": "An AIOps feature that analyzes historical event patterns to discover relationships and identify probable root causes."
            }
          }
        },
        "software_blacklist_&_whitelist": {
          "name": "Software Blacklist & Whitelist",
          "description": "Create and manage blacklists and whitelists to control which software applications are permitted or blocked from running on managed systems.",
          "category": "extended",
          "entities": {
            "blacklist": {
              "name": "Blacklist",
              "type": "configuration",
              "description": "A list of software applications that are explicitly blocked from being installed or executed on a system."
            },
            "whitelist": {
              "name": "Whitelist",
              "type": "configuration",
              "description": "A list of software applications that are explicitly permitted to be installed or run on a system."
            }
          }
        },
        "correlation_rule_configuration": {
          "name": "Correlation Rule Configuration",
          "description": "Define rules to automatically analyze and correlate related parent and child events to reduce alert noise and identify the root cause of issues.",
          "category": "extended",
          "entities": {
            "correlation_rule": {
              "name": "Correlation Rule",
              "type": "configuration",
              "description": "A rule that analyzes relationships between parent and child events to reduce alert noise and identify the root cause of issues."
            }
          }
        },
        "diagnosis_tools": {
          "name": "Diagnosis Tools",
          "description": "Utilize built-in network diagnostic tools, including Ping, SNMP Walk, SSH Check, and WMI Check, to troubleshoot connectivity and protocol issues in real-time.",
          "category": "core",
          "entities": {
            "ping": {
              "name": "Ping",
              "type": "action",
              "description": "A diagnostic action to test the reachability and latency of a network device."
            },
            "snmp_walk": {
              "name": "SNMP Walk",
              "type": "action",
              "description": "A diagnostic action to query a device for a tree of information using the SNMP protocol."
            },
            "ssh_check": {
              "name": "SSH Check",
              "type": "action",
              "description": "A diagnostic action to verify SSH connectivity and credentials for a device."
            },
            "wmi_check": {
              "name": "WMI Check",
              "type": "action",
              "description": "A diagnostic action to verify WMI connectivity and credentials for a Windows device."
            }
          }
        },
        "network_configuration_management_(nccm)": {
          "name": "Network Configuration Management (NCCM)",
          "description": "A suite of tools to manage network device configurations, including automated backups, change tracking, compliance checking, and OS upgrades.",
          "category": "extended",
          "entities": {
            "configuration_template": {
              "name": "Configuration Template",
              "type": "configuration",
              "description": "A reusable set of commands, often with variables, for executing configuration changes on network devices."
            },
            "download_job": {
              "name": "Download Job",
              "type": "action",
              "description": "A task to retrieve configuration files from network devices for backup, auditing, and analysis."
            },
            "upload_job": {
              "name": "Upload Job",
              "type": "action",
              "description": "A task to push configuration changes, updates, or OS images to network devices."
            },
            "compliance_policy": {
              "name": "Compliance Policy",
              "type": "configuration",
              "description": "A set of rules and rule groups used to enforce internal (baseline) or external (e.g., PCI, NIST) standards."
            },
            "cli_job/session": {
              "name": "CLI Job/Session",
              "type": "action",
              "description": "A direct, audited command-line interface session with a network device, managed through the NCCM application."
            },
            "vulnerability_data": {
              "name": "Vulnerability Data",
              "type": "data",
              "description": "Information about known vulnerabilities (CVEs) related to device operating systems, used for security assessment."
            }
          }
        },
        "zero_touch_provisioning_(ztp)": {
          "name": "Zero Touch Provisioning (ZTP)",
          "description": "Automate the initial configuration and deployment of new network devices as soon as they are powered on and connected to the network.",
          "category": "extended",
          "entities": {
            "ztp_configuration_profile": {
              "name": "ZTP Configuration Profile",
              "type": "configuration",
              "description": "A profile that automates the initial configuration of network devices when they first boot up, using DHCP and syslog patterns."
            },
            "runtime_parameter": {
              "name": "Runtime Parameter",
              "type": "configuration",
              "description": "A dynamic variable (e.g., hostname, IP address) used in configuration templates that is populated during the ZTP process."
            },
            "ztp_upload_job": {
              "name": "ZTP Upload Job",
              "type": "action",
              "description": "An automated job that pushes the initial configuration to a newly discovered device as part of the ZTP workflow."
            }
          }
        },
        "log_management": {
          "name": "Log Management",
          "description": "Collect, search, and analyze log data from various systems. Features include creating multi-index patterns, searching with KQL, and viewing logs in a real-time stream.",
          "category": "core",
          "entities": {
            "log_multi-index": {
              "name": "Log Multi-Index",
              "type": "configuration",
              "description": "A configuration that groups similar log indices from Elasticsearch to create a unified, searchable data view."
            },
            "log_search": {
              "name": "Log Search",
              "type": "action",
              "description": "The action of querying and analyzing log data using KQL syntax to find specific events or patterns."
            },
            "log_stream": {
              "name": "Log Stream",
              "type": "data",
              "description": "A real-time, tail-like view of all incoming log data being ingested into the system."
            },
            "log_export": {
              "name": "Log Export",
              "type": "action",
              "description": "The process of generating and downloading log data reports in formats like PDF, CSV, or XLS for offline analysis."
            }
          }
        },
        "log_rule_configuration": {
          "name": "Log Rule Configuration",
          "description": "Define rules based on custom queries or threshold counts to automatically trigger alerts from log data, enabling real-time threat detection.",
          "category": "extended",
          "entities": {
            "log_rule": {
              "name": "Log Rule",
              "type": "configuration",
              "description": "A predefined condition or query that, when matched in log data, triggers an alert or another automated action."
            }
          }
        },
        "vendor_management": {
          "name": "Vendor Management",
          "description": "Manage vendor information, including contact details and addresses, and link vendors to software licenses and assets for efficient tracking.",
          "category": "core",
          "entities": {
            "vendor_profile": {
              "name": "Vendor Profile",
              "type": "resource",
              "description": "A record containing details about a vendor, which can be customized and used for asset and license management."
            },
            "vendor_address": {
              "name": "Vendor Address",
              "type": "resource",
              "description": "The location information for a vendor, stored and managed within the organization's Address Book."
            }
          }
        },
        "platform_account_configuration": {
          "name": "Platform Account Configuration",
          "description": "View and edit high-level account configuration settings for the Infraon platform.",
          "category": "core",
          "entities": {
            "account_configuration": {
              "name": "Account Configuration",
              "type": "configuration",
              "description": "High-level settings related to the overall Infraon platform account."
            },
            "service_upgrade": {
              "name": "Service Upgrade",
              "type": "action",
              "description": "The action for an organization to select and purchase additional services through the management portal."
            }
          }
        }
      },
      "workflows": {
        "configuring_business_hours": {
          "name": "Configuring Business Hours",
          "description": "Users configure the working hours, holidays, and break times for teams or the organization. This configuration is used to control Service Level Agreements (SLAs) and manage work allocation."
        },
        "managing_tags": {
          "name": "Managing Tags",
          "description": "Users create, edit, and delete simplified keywords (tags) to group and categorize various items within Infraon, such as assets, users, services, and tickets, for easier filtering and management."
        },
        "assigning_tags_to_items": {
          "name": "Assigning Tags to Items",
          "description": "Users apply previously created tags to assets, resources, or owners. This can be done for single items, in bulk from the UI, or by importing a CSV file."
        },
        "registering_an_api": {
          "name": "Registering an API",
          "description": "Users configure the details of third-party REST APIs, including base URL, authentication type (API Key, Basic Auth, etc.), and parameters, to enable data exchange between Infraon and other applications."
        },
        "reviewing_audit_logs": {
          "name": "Reviewing Audit Logs",
          "description": "An administrator reviews a comprehensive, read-only log of all manual and automated activities that have occurred within the tool, including user actions, IP addresses, and timestamps."
        },
        "managing_users": {
          "name": "Managing Users",
          "description": "An administrator invites new users via email, assigns them roles, and manages existing user accounts. Adding users is done exclusively through the invitation system."
        },
        "managing_requesters": {
          "name": "Managing Requesters",
          "description": "An administrator invites or adds requesters (internal or external end-users) who can raise requests through the self-service portal. Requesters can be added individually, in bulk via CSV, or by invitation."
        },
        "managing_roles_and_privileges": {
          "name": "Managing Roles and Privileges",
          "description": "An administrator creates new roles or customizes existing ones by defining granular permissions (view, add, edit, delete, etc.) for each module to control user access throughout the Infraon platform."
        },
        "managing_teams": {
          "name": "Managing Teams",
          "description": "An administrator groups users into teams based on skills or roles, assigns them to specific modules, and configures ticket auto-assignment methods like Round Robin, Load Balanced, or Skill-Based."
        },
        "managing_departments": {
          "name": "Managing Departments",
          "description": "An administrator creates organizational departments, assigns a department head and prime user, and groups users to facilitate logical work assignments and approval workflows."
        },
        "managing_password_policies": {
          "name": "Managing Password Policies",
          "description": "An administrator creates and customizes multiple password policies with specific rules (length, complexity, history) and assigns them to different user roles to enhance security and meet compliance."
        },
        "managing_user_leave": {
          "name": "Managing User Leave",
          "description": "Users can view their leave balance and apply for time off, which is then submitted for manager approval. Administrators can configure leave types and view team-wide leave information."
        },
        "configuring_the_service_catalogue": {
          "name": "Configuring the Service Catalogue",
          "description": "An administrator defines and manages the products and services offered to end-users. This involves creating catalogues, categories, and detailed service definitions with ownership, cost, and templates for the self-service portal."
        },
        "configuring_notification_channels_(smtp/sms)": {
          "name": "Configuring Notification Channels (SMTP/SMS)",
          "description": "An administrator configures SMTP server details to enable email notifications and sets up an SMS gateway to enable SMS notifications from the Infraon system."
        },
        "configuring_notification_triggers": {
          "name": "Configuring Notification Triggers",
          "description": "Users create rules that automatically trigger an action, such as sending an email/SMS notification or creating a ticket, when specific alert or correlation conditions are met."
        },
        "automating_ticket_assignment_with_business_rules": {
          "name": "Automating Ticket Assignment with Business Rules",
          "description": "An administrator defines business rules to automatically assign tickets to a specific group, expertise, or level based on predefined criteria like the impacted service or requester tag."
        },
        "configuring_escalation_policies": {
          "name": "Configuring Escalation Policies",
          "description": "An administrator defines the automated escalation process for support tickets, specifying the conditions, priority, and sequence (e.g., L1 to L2) for reassigning unresolved tickets."
        },
        "automating_email-to-ticket_conversion": {
          "name": "Automating Email-to-Ticket Conversion",
          "description": "An administrator configures an IMAP mail server on Infraon and sets up email forwarding from external mail clients (like Gmail or Outlook) to automatically convert incoming emails into tickets."
        },
        "designing_process_workflows": {
          "name": "Designing Process Workflows",
          "description": "A user designs a visual, multi-step process flow for modules like Incident or Request. This involves using a drag-and-drop interface to define states, conditions, actions (e.g., send email, set value), and custom form fields."
        },
        "managing_customer_feedback_templates": {
          "name": "Managing Customer Feedback Templates",
          "description": "An administrator creates and customizes feedback survey templates that are automatically sent to requesters upon ticket resolution to gather insights on service quality."
        },
        "installing_and_managing_bots_and_agents": {
          "name": "Installing and Managing Bots and Agents",
          "description": "An administrator installs inventory agents on Windows, Mac, or Linux devices (manually or via Active Directory GPO) for discovery and monitoring. They can also create or customize AI bots to assist users with queries."
        },
        "managing_organization_locations": {
          "name": "Managing Organization Locations",
          "description": "A user adds, edits, or bulk-imports physical addresses for the organization's branches and vendors into the Address Book, which is used to align users, assets, and services."
        },
        "managing_device_credentials": {
          "name": "Managing Device Credentials",
          "description": "A user adds and manages protocol-specific credentials (e.g., SNMP community strings, SSH usernames/passwords) that are required for Infraon to discover and monitor network devices and servers."
        },
        "discovering_it_assets": {
          "name": "Discovering IT Assets",
          "description": "A user configures and schedules discovery jobs using various methods (Automatic, Network, Windows/Linux Servers, VMware) to scan the network based on IP ranges or CSV files and add devices to the system for monitoring and management."
        },
        "managing_device_monitoring_thresholds": {
          "name": "Managing Device Monitoring Thresholds",
          "description": "A user defines and manages thresholds for key performance indicators (e.g., CPU, Memory). This includes setting static, adaptive, or range-based thresholds that trigger alerts when breached."
        },
        "managing_advanced_resource_configurations_(aiops)": {
          "name": "Managing Advanced Resource Configurations (AIOps)",
          "description": "A user configures advanced settings for monitored resources, including enabling AIOps features like anomaly prediction, long-term forecasting, and event association mining to gain deeper insights."
        },
        "using_diagnostic_tools": {
          "name": "Using Diagnostic Tools",
          "description": "A user performs real-time troubleshooting on network devices using built-in tools like Ping, SNMP Walk, SSH Check, and WMI Check to verify connectivity and retrieve information."
        },
        "managing_network_device_configurations_(nccm)": {
          "name": "Managing Network Device Configurations (NCCM)",
          "description": "An administrator uses Download Jobs to back up device configurations (startup and running), compares different versions to identify changes, and manages the configuration history."
        },
        "automating_network_changes_with_upload_jobs": {
          "name": "Automating Network Changes with Upload Jobs",
          "description": "An administrator creates and executes Upload Jobs using configuration templates to apply changes, merge configurations, or upgrade the OS on network devices. This can be done directly or routed through a formal change request approval process."
        },
        "managing_nccm_policies_and_compliance": {
          "name": "Managing NCCM Policies and Compliance",
          "description": "An administrator defines rules, groups them, and creates policies (e.g., for PCI, NIST) to audit device configurations for compliance. The system can report violations and trigger automated remediation actions."
        },
        "managing_network_vulnerabilities": {
          "name": "Managing Network Vulnerabilities",
          "description": "A user views vulnerabilities detected on network devices, categorized by CVE or asset. They can analyze the severity, identify affected nodes, and initiate remediation actions like OS upgrades or command execution jobs."
        },
        "provisioning_devices_with_zero_touch_provisioning_(ztp)": {
          "name": "Provisioning Devices with Zero Touch Provisioning (ZTP)",
          "description": "An administrator configures a ZTP profile that listens for DHCP server logs. When a new device comes online, ZTP automatically discovers it, applies a configuration template, and onboards it without manual intervention."
        },
        "managing_cli_access_with_authentication_and_authorization": {
          "name": "Managing CLI Access with Authentication and Authorization",
          "description": "An administrator creates Authentication Profiles to control which users can initiate CLI sessions with devices and Authorization Profiles to define which specific commands those users are permitted or denied to execute."
        },
        "managing_log_data": {
          "name": "Managing Log Data",
          "description": "A user configures log collection by defining multi-index patterns, uses a powerful search interface to query and analyze log data, streams logs in real-time, and exports reports for offline analysis."
        },
        "enabling_snmp_on_a_cisco_device": {
          "name": "Enabling SNMP on a Cisco Device",
          "description": "A network engineer connects to a Cisco router or switch via telnet, enters configuration mode, and executes specific commands to set up SNMP read-only and read-write community strings for monitoring."
        },
        "managing_platform_account_settings": {
          "name": "Managing Platform Account Settings",
          "description": "A user with appropriate permissions checks and edits the main account configuration settings for the Infraon platform."
        }
      }
    },
    "request_management": {
      "name": "Request Management",
      "description": "Infraon's Request Management module handles the entire lifecycle of formal user-initiated requests for IT services, information, or provisions, ensuring effective and user-friendly service delivery.",
      "category": "unknown",
      "features": {
        "request_creation_&_channels": {
          "name": "Request Creation & Channels",
          "description": "Allows users and technicians to formally initiate service requests through multiple channels including web portal, mobile app, email (with parsing of subject/description), helpline, WhatsApp, and chatbot.",
          "category": "core",
          "entities": {
            "request": {
              "name": "Request",
              "type": "resource",
              "description": "The primary entity representing a formal request for service, information, or access."
            },
            "new_request_button": {
              "name": "New Request Button",
              "type": "action",
              "description": "A UI element used to initiate the creation of a new request."
            },
            "web_portal": {
              "name": "Web Portal",
              "type": "resource",
              "description": "An online interface through which users can log requests."
            },
            "email_channel": {
              "name": "Email Channel",
              "type": "resource",
              "description": "A communication method allowing users to submit requests via email to a service desk address."
            },
            "service_desk_mail_address": {
              "name": "Service Desk Mail Address",
              "type": "configuration",
              "description": "The specific email address configured for receiving service requests."
            },
            "service_desk_helpline_number": {
              "name": "Service Desk Helpline Number",
              "type": "configuration",
              "description": "A phone number for users to call and log requests."
            },
            "mobile_app": {
              "name": "Mobile App",
              "type": "resource",
              "description": "A mobile application enabling users to create requests."
            },
            "whatsapp_channel": {
              "name": "WhatsApp Channel",
              "type": "resource",
              "description": "A messaging platform used for creating requests."
            },
            "chatbot_channel": {
              "name": "Chatbot Channel",
              "type": "resource",
              "description": "An automated conversational interface for logging requests."
            },
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The user or end-user who initiates or requests a service."
            },
            "reported_by": {
              "name": "Reported By",
              "type": "resource",
              "description": "The user who logs a request on behalf of the requester."
            },
            "request_subject": {
              "name": "Request Subject",
              "type": "data",
              "description": "A summary line for the request, often derived from email subject lines."
            },
            "request_description": {
              "name": "Request Description",
              "type": "data",
              "description": "Detailed information or notes about the service request."
            },
            "request_source": {
              "name": "Request Source",
              "type": "data",
              "description": "An attribute indicating the channel through which the request was submitted (e.g., email, web, mobile)."
            }
          }
        },
        "request_lifecycle_management": {
          "name": "Request Lifecycle Management",
          "description": "Manages the entire process of a request from creation to closure, including predefined states (Open, In Progress, Resolved, Closed) and various statuses (New, Analysis, Escalated, Waiting for closure, Completed, Accepted, Resolved by Event, Pending for User Input).",
          "category": "core",
          "entities": {
            "request": {
              "name": "Request",
              "type": "resource",
              "description": "The central entity whose progression through various stages is managed."
            },
            "request_state": {
              "name": "Request State",
              "type": "data",
              "description": "A major phase in the request's lifecycle (e.g., Open, In Progress, Resolved, Closed)."
            },
            "request_status": {
              "name": "Request Status",
              "type": "data",
              "description": "A granular condition within a request state, indicating its current condition (e.g., New, Analysis, Escalated, Waiting for Closure)."
            },
            "request_lifecycle": {
              "name": "Request Lifecycle",
              "type": "data",
              "description": "The complete sequence of states and statuses a request undergoes from creation to closure."
            }
          }
        },
        "request_classification_&_categorization": {
          "name": "Request Classification & Categorization",
          "description": "Enables agents to classify and organize requests by type, service classification, priority, and assign them with followers and tags.",
          "category": "core",
          "entities": {
            "request_type": {
              "name": "Request Type",
              "type": "data",
              "description": "A category used to classify requests, often with multiple sub-classifications."
            },
            "service_classification": {
              "name": "Service Classification",
              "type": "data",
              "description": "A sub-category within a request type or 'Request For' category, used for more specific classification."
            },
            "priority": {
              "name": "Priority",
              "type": "data",
              "description": "An attribute indicating the urgency and impact of the request (e.g., low, medium, high, critical)."
            },
            "tags": {
              "name": "Tags",
              "type": "data",
              "description": "Labels used to group and organize requests for easier management and filtering."
            },
            "request_for_category": {
              "name": "Request For Category",
              "type": "data",
              "description": "A broad category defining the nature of the service requested."
            }
          }
        },
        "initial_support_provision": {
          "name": "Initial Support Provision",
          "description": "Allows service desk technicians to offer immediate support for simple requests.",
          "category": "core",
          "entities": {
            "service_desk_technician": {
              "name": "Service Desk Technician",
              "type": "resource",
              "description": "A user role responsible for providing initial assistance and support for requests."
            },
            "requester": {
              "name": "Requester",
              "type": "resource",
              "description": "The user receiving initial support for their request."
            },
            "initial_support": {
              "name": "Initial Support",
              "type": "action",
              "description": "The immediate assistance or information provided to a requester based on the simplicity of their service request."
            }
          }
        },
        "request_resolution_&_closure": {
          "name": "Request Resolution & Closure",
          "description": "Facilitates the fulfillment of requested services/information and the formal closure of requests upon requester's agreement.",
          "category": "core",
          "entities": {
            "resolution": {
              "name": "Resolution",
              "type": "action",
              "description": "The process of providing the requested information or service to fulfill the request."
            },
            "closure": {
              "name": "Closure",
              "type": "action",
              "description": "The final step in the request lifecycle, marking the request as completed after resolution and requester agreement."
            },
            "closure_note": {
              "name": "Closure Note",
              "type": "data",
              "description": "A textual note added by the technician when closing a request."
            },
            "closure_category": {
              "name": "Closure Category",
              "type": "data",
              "description": "A classification applied during request closure."
            },
            "resolve_action": {
              "name": "Resolve Action",
              "type": "action",
              "description": "A functionality or button to mark a request as resolved."
            },
            "close_action": {
              "name": "Close Action",
              "type": "action",
              "description": "A functionality or button to mark a request as closed."
            }
          }
        },
        "request_ownership_&_assignment": {
          "name": "Request Ownership & Assignment",
          "description": "Supports assigning requests to specific technicians or teams, including self-assignment options ('Take it').",
          "category": "core",
          "entities": {
            "request_ownership": {
              "name": "Request Ownership",
              "type": "data",
              "description": "The concept of accountability for a request throughout its lifecycle."
            },
            "assignee": {
              "name": "Assignee",
              "type": "resource",
              "description": "The individual technician or agent responsible for working on and resolving a request."
            },
            "team": {
              "name": "Team",
              "type": "resource",
              "description": "A group of technicians or agents to whom a request can be assigned."
            },
            "assignment": {
              "name": "Assignment",
              "type": "action",
              "description": "The act of allocating a request to a specific assignee or team."
            },
            "take_it_option": {
              "name": "Take It Option",
              "type": "action",
              "description": "A functionality allowing a technician to self-assign a request."
            }
          }
        },
        "request_monitoring_&_tracking": {
          "name": "Request Monitoring & Tracking",
          "description": "Provides capabilities to monitor and track the progress of requests throughout their lifecycle, including aging metrics to track resolution time.",
          "category": "core",
          "entities": {
            "monitoring": {
              "name": "Monitoring",
              "type": "action",
              "description": "The continuous observation of a request's progress and status."
            },
            "tracking": {
              "name": "Tracking",
              "type": "action",
              "description": "The ability to follow the status, history, and changes of a request."
            },
            "aging_metric": {
              "name": "Aging Metric",
              "type": "data",
              "description": "A data point indicating the duration a request has been open or in a particular state."
            },
            "followers": {
              "name": "Followers",
              "type": "resource",
              "description": "Users who receive notifications about updates and changes to a specific request."
            },
            "follow_option": {
              "name": "Follow Option",
              "type": "action",
              "description": "A functionality allowing a user to subscribe to notifications for a request."
            }
          }
        },
        "internal_&_external_communication": {
          "name": "Internal & External Communication",
          "description": "Manages communication related to requests, allowing users/technicians to add comments, internal notes, and notifying followers of changes.",
          "category": "core",
          "entities": {
            "communication": {
              "name": "Communication",
              "type": "action",
              "description": "The exchange of information between requesters, technicians, and other stakeholders regarding a request."
            },
            "comments": {
              "name": "Comments",
              "type": "data",
              "description": "Textual notes or remarks added to a request by users or technicians."
            },
            "communication_history": {
              "name": "Communication History",
              "type": "data",
              "description": "A chronological record of all interactions, comments, and email exchanges related to a request."
            },
            "reply_to_email_action": {
              "name": "Reply to Email Action",
              "type": "action",
              "description": "Functionality to respond to emails associated with a request directly from the system."
            },
            "forward_email_action": {
              "name": "Forward Email Action",
              "type": "action",
              "description": "Functionality to forward emails associated with a request to other recipients."
            },
            "add_notes_action": {
              "name": "Add Notes Action",
              "type": "action",
              "description": "Functionality to add internal notes to a request."
            }
          }
        },
        "request_display_views_(panel_&_grid)": {
          "name": "Request Display Views (Panel & Grid)",
          "description": "Offers two distinct visual layouts (Panel View with summary cards and Grid View with tabular data) for displaying and managing requests, both featuring quick action bars.",
          "category": "core",
          "entities": {
            "request_page": {
              "name": "Request Page",
              "type": "resource",
              "description": "The main interface within the module where all requests are listed and managed."
            },
            "panel_view": {
              "name": "Panel View",
              "type": "configuration",
              "description": "A display mode that shows request details as condensed summary cards."
            },
            "grid_view": {
              "name": "Grid View",
              "type": "configuration",
              "description": "A display mode that shows request details in a tabular, list-like format."
            },
            "request_summary_card": {
              "name": "Request Summary Card",
              "type": "data",
              "description": "A compact display element in Panel View providing a brief overview of a request."
            },
            "tabular_form": {
              "name": "Tabular Form",
              "type": "data",
              "description": "The structured, row-and-column display format used in Grid View."
            }
          }
        },
        "detailed_request_information_display": {
          "name": "Detailed Request Information Display",
          "description": "Provides comprehensive details for each request, including ID, requester, team, status, priority, service, source, subject, assignee, and allows viewing communication history, and work logs.",
          "category": "core",
          "entities": {
            "request_id": {
              "name": "Request ID",
              "type": "data",
              "description": "A unique identifier automatically generated for each request."
            },
            "requester_name": {
              "name": "Requester Name",
              "type": "data",
              "description": "The name of the user who submitted the request."
            },
            "team_name": {
              "name": "Team Name",
              "type": "data",
              "description": "The name of the team assigned to handle the request."
            },
            "status": {
              "name": "Status",
              "type": "data",
              "description": "The current status of the request displayed in detail views."
            },
            "priority": {
              "name": "Priority",
              "type": "data",
              "description": "The priority level of the request displayed in detail views."
            },
            "service": {
              "name": "Service",
              "type": "data",
              "description": "The specific IT service related to the request."
            },
            "request_source": {
              "name": "Request Source",
              "type": "data",
              "description": "The origin channel from which the request was submitted."
            },
            "subject": {
              "name": "Subject",
              "type": "data",
              "description": "The subject line or summary of the request."
            },
            "assignee_name": {
              "name": "Assignee Name",
              "type": "data",
              "description": "The name of the technician currently assigned to the request."
            },
            "communication_history": {
              "name": "Communication History",
              "type": "data",
              "description": "A record of all past communications and interactions related to the request."
            },
            "work_logs": {
              "name": "Work Logs",
              "type": "data",
              "description": "Records detailing the work performed on a request."
            },
            "request_history": {
              "name": "Request History",
              "type": "data",
              "description": "A chronological log of all changes and events related to a specific request."
            },
            "requester_interaction_history": {
              "name": "Requester Interaction History",
              "type": "data",
              "description": "A compilation of all past requests and interactions initiated by a specific requester."
            },
            "analyze_option": {
              "name": "Analyze Option",
              "type": "action",
              "description": "A functionality to view detailed information and insights about a request."
            }
          }
        },
        "request_editing_&_quick_actions": {
          "name": "Request Editing & Quick Actions",
          "description": "Enables detailed editing of request information and provides quick action options for common fields like status, priority, urgency, severity, impact service, and assignee.",
          "category": "core",
          "entities": {
            "quick_action_icons": {
              "name": "Quick Action Icons",
              "type": "action",
              "description": "Small graphical elements providing rapid access to common request operations."
            },
            "quick_edit": {
              "name": "Quick Edit",
              "type": "action",
              "description": "A functionality allowing rapid modification of key request attributes like status, priority, or assignee."
            },
            "detailed_edit": {
              "name": "Detailed Edit",
              "type": "action",
              "description": "A comprehensive functionality to modify all editable details of a request."
            },
            "status_field": {
              "name": "Status Field",
              "type": "data",
              "description": "An editable data field for changing the current status of a request."
            },
            "priority_field": {
              "name": "Priority Field",
              "type": "data",
              "description": "An editable data field for changing the priority level of a request."
            },
            "urgency_field": {
              "name": "Urgency Field",
              "type": "data",
              "description": "An editable data field for setting the urgency of a request."
            },
            "severity_field": {
              "name": "Severity Field",
              "type": "data",
              "description": "An editable data field for setting the severity of a request."
            },
            "impact_service_field": {
              "name": "Impact Service Field",
              "type": "data",
              "description": "An editable data field for specifying the service impacted by the request."
            },
            "request_assignee_field": {
              "name": "Request Assignee Field",
              "type": "data",
              "description": "An editable data field for changing the assigned technician for a request."
            }
          }
        },
        "request_search_&_filtering": {
          "name": "Request Search & Filtering",
          "description": "Allows users to search for specific requests by number or assignee, and filter requests by date, date range, or other criteria using expandable filters.",
          "category": "core",
          "entities": {
            "search_bar": {
              "name": "Search Bar",
              "type": "action",
              "description": "A UI element allowing users to find specific requests by entering keywords, request numbers, or assignee names."
            },
            "request_number": {
              "name": "Request Number",
              "type": "data",
              "description": "A unique identifier used as a criterion for searching requests."
            },
            "assignee_name": {
              "name": "Assignee Name",
              "type": "data",
              "description": "The name of the technician used as a criterion for searching requests."
            },
            "calendar_filter": {
              "name": "Calendar Filter",
              "type": "action",
              "description": "A UI element enabling users to filter requests based on specific dates or date ranges."
            },
            "request_filters": {
              "name": "Request Filters",
              "type": "configuration",
              "description": "Predefined or customizable options used to narrow down the displayed list of requests."
            },
            "expand_icon_(for_filters)": {
              "name": "Expand Icon (for filters)",
              "type": "action",
              "description": "A UI element to reveal or hide the available request filter options."
            }
          }
        },
        "request_management_actions_(delete,_copy,_merge)": {
          "name": "Request Management Actions (Delete, Copy, Merge)",
          "description": "Provides actions to irreversibly delete requests, copy existing request details to create new ones, and merge multiple requests.",
          "category": "core",
          "entities": {
            "delete_action": {
              "name": "Delete Action",
              "type": "action",
              "description": "A functionality to permanently remove a request from the system."
            },
            "copy_action": {
              "name": "Copy Action",
              "type": "action",
              "description": "A functionality to duplicate an existing request, creating a new one with pre-filled details."
            },
            "merge_action": {
              "name": "Merge Action",
              "type": "action",
              "description": "A functionality to combine multiple related requests into a single request."
            }
          }
        },
        "attachment_management": {
          "name": "Attachment Management",
          "description": "Supports adding and viewing attachments related to requests.",
          "category": "core",
          "entities": {
            "attachment": {
              "name": "Attachment",
              "type": "resource",
              "description": "A file (e.g., document, image, email) associated with a request."
            },
            "attachment_list": {
              "name": "Attachment List",
              "type": "data",
              "description": "A display area showing all files linked to the current request."
            },
            "add_attachment_action": {
              "name": "Add Attachment Action",
              "type": "action",
              "description": "A functionality to upload and link files to a request."
            }
          }
        },
        "customizable_statuses_&_views": {
          "name": "Customizable Statuses & Views",
          "description": "Allows configuration of customized request statuses via the 'Workflow' module and customization of displayed details in summary cards and column selections.",
          "category": "extended",
          "entities": {
            "customized_statuses": {
              "name": "Customized Statuses",
              "type": "configuration",
              "description": "User-defined status options that can be configured to suit specific workflow requirements."
            },
            "workflow_module": {
              "name": "Workflow Module",
              "type": "resource",
              "description": "A system component where customized statuses and workflow rules are configured."
            },
            "summary_card_configuration": {
              "name": "Summary Card Configuration",
              "type": "configuration",
              "description": "The ability to customize which details are displayed on the request summary cards."
            },
            "column_selection_configuration": {
              "name": "Column Selection Configuration",
              "type": "configuration",
              "description": "The ability to customize which columns are displayed in the Grid View."
            },
            "configure_icon": {
              "name": "Configure Icon",
              "type": "action",
              "description": "A UI element that provides access to customization options for views and displayed details."
            }
          }
        },
        "request_tagging": {
          "name": "Request Tagging",
          "description": "Enables grouping requests using predefined tags for better organization and classification.",
          "category": "extended",
          "entities": {
            "tag": {
              "name": "Tag",
              "type": "data",
              "description": "A predefined label used to categorize and group requests."
            },
            "tagging_action": {
              "name": "Tagging Action",
              "type": "action",
              "description": "The process of applying one or more tags to a request."
            },
            "tag_management_module": {
              "name": "Tag Management Module",
              "type": "resource",
              "description": "A system component where request tags are defined and managed."
            },
            "general_settings": {
              "name": "General Settings",
              "type": "configuration",
              "description": "A section within the system where overall configurations, including tag management, are located."
            }
          }
        },
        "requester_interaction_history_display": {
          "name": "Requester Interaction History Display",
          "description": "Automatically displays a list of past requests and interactions a specific requester has had.",
          "category": "extended",
          "entities": {
            "requester_interaction_history": {
              "name": "Requester Interaction History",
              "type": "data",
              "description": "A display of all past requests and interactions associated with a specific requester."
            },
            "requester_name_field": {
              "name": "Requester Name Field",
              "type": "data",
              "description": "An input field where entering a requester's name triggers the display of their past interactions."
            }
          }
        },
        "escalation_to_ticket_conversion": {
          "name": "Escalation to Ticket Conversion",
          "description": "Allows agents to convert a request into a ticket if it impacts a service, facilitating escalation to appropriate teams.",
          "category": "integration",
          "entities": {
            "ticket": {
              "name": "Ticket",
              "type": "resource",
              "description": "A separate entity type, typically representing an incident or problem, distinct from a service request."
            },
            "convert_request_to_ticket_action": {
              "name": "Convert Request to Ticket Action",
              "type": "action",
              "description": "A functionality to transform a service request into a ticket, usually for issues impacting services."
            },
            "agent": {
              "name": "Agent",
              "type": "resource",
              "description": "A user role (e.g., service desk agent) who can perform the conversion from request to ticket."
            },
            "request_status_(open/in_progress)": {
              "name": "Request Status (Open/In Progress)",
              "type": "data",
              "description": "Specific conditions of a request's status that allow it to be converted into a ticket."
            }
          }
        },
        "knowledge_base_integration_(conversion_&_suggestion)": {
          "name": "Knowledge Base Integration (Conversion & Suggestion)",
          "description": "Enables conversion of resolved or closed requests into Knowledge Base articles and automatically suggests relevant KB articles during request creation.",
          "category": "integration",
          "entities": {
            "knowledge_base_(kb)_article": {
              "name": "Knowledge Base (KB) Article",
              "type": "resource",
              "description": "A document within a knowledge repository containing solutions, FAQs, or technical information."
            },
            "convert_request_to_kb_action": {
              "name": "Convert Request to KB Action",
              "type": "action",
              "description": "A functionality to create a new Knowledge Base article directly from a resolved or closed request."
            },
            "kb_icon": {
              "name": "KB Icon",
              "type": "action",
              "description": "A UI element indicating the availability of converting a request into a Knowledge Base article."
            },
            "request_status_(resolved/closed)": {
              "name": "Request Status (Resolved/Closed)",
              "type": "data",
              "description": "Specific conditions of a request's status that allow it to be converted into a Knowledge Base article."
            },
            "related_kb_articles": {
              "name": "Related KB Articles",
              "type": "data",
              "description": "Knowledge Base articles suggested by the system based on the content or title of a request."
            },
            "resolution_suggestion": {
              "name": "Resolution Suggestion",
              "type": "data",
              "description": "A proposed resolution for a request, often pulled from a related Knowledge Base article."
            }
          }
        },
        "change_management_integration": {
          "name": "Change Management Integration",
          "description": "Supports associating a request with a Change Request, allowing the creation or viewing of related change requests.",
          "category": "integration",
          "entities": {
            "change_request": {
              "name": "Change Request",
              "type": "resource",
              "description": "A formal request for an alteration to IT services or infrastructure, managed by the Change Management process."
            },
            "add_change_action": {
              "name": "Add Change Action",
              "type": "action",
              "description": "A functionality to link a new or existing change request to a service request."
            },
            "view_change_action": {
              "name": "View Change Action",
              "type": "action",
              "description": "A functionality to access and view details of a change request linked to a service request."
            },
            "request_status_(open/in_progress/on_hold)": {
              "name": "Request Status (Open/In Progress/On Hold)",
              "type": "data",
              "description": "Specific conditions of a request's status that allow a change request to be added or linked."
            }
          }
        }
      },
      "workflows": {
        "request_submission": {
          "name": "Request Submission",
          "description": "The initial process where a user or technician formally creates a service request through various channels such as a web portal, email, phone, mobile app, WhatsApp, or chatbot."
        },
        "request_triage_and_assignment": {
          "name": "Request Triage and Assignment",
          "description": "The process where service desk agents classify, categorize, prioritize, and assign the submitted request to the appropriate team or technician for handling, including providing initial support."
        },
        "request_fulfillment_and_resolution": {
          "name": "Request Fulfillment and Resolution",
          "description": "The core process where the assigned technician analyzes, diagnoses, and performs the necessary actions to fulfill the service request, providing the requested information or service."
        },
        "request_closure": {
          "name": "Request Closure",
          "description": "The final stage where the service desk technician marks the request as resolved, and the request is formally closed upon the requester's agreement or by an automated event."
        },
        "request_monitoring_and_communication": {
          "name": "Request Monitoring and Communication",
          "description": "The ongoing process of tracking the status, progress, and aging of a request throughout its lifecycle, including managing ownership and communicating updates to stakeholders."
        },
        "request_inter-module_conversion": {
          "name": "Request Inter-Module Conversion",
          "description": "The capability to transform a service request into other related IT service management entities, such as converting it into an incident ticket, linking it to a change request, or generating a Knowledge Base article from its resolution."
        },
        "request_administration_and_management": {
          "name": "Request Administration and Management",
          "description": "The set of administrative actions and interface interactions available to manage requests, including viewing details (Panel/Grid View), editing, deleting, copying, adding comments, and configuring display options."
        }
      }
    }
  },
  "relationships": {}
}